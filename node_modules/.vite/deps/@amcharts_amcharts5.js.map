{
  "version": 3,
  "sources": ["../../src/.internal/core/util/ResizeSensor.ts", "../../src/.internal/core/util/InterfaceColors.ts", "../../src/.internal/core/render/PointedRectangle.ts", "../../src/.internal/core/render/Tooltip.ts", "../../src/.internal/core/util/NumberFormatter.ts", "../../src/.internal/core/util/Timezone.ts", "../../src/.internal/core/util/DateFormatter.ts", "../../src/.internal/core/util/DurationFormatter.ts", "../../src/locales/en.ts", "../../src/.internal/core/util/Language.ts", "../../src/.internal/core/util/Matrix.ts", "../../svg-arc-to-cubic-bezier/modules/index.js", "../../src/.internal/core/render/backend/CanvasRenderer.ts", "../../src/.internal/core/Root.ts", "../../src/.internal/core/util/Modal.ts", "../../src/.internal/core/render/Bullet.ts", "../../src/.internal/core/render/Circle.ts", "../../src/.internal/core/render/Polygon.ts", "../../src/.internal/core/render/Ellipse.ts", "../../src/.internal/core/render/Star.ts", "../../src/.internal/core/render/gradients/Gradient.ts", "../../src/.internal/core/render/gradients/LinearGradient.ts", "../../src/.internal/core/render/HeatLegend.ts", "../../src/.internal/core/render/EditableLabel.ts", "../../src/.internal/core/render/Legend.ts", "../../src/.internal/core/util/Draw.ts", "../../src/.internal/core/render/Line.ts", "../../src/.internal/core/render/Picture.ts", "../../src/.internal/core/render/RadialText.ts", "../../src/.internal/core/render/RadialLabel.ts", "../../src/.internal/core/render/Triangle.ts", "../../src/.internal/core/render/Scrollbar.ts", "../../src/.internal/core/render/Slider.ts", "../../d3-shape/src/constant.js", "../../d3-shape/src/math.js", "../../d3-path/src/path.js", "../../d3-shape/src/path.js", "../../d3-shape/src/arc.js", "../../d3-shape/src/array.js", "../../d3-shape/src/curve/linear.js", "../../d3-shape/src/curve/radial.js", "../../d3-shape/src/symbol/asterisk.js", "../../d3-shape/src/symbol/diamond.js", "../../d3-shape/src/symbol/star.js", "../../d3-shape/src/symbol/triangle.js", "../../d3-shape/src/symbol/triangle2.js", "../../d3-shape/src/symbol/wye.js", "../../d3-shape/src/noop.js", "../../d3-shape/src/curve/basis.js", "../../d3-shape/src/curve/basisClosed.js", "../../d3-shape/src/curve/basisOpen.js", "../../d3-shape/src/curve/bundle.js", "../../d3-shape/src/curve/cardinal.js", "../../d3-shape/src/curve/cardinalClosed.js", "../../d3-shape/src/curve/cardinalOpen.js", "../../d3-shape/src/curve/catmullRom.js", "../../d3-shape/src/curve/catmullRomClosed.js", "../../d3-shape/src/curve/catmullRomOpen.js", "../../d3-shape/src/curve/linearClosed.js", "../../d3-shape/src/curve/monotone.js", "../../d3-shape/src/curve/natural.js", "../../d3-shape/src/curve/step.js", "../../src/.internal/core/render/Slice.ts", "../../src/.internal/core/render/Tick.ts", "../../src/.internal/core/render/patterns/GrainPattern.ts", "../../src/.internal/core/render/gradients/RadialGradient.ts", "../../src/.internal/core/render/patterns/CirclePattern.ts", "../../src/.internal/core/render/patterns/LinePattern.ts", "../../src/.internal/core/render/patterns/RectanglePattern.ts", "../../src/.internal/core/render/patterns/PathPattern.ts", "../../src/.internal/core/util/PatternSet.ts", "../../src/.internal/core/util/ColorSet.ts", "../../src/.internal/core/util/DataParser.ts", "../../src/.internal/core/util/DataProcessor.ts", "../../src/.internal/core/render/SpriteResizer.ts", "../../src/.internal/core/util/Net.ts"],
  "sourcesContent": ["/** @ignore *//** */\n\nimport type { IDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $utils from \"./Utils\";\n\n/**\n * @ignore\n */\ninterface Sensor {\n\taddTarget(target: Element, callback: () => void): void;\n\tremoveTarget(target: Element): void;\n}\n\n/**\n * @ignore\n */\ndeclare const ResizeObserver: any;\n\n/**\n * @ignore\n */\nclass Native implements Sensor {\n\tprivate _observer: any;\n\tprivate _targets: Array<{ target: Element, callback: () => void }> = [];\n\n\tconstructor() {\n\t\tthis._observer = new ResizeObserver((entries: Array<any>) => {\n\t\t\t$array.each(entries, (entry) => {\n\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\tif (x.target === entry.target) {\n\t\t\t\t\t\tx.callback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tthis._observer.observe(target, { box: \"border-box\" });\n\t\tthis._targets.push({ target, callback });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\tthis._observer.unobserve(target);\n\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\t}\n}\n\n/**\n * @ignore\n */\ninterface ClientBounds {\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\ttop: number,\n\tbottom: number,\n\tx: number,\n\ty: number\n}\n\n\n/**\n * @ignore\n */\nclass Raf implements Sensor {\n\tpublic static delay: number = 200;\n\n\tprivate _timer: number | null = null;\n\tprivate _targets: Array<{ target: Element, callback: () => void, size: ClientRect | DOMRect | ClientBounds }> = [];\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tif (this._timer === null) {\n\t\t\tlet lastTime: number | null = null;\n\n\t\t\tconst loop = () => {\n\t\t\t\tconst currentTime = Date.now();\n\n\t\t\t\tif (lastTime === null || currentTime > (lastTime + Raf.delay)) {\n\t\t\t\t\tlastTime = currentTime;\n\n\t\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\t\tlet newSize = x.target.getBoundingClientRect();\n\n\t\t\t\t\t\tif (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n\t\t\t\t\t\t\tx.size = newSize;\n\t\t\t\t\t\t\tx.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (this._targets.length === 0) {\n\t\t\t\t\tthis._timer = null;\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t}\n\n\t\t// We start off with fake bounds so that sensor always kicks in\n\t\tlet size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\n\t\tthis._targets.push({ target, callback, size });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\n\t\tif (this._targets.length === 0) {\n\t\t\tif (this._timer !== null) {\n\t\t\t\tcancelAnimationFrame(this._timer);\n\t\t\t\tthis._timer = null;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * @ignore\n */\nlet observer: Sensor | null = null;\n\n/**\n * @ignore\n */\nfunction makeSensor(): Sensor {\n\tif (observer === null) {\n\t\tif (typeof ResizeObserver !== \"undefined\") {\n\t\t\tobserver = new Native();\n\n\t\t} else {\n\t\t\tobserver = new Raf();\n\t\t}\n\t}\n\n\treturn observer;\n}\n\n/**\n * @ignore\n */\nexport class ResizeSensor implements IDisposer {\n\tprivate _sensor: Sensor;\n\tprivate _element: Element;\n\tprivate _listener: IDisposer;\n\tprivate _disposed: boolean = false;\n\n\tconstructor(element: Element, callback: () => void) {\n\t\tthis._sensor = makeSensor();\n\t\tthis._element = element;\n\n\t\t// This is needed because we need to know when the window is zoomed\n\t\tthis._listener = $utils.onZoom(callback);\n\n\t\tthis._sensor.addTarget(element, callback);\n\t}\n\n\tpublic isDisposed() {\n\t\treturn this._disposed;\n\t}\n\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._sensor.removeTarget(this._element);\n\t\t\tthis._listener.dispose();\n\t\t}\n\t}\n\n\tpublic get sensor(): Sensor {\n\t\treturn this._sensor;\n\t}\n}\n", "import type { Color } from \"./Color\"\n\nimport { Entity, IEntitySettings } from \"./Entity\"\n\n\nexport interface IInterfaceColorsSettings extends IEntitySettings {\n\n\t/**\n\t * Used for generic outlines.\n\t */\n\tstroke?: Color,\n\n\t/**\n\t * Used for generic fills.\n\t */\n\tfill?: Color,\n\n\t/**\n\t * Primary button fill color.\n\t */\n\tprimaryButton?: Color,\n\n\t/**\n\t * Primary button fill color on hover.\n\t */\n\tprimaryButtonHover?: Color,\n\n\t/**\n\t * Primary button fill color when pressing down on it.\n\t */\n\tprimaryButtonDown?: Color,\n\n\t/**\n\t * Primary button fill color when it is set as active.\n\t */\n\tprimaryButtonActive?: Color,\n\n\t/**\n\t * Primary button fill color when it is set as disabled.\n\t */\n\tprimaryButtonDisabled?: Color,\t\n\n\t/**\n\t * Primary button text color when it is set as disabled.\n\t */\n\tprimaryButtonTextDisabled?: Color,\n\n\t/**\n\t * Primary button text color.\n\t */\n\tprimaryButtonText?: Color,\t\n\n\t/**\n\t * Primary button stroke (outline) color.\n\t */\n\tprimaryButtonStroke?: Color,\n\n\t/**\n\t * Secondary button fill color.\n\t */\n\tsecondaryButton?: Color,\n\n\t/**\n\t * Secondary button fill color on hover.\n\t */\n\tsecondaryButtonHover?: Color,\n\n\t/**\n\t * Secondary button fill color when pressing down on it.\n\t */\n\tsecondaryButtonDown?: Color,\n\n\t/**\n\t * Secondary button fill color when it is set as active.\n\t */\n\tsecondaryButtonActive?: Color,\n\n\t/**\n\t * Secondary button text color.\n\t */\n\tsecondaryButtonText?: Color,\n\n\t/**\n\t * Secondary button stroke (outline) color.\n\t */\n\tsecondaryButtonStroke?: Color,\n\n\t/**\n\t * Grid color.\n\t */\n\tgrid?: Color,\n\n\t/**\n\t * Chart background color.\n\t */\n\tbackground?: Color,\n\n\t/**\n\t * Alternative background, for elements that need to contrast with primary\n\t * background.\n\t */\n\talternativeBackground?: Color,\n\n\t/**\n\t * Label text color.\n\t */\n\ttext?: Color,\n\n\t/**\n\t * Alternative text color, used for inverted (dark) backgrounds.\n\t * @type {[type]}\n\t */\n\talternativeText?: Color,\n\n\t/**\n\t * Color for disabled elements.\n\t */\n\tdisabled?: Color,\n\n\t/**\n\t * Color to indicate positive value.\n\t */\n\tpositive?: Color,\n\n\t/**\n\t * Color to indicate negative value.\n\t */\n\tnegative?: Color\n\n}\n\n\n/**\n * Presets for common UI elements.\n */\nexport class InterfaceColors extends Entity {\n\tpublic static className: string = \"InterfaceColors\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([InterfaceColors.className]);\n\n\tdeclare public _settings: IInterfaceColorsSettings;\n}\n", "import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\nimport * as $math from \"../util/Math\";\n\nexport interface IPointedRectangleSettings extends IGraphicsSettings {\n\n\t/**\n\t * A width of the pinter's (stem's) thick end (base) in pixels.\n\t */\n\tpointerBaseWidth?: number;\n\n\t/**\n\t * A length of the pinter (stem) in pixels.\n\t */\n\tpointerLength?: number;\n\n\t/**\n\t * X coordinate the shape is pointing to.\n\t */\n\tpointerX?: number;\n\n\t/**\n\t * Y coordinate the shape is pointing to.\n\t */\n\tpointerY?: number;\n\n\t/**\n\t * Corner radius in pixels.\n\t */\n\tcornerRadius?: number;\n}\n\nexport interface IPointedRectanglePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a rectangle with a pointer.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class PointedRectangle extends Graphics {\n\n\tdeclare public _settings: IPointedRectangleSettings;\n\tdeclare public _privateSettings: IPointedRectanglePrivate;\n\n\tpublic static className: string = \"PointedRectangle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([PointedRectangle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\n\t\t\tthis.markDirtyBounds();\n\n\t\t\tlet w = this.width();\n\t\t\tlet h = this.height();\n\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tlet cr = this.get(\"cornerRadius\", 8);\n\t\t\t\tcr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\n\n\t\t\t\tlet x = this.get(\"pointerX\", 0);\n\t\t\t\tlet y = this.get(\"pointerY\", 0);\n\t\t\t\tlet bwh = this.get(\"pointerBaseWidth\", 15) / 2;\n\n\t\t\t\t// corner coordinates\n\t\t\t\t// top left\n\t\t\t\tlet xtl = 0;\n\t\t\t\tlet ytl = 0;\n\t\t\t\t// top right\n\t\t\t\tlet xtr = w;\n\t\t\t\tlet ytr = 0;\n\t\t\t\t// bottom right\n\t\t\t\tlet xbr = w;\n\t\t\t\tlet ybr = h;\n\t\t\t\t// bottom left\n\t\t\t\tlet xbl = 0;\n\t\t\t\tlet ybl = h;\n\n\t\t\t\t// find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\n\t\t\t\t// d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\n\t\t\t\tlet d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\n\t\t\t\tlet d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\n\n\t\t\t\tconst display = this._display;\n\t\t\t\t// top\n\t\t\t\tdisplay.moveTo(cr, 0);\n\n\t\t\t\tif (d1 > 0 && d2 > 0) {\n\t\t\t\t\tlet stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\n\t\t\t\t\ty = $math.fitToRange(y, -Infinity, 0);\n\n\t\t\t\t\tdisplay.lineTo(stemX - bwh, 0);\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(stemX + bwh, 0);\n\t\t\t\t}\n\n\t\t\t\tdisplay.lineTo(w - cr, 0);\n\t\t\t\tdisplay.arcTo(w, 0, w, cr, cr);\n\n\t\t\t\t// right\n\t\t\t\tif (d1 > 0 && d2 < 0) {\n\t\t\t\t\tlet stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\n\t\t\t\t\tx = $math.fitToRange(x, w, Infinity);\n\t\t\t\t\tdisplay.lineTo(w, cr);\n\t\t\t\t\tdisplay.lineTo(w, Math.max(stemY - bwh, cr));\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(w, stemY + bwh);\n\t\t\t\t}\n\t\t\t\tdisplay.lineTo(w, h - cr);\n\t\t\t\tdisplay.arcTo(w, h, w - cr, h, cr);\n\n\t\t\t\t// bottom\n\t\t\t\tif (d1 < 0 && d2 < 0) {\n\t\t\t\t\tlet stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\n\t\t\t\t\ty = $math.fitToRange(y, h, Infinity);\n\n\t\t\t\t\tdisplay.lineTo(w - cr, h);\n\t\t\t\t\tdisplay.lineTo(stemX + bwh, h);\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(stemX - bwh, h);\n\t\t\t\t}\n\t\t\t\tdisplay.lineTo(cr, h)\n\t\t\t\tdisplay.arcTo(0, h, 0, h - cr, cr);\n\n\n\t\t\t\t// left\n\t\t\t\tif (d1 < 0 && d2 > 0) {\n\t\t\t\t\tlet stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\n\t\t\t\t\tx = $math.fitToRange(x, -Infinity, 0);\n\t\t\t\t\tdisplay.lineTo(0, h - cr);\n\t\t\t\t\tdisplay.lineTo(0, stemY + bwh);\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(0, Math.max(stemY - bwh, cr));\n\t\t\t\t}\n\t\t\t\tdisplay.lineTo(0, cr);\n\t\t\t\tdisplay.arcTo(0, 0, cr, 0, cr);\n\t\t\t\tdisplay.closePath();\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { IBounds } from \"../util/IBounds\";\nimport type { IPoint } from \"../util/IPoint\";\nimport type { Pattern } from \"../render/patterns/Pattern\";\nimport type { Time } from \"../util/Animation\";\nimport type { Sprite } from \"../render/Sprite\";\nimport type { Graphics } from \"../render/Graphics\";\nimport type { IPointerEvent } from \"../render/backend/Renderer\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { Root } from \"../Root\";\nimport type { Template } from \"../util/Template\";\nimport type { Entity } from \"../util/Entity\";\n\nimport { MultiDisposer, IDisposer } from \"../util/Disposer\";\nimport { Label } from \"../render/Label\";\nimport { PointedRectangle } from \"../render/PointedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\nimport { Percent } from \"../util/Percent\";\nimport { Color } from \"../util/Color\";\n\nimport * as $math from \"../util/Math\";\nimport * as $array from \"../util/Array\";\nimport * as $utils from \"../util/Utils\";\n\n\nexport interface ITooltipSettings extends IContainerSettings {\n\n\t/**\n\t * Text to use for tooltip's label.\n\t */\n\tlabelText?: string;\n\n\t/**\n\t * HTML content to use for tooltip's label.\n\t *\n\t * @since 5.2.11\n\t */\n\tlabelHTML?: string;\n\n\t/**\n\t * A screen reader content for the label.\n\t *\n\t * Used in conjuction with `readerAnnounce`. If it is set to `true`, and\n\t * `labelAriaLabel` is set, its contents will be read out by a screen reader\n\t * when tooltip is shown or its data item changes.\n\t *\n\t * Otherwise, regular `labelText` (or `text` set directly on tooltip label) will\n\t * be used for scree reader announcement.\n\t *\n\t * @since 5.9.2\n\t */\n\tlabelAriaLabel?: string;\n\n\t/**\n\t * A direction of the tooltip pointer.\n\t *\n\t * https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Orientation\n\t */\n\tpointerOrientation?: \"left\" | \"right\" | \"up\" | \"down\" | \"vertical\" | \"horizontal\";\n\n\t/**\n\t * If set to `true` will use the same `fill` color for its background as\n\t * its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @default false\n\t */\n\tgetFillFromSprite?: boolean;\n\n\t/**\n\t * If set to `true` will use the same `fill` color as its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @default false\n\t */\n\tgetLabelFillFromSprite?: boolean;\n\n\t/**\n\t * If set to `true` will use the same `stroke` color as its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @default false\n\t */\n\tgetStrokeFromSprite?: boolean;\n\n\t/**\n\t * Screen bounds to constrain the tooltip within.\n\t */\n\tbounds?: IBounds;\n\n\t/**\n\t * If set to `true` tooltip will adjust its text color for better visibility\n\t * on its background.\n\t *\n\t * @default true\n\t */\n\tautoTextColor?: boolean;\n\n\t/**\n\t * Screen coordinates the tooltip show point to.\n\t */\n\tpointTo?: IPoint;\n\n\t/**\n\t * Duration in milliseconds for tooltip position change, e.g. when tooltip\n\t * is jumping from one target to another.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function for tooltip animation.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\t/**\n\t * A target element tooltip is shown fow.\n\t */\n\ttooltipTarget?: Sprite;\n\n\t/**\n\t * If set to `true`, tooltip's target element will considered to be hovered\n\t * when mouse pointer is over tooltip itself.\n\t *\n\t * @since 5.2.14\n\t */\n\tkeepTargetHover?: boolean;\n\n\t/**\n\t * If set to `true` the tooltip contents will be read out by a screen reader\n\t * when displayed or changed.\n\t *\n\t * @default false\n\t * @since 5.9.2\n\t */\n\treaderAnnounce?: boolean;\n\n}\n\nexport interface ITooltipPrivate extends IContainerPrivate {\n}\n\n/**\n * Creates a tooltip.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\n * @important\n */\nexport class Tooltip extends Container {\n\n\tpublic _fx: number = 0;\n\tpublic _fy: number = 0;\n\n\tdeclare public _settings: ITooltipSettings;\n\tdeclare public _privateSettings: ITooltipPrivate;\n\n\tprotected _label!: Label;\n\tpublic static className: string = \"Tooltip\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Tooltip.className]);\n\n\tprotected _fillDp: IDisposer | undefined;\n\tprotected _strokeDp: IDisposer | undefined;\n\tprotected _labelDp: IDisposer | undefined;\n\n\tprotected _w: number = 0;\n\tprotected _h: number = 0;\n\n\tprotected _keepHoverDp: MultiDisposer | undefined;\n\tprotected _htmlContentHovered: boolean = false;\n\n\tconstructor(root: Root, settings: Entity[\"_settings\"], isReal: boolean, templates: Array<Template<Entity>> = []) {\n\t\tsuper(root, settings, isReal, templates);\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\n\n\t\tsuper._afterNew();\n\n\t\tconst background: Graphics = this._setDefaultFn(\"background\", () => {\n\t\t\treturn PointedRectangle.new(this._root, {});\n\t\t});\n\n\t\tbackground.set(\"themeTags\", [\"tooltip\", \"background\"]);\n\n\t\tthis._label = this.children.push(Label.new(this._root, {}));\n\n\t\tthis._disposers.push(this._label.events.on(\"boundschanged\", () => {\n\t\t\tthis._updateBackground();\n\t\t}))\n\n\t\tthis._disposers.push(this.on(\"bounds\", () => {\n\t\t\tthis._updateBackground();\n\t\t}))\n\n\t\tthis._updateTextColor();\n\n\t\tthis._root.tooltipContainer.children.push(this);\n\t\tthis.hide(0);\n\n\t\tthis._disposers.push(this.label.onPrivate(\"htmlElement\", (htmlElement) => {\n\t\t\tif (htmlElement) {\n\t\t\t\tthis._disposers.push($utils.addEventListener(htmlElement, \"pointerover\", (_ev) => {\n\t\t\t\t\tthis._htmlContentHovered = true;\n\t\t\t\t}));\n\t\t\t\tthis._disposers.push($utils.addEventListener(htmlElement, \"pointerout\", (_ev) => {\n\t\t\t\t\tthis._htmlContentHovered = false;\n\t\t\t\t}));\n\t\t\t}\n\t\t}))\n\n\t\tthis.on(\"visible\", (_ev) => {\n\t\t\tthis._handleReaderAnnouncement();\n\t\t});\n\n\t\tthis.label.events.on(\"dataitemchanged\", (_ev) => {\n\t\t\tthis._handleReaderAnnouncement();\n\t\t});\n\n\t\tthis._root._tooltips.push(this);\n\t}\n\n\tprotected _handleReaderAnnouncement() {\n\t\tif (this.get(\"readerAnnounce\") && this.isVisibleDeep()) {\n\t\t\tthis._root.readerAlert(this.label.getAccessibleText());\n\t\t}\n\t}\n\n\t/**\n\t * A [[Label]] element for the tooltip.\n\t *\n\t * @readonly\n\t * @return Label\n\t */\n\tpublic get label(): Label {\n\t\treturn this._label;\n\t}\n\n\t/**\n\t * Permanently disposes the tooltip.\n\t */\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\t$array.remove(this._root._tooltips, this);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"pointerOrientation\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\n\t\t\tthis.get(\"background\")!._markDirtyKey(\"width\");\n\t\t}\n\n\t\tconst labelText = this.get(\"labelText\");\n\t\tif (labelText != null) {\n\t\t\tthis.label.set(\"text\", this.get(\"labelText\"));\n\t\t}\n\t\tconst labelHTML = this.get(\"labelHTML\");\n\t\tif (labelHTML != null) {\n\t\t\tthis.label.set(\"html\", this.get(\"labelHTML\"));\n\t\t}\n\t\tconst labelAriaLabel = this.get(\"labelAriaLabel\");\n\t\tif (labelAriaLabel != null) {\n\t\t\tthis.label.set(\"ariaLabel\", this.get(\"labelAriaLabel\"));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pointTo\") || this.isDirty(\"pointerOrientation\")) {\n\t\t\t// can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\n\t\t\tthis._updateBackground();\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipTarget\")) {\n\t\t\tthis.updateBackgroundColor();\n\t\t}\n\n\t\tif (this.isDirty(\"keepTargetHover\")) {\n\t\t\tconst keephover = this.get(\"keepTargetHover\");\n\t\t\tif (keephover) {\n\t\t\t\tconst bg = this.get(\"background\")!;\n\t\t\t\tthis._keepHoverDp = new MultiDisposer([\n\t\t\t\t\tbg.events.on(\"pointerover\", (_ev) => {\n\t\t\t\t\t\tlet target = this.get(\"tooltipTarget\");\n\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\tif (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\n\t\t\t\t\t\t\t\ttarget = target.parent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget.hover();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tbg.events.on(\"pointerout\", (_ev) => {\n\t\t\t\t\t\tlet target = this.get(\"tooltipTarget\");\n\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\tif (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\n\t\t\t\t\t\t\t\ttarget = target.parent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!this._htmlContentHovered) {\n\t\t\t\t\t\t\t\ttarget.unhover();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t]);\n\n\t\t\t\tthis.label.onPrivate(\"htmlElement\", (htmlElement: any) => {\n\t\t\t\t\tif (this._keepHoverDp && htmlElement) {\n\t\t\t\t\t\tthis._keepHoverDp.disposers.push($utils.addEventListener<PointerEvent | MouseEvent>(htmlElement, \"pointerleave\", (ev: IPointerEvent) => {\n\t\t\t\t\t\t\tconst outEvent = this.root._renderer.getEvent(ev);\n\t\t\t\t\t\t\tbg.events.dispatch(\"pointerout\", {\n\t\t\t\t\t\t\t\ttype: \"pointerout\",\n\t\t\t\t\t\t\t\toriginalEvent: outEvent.event,\n\t\t\t\t\t\t\t\tpoint: outEvent.point,\n\t\t\t\t\t\t\t\tsimulated: false,\n\t\t\t\t\t\t\t\ttarget: bg\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._keepHoverDp) {\n\t\t\t\t\tthis._keepHoverDp.dispose();\n\t\t\t\t\tthis._keepHoverDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _onShow() {\n\t\tsuper._onShow();\n\t\tthis.updateBackgroundColor();\n\t}\n\n\n\tpublic updateBackgroundColor() {\n\t\tlet tooltipTarget = this.get(\"tooltipTarget\");\n\t\tconst background = this.get(\"background\");\n\t\tlet fill: Color | undefined;\n\t\tlet stroke: Color | undefined;\n\n\n\t\tif (tooltipTarget && background) {\n\n\t\t\tfill = tooltipTarget.get(\"fill\" as any);\n\t\t\tstroke = tooltipTarget.get(\"stroke\" as any);\n\n\t\t\tif (fill == null) {\n\t\t\t\tfill = stroke;\n\t\t\t}\n\n\t\t\tif (this.get(\"getFillFromSprite\")) {\n\n\t\t\t\tif (this._fillDp) {\n\t\t\t\t\tthis._fillDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tbackground.set(\"fill\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._fillDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tbackground.set(\"fill\", fill as any);\n\t\t\t\t\t\tthis._updateTextColor(fill);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis._disposers.push(this._fillDp);\n\t\t\t}\n\n\t\t\tif (this.get(\"getStrokeFromSprite\")) {\n\n\t\t\t\tif (this._strokeDp) {\n\t\t\t\t\tthis._strokeDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tbackground.set(\"stroke\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._strokeDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tbackground.set(\"stroke\", fill as any);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._strokeDp);\n\t\t\t}\n\n\t\t\tif (this.get(\"getLabelFillFromSprite\")) {\n\n\t\t\t\tif (this._labelDp) {\n\t\t\t\t\tthis._labelDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tthis.label.set(\"fill\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._labelDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tthis.label.set(\"fill\", fill as any);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._labelDp);\n\t\t\t}\n\t\t}\n\n\t\tthis._updateTextColor(fill);\n\t}\n\n\n\tprotected _updateTextColor(fill?: Color | Pattern) {\n\t\tif (this.get(\"autoTextColor\")) {\n\t\t\tif (fill == null) {\n\t\t\t\tfill = this.get(\"background\")!.get(\"fill\") as Color;\n\t\t\t}\n\n\t\t\tif (fill == null) {\n\t\t\t\tfill = this._root.interfaceColors.get(\"background\");\n\t\t\t}\n\n\t\t\tif (fill instanceof Color) {\n\t\t\t\tthis.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tthis.label._setDataItem(dataItem);\n\t}\n\n\n\tprotected _updateBackground() {\n\t\tsuper.updateBackground();\n\t\tconst parent = this._root.container;\n\n\t\tif (parent) {\n\n\t\t\tlet cw = 0.5;\n\t\t\tlet ch = 0.5;\n\n\t\t\tlet centerX = this.get(\"centerX\");\n\t\t\tif (centerX instanceof Percent) {\n\t\t\t\tcw = centerX.value;\n\t\t\t}\n\n\t\t\tlet centerY = this.get(\"centerY\");\n\t\t\tif (centerY instanceof Percent) {\n\t\t\t\tch = centerY.value;\n\t\t\t}\n\n\t\t\tlet parentW = parent.width();\n\t\t\tlet parentH = parent.height();\n\n\t\t\tlet tooltipContainer = this.parent;\n\t\t\tlet xx = 0;\n\t\t\tlet yy = 0;\n\t\t\tif (tooltipContainer) {\n\t\t\t\txx = tooltipContainer.x();\n\t\t\t\tyy = tooltipContainer.y();\n\n\t\t\t\tconst layerMargin = tooltipContainer.get(\"layerMargin\");\n\t\t\t\tif (layerMargin) {\n\t\t\t\t\txx += layerMargin.left || 0;\n\t\t\t\t\tyy += layerMargin.top || 0;\n\t\t\t\t\tparentW += (layerMargin.left || 0) + (layerMargin.right || 0);\n\t\t\t\t\tparentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\n\n\t\t\tthis._updateBounds();\n\n\t\t\tlet w = this.width();\n\t\t\tlet h = this.height();\n\n\t\t\t// use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\n\t\t\tif (w === 0) {\n\t\t\t\tw = this._w;\n\t\t\t}\n\n\t\t\tif (h === 0) {\n\t\t\t\th = this._h;\n\t\t\t}\n\n\t\t\tlet pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\n\t\t\tlet x = pointTo.x;\n\t\t\tlet y = pointTo.y;\n\n\t\t\tlet pointerOrientation = this.get(\"pointerOrientation\");\n\n\t\t\tlet background = this.get(\"background\");\n\t\t\tlet pointerLength = 0;\n\t\t\tlet bgStrokeSizeY = 0;\n\t\t\tlet bgStrokeSizeX = 0;\n\n\t\t\tif (background instanceof PointedRectangle) {\n\t\t\t\tpointerLength = background.get(\"pointerLength\", 0);\n\t\t\t\tbgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\n\t\t\t\tbgStrokeSizeX = bgStrokeSizeY;\n\t\t\t\tbackground.set(\"width\", w);\n\t\t\t\tbackground.set(\"height\", h);\n\t\t\t}\n\n\t\t\tlet pointerX = 0;\n\t\t\tlet pointerY = 0;\n\n\t\t\tlet boundsW = bounds.right - bounds.left;\n\t\t\tlet boundsH = bounds.bottom - bounds.top;\n\n\n\t\t\t// horizontal\n\t\t\tif (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\n\t\t\t\tbgStrokeSizeY = 0;\n\t\t\t\tif (pointerOrientation == \"horizontal\") {\n\t\t\t\t\tif (x > bounds.left + boundsW / 2) {\n\t\t\t\t\t\tx -= (w * (1 - cw) + pointerLength);\n\t\t\t\t\t\tbgStrokeSizeX *= -1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tx += (w * cw + pointerLength);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pointerOrientation == \"left\") {\n\t\t\t\t\tx += (w * (1 - cw) + pointerLength);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx -= (w * cw + pointerLength);\n\t\t\t\t\tbgStrokeSizeX *= -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// vertical pointer\n\t\t\telse {\n\t\t\t\tbgStrokeSizeX = 0;\n\t\t\t\tif (pointerOrientation == \"vertical\") {\n\t\t\t\t\tif (y > bounds.top + h / 2 + pointerLength) {\n\t\t\t\t\t\ty -= (h * (1 - ch) + pointerLength);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ty += (h * ch + pointerLength);\n\t\t\t\t\t\tbgStrokeSizeY *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pointerOrientation == \"down\") {\n\t\t\t\t\ty -= (h * (1 - ch) + pointerLength);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ty += (h * ch + pointerLength);\n\t\t\t\t\tbgStrokeSizeY *= -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\n\t\t\ty = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\n\n\t\t\tpointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\n\t\t\tpointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\n\n\t\t\tthis._fx = x;\n\t\t\tthis._fy = y;\n\n\t\t\tconst animationDuration = this.get(\"animationDuration\", 0);\n\n\t\t\tif (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\n\t\t\t\tconst animationEasing = this.get(\"animationEasing\");\n\t\t\t\tthis.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\n\t\t\t\tthis.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"x\", x);\n\t\t\t\tthis.set(\"y\", y);\n\t\t\t}\n\n\t\t\tif (background instanceof PointedRectangle) {\n\t\t\t\tbackground.set(\"pointerX\", pointerX);\n\t\t\t\tbackground.set(\"pointerY\", pointerY);\n\t\t\t}\n\n\t\t\tif (w > 0) {\n\t\t\t\tthis._w = w;\n\t\t\t}\n\t\t\tif (h > 0) {\n\t\t\t\tthis._h = h;\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { Language } from \"./Language\";\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\nimport { TextFormatter } from \"./TextFormatter\";\n\nimport * as $object from \"./Object\";\nimport * as $utils from \"./Utils\";\nimport * as $type from \"./Type\";\n\n/**\n * @ignore\n */\nexport interface INumberSuffix {\n\tnumber: number;\n\tsuffix: string;\n}\n\nexport interface INumberFormatterSettings extends IEntitySettings {\n\n\t/**\n\t * Number format to be used when formatting numbers.\n\t *\n\t * @default \"#,###.#####\"\n\t */\n\tnumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * A threshold value for negative numbers.\n\t *\n\t * @default 0\n\t */\n\tnegativeBase?: number;\n\n\t/**\n\t * Prefixes and thresholds to group big numbers into, e.g. 1M.\n\t *\n\t * Used in conjunction with `a` modifier of the number format.\n\t */\n\tbigNumberPrefixes?: INumberSuffix[];\n\n\t/**\n\t * Prefixes and thresholds to group small numbers into, e.g. 1m.\n\t *\n\t * Used in conjunction with `a` modifier of the number format.\n\t */\n\tsmallNumberPrefixes?: INumberSuffix[];\n\n\t/**\n\t * All numbers below this value are considered small.\n\t *\n\t * @default 1\n\t */\n\tsmallNumberThreshold?: number;\n\n\t/**\n\t * Prefixes to and thresholds to use when grouping data size numbers, e.g. 1MB.\n\t *\n\t * Used in conjunction with `b` modifier of the number format.\n\t */\n\tbytePrefixes?: INumberSuffix[];\n\n\t/**\n\t * Indicates which fields in data should be considered numeric.\n\t *\n\t * It is used when formatting data placeholder values.\n\t */\n\tnumericFields?: string[];\n\n\t/**\n\t * Locales if you are using date formats in `Intl.NumberFormatOptions` syntax.\n\t *\n\t * @see (@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat) about using Intl for number formatting\n\t * @param value Locales\n\t */\n\tintlLocales?: string;\n\n\t/**\n\t * If set to `true` will force the number string to be LTR, even if RTL is\n\t * enabled.\n\t * \n\t * @default false\n\t * @since 5.3.13\n\t */\n\tforceLTR?: boolean;\n\n}\n\nexport interface INumberFormatterPrivate extends IEntityPrivate {\n}\n\n/**\n * Number formatter\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\n * @important\n */\nexport class NumberFormatter extends Entity {\n\tdeclare public _settings: INumberFormatterSettings;\n\tdeclare public _privateSettings: INumberFormatterPrivate;\n\n\tprotected _setDefaults() {\n\t\t// Defaults\n\t\tthis._setDefault(\"negativeBase\", 0);\n\t\tthis._setDefault(\"numberFormat\", \"#,###.#####\");\n\t\tthis._setDefault(\"smallNumberThreshold\", 1.00);\n\n\t\tconst bns = \"_big_number_suffix_\";\n\t\tconst sns = \"_small_number_suffix_\";\n\t\tconst bs = \"_byte_suffix_\";\n\n\t\tthis._setDefault(\"bigNumberPrefixes\", [\n\t\t\t{ \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\n\t\t\t{ \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\n\t\t\t{ \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\n\t\t\t{ \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\n\t\t\t{ \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\n\t\t\t{ \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\n\t\t\t{ \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\n\t\t\t{ \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\n\t\t]);\n\n\t\tthis._setDefault(\"smallNumberPrefixes\", [\n\t\t\t{ \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\n\t\t\t{ \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\n\t\t\t{ \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\n\t\t\t{ \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\n\t\t\t{ \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\n\t\t\t{ \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\n\t\t\t{ \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\n\t\t\t{ \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\n\t\t]);\n\n\t\tthis._setDefault(\"bytePrefixes\", [\n\t\t\t{ \"number\": 1, suffix: this._t(bs + \"B\") },\n\t\t\t{ \"number\": 1024, suffix: this._t(bs + \"KB\") },\n\t\t\t{ \"number\": 1048576, suffix: this._t(bs + \"MB\") },\n\t\t\t{ \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\n\t\t\t{ \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\n\t\t\t{ \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\n\t\t]);\n\n\t\tsuper._setDefaults();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t}\n\n\t/**\n\t * Formats the number according to specific format.\n\t *\n\t * @param value   Value to format\n\t * @param format  Format to apply\n\t * @return Formatted number\n\t */\n\tpublic format(value: number | string, format?: string | Intl.NumberFormatOptions, precision?: number): string {\n\n\t\t// no format passed in or \"Number\"\n\t\tif (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\n\t\t\tformat = this.get(\"numberFormat\", \"\");\n\t\t}\n\n\t\t// Init return value\n\t\tlet formatted;\n\n\t\t// Cast to number just in case\n\t\t// TODO: maybe use better casting\n\t\tlet source: number = Number(value);\n\n\t\t// Is it a built-in format or Intl.NumberFormatOptions\n\t\tif ($type.isObject(format)) {\n\t\t\ttry {\n\t\t\t\tif (this.get(\"intlLocales\")) {\n\t\t\t\t\treturn new Intl.NumberFormat(this.get(\"intlLocales\"), <Intl.NumberFormatOptions>format).format(source);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn new Intl.NumberFormat(undefined, <Intl.NumberFormatOptions>format).format(source);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treturn \"Invalid\";\n\t\t\t}\n\n\t\t}\n\t\telse {\n\n\t\t\t// Clean format\n\t\t\tformat = $utils.cleanFormat(format!);\n\n\t\t\t// Get format info (it will also deal with parser caching)\n\t\t\tlet info = this.parseFormat(format, this._root.language);\n\n\n\t\t\t// format and replace the number\n\t\t\tlet details;\n\t\t\tif (source > this.get(\"negativeBase\")) {\n\t\t\t\tdetails = info.positive;\n\t\t\t}\n\t\t\telse if (source < this.get(\"negativeBase\")) {\n\t\t\t\tdetails = info.negative;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdetails = info.zero;\n\t\t\t}\n\n\t\t\t// Adjust precision\n\t\t\tif (precision != null && !details.mod) {\n\t\t\t\tdetails = $object.copy(details);\n\t\t\t\tdetails.decimals.active = source == 0 ? 0 : precision;\n\t\t\t}\n\n\t\t\t// Format\n\t\t\tformatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\n\n\t\t}\n\n\t\tif (this.get(\"forceLTR\") === true) {\n\t\t\tformatted = \"‎\" + formatted;\n\t\t}\n\n\t\treturn formatted;\n\t}\n\n\t/**\n\t * Parses supplied format into structured object which can be used to format\n\t * the number.\n\t *\n\t * @param format Format string, i.e. \"#,###.00\"\n\t * @param language Language\n\t * @ignore\n\t */\n\tprotected parseFormat(format: string, language: Language): any {\n\n\t\t// Check cache\n\t\t// TODO\n\t\t// let cached = this.getCache(format);\n\t\t// if (cached != null) {\n\t\t// \treturn cached;\n\t\t// }\n\n\t\tconst thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\n\t\tconst decimalSeparator = language.translateEmpty(\"_decimalSeparator\")\n\n\t\t// init format parse info holder\n\t\tlet info: any = {\n\t\t\t\"positive\": {\n\t\t\t\t\"thousands\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"interval\": -1,\n\t\t\t\t\t\"separator\": thousandSeparator\n\t\t\t\t},\n\t\t\t\t\"decimals\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"separator\": decimalSeparator\n\t\t\t\t},\n\t\t\t\t\"template\": \"\",\n\t\t\t\t\"source\": \"\",\n\t\t\t\t\"parsed\": false\n\t\t\t},\n\t\t\t\"negative\": {\n\t\t\t\t\"thousands\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"interval\": -1,\n\t\t\t\t\t\"separator\": thousandSeparator\n\t\t\t\t},\n\t\t\t\t\"decimals\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"separator\": decimalSeparator\n\t\t\t\t},\n\t\t\t\t\"template\": \"\",\n\t\t\t\t\"source\": \"\",\n\t\t\t\t\"parsed\": false\n\t\t\t},\n\t\t\t\"zero\": {\n\t\t\t\t\"thousands\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"interval\": -1,\n\t\t\t\t\t\"separator\": thousandSeparator\n\t\t\t\t},\n\t\t\t\t\"decimals\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"separator\": decimalSeparator\n\t\t\t\t},\n\t\t\t\t\"template\": \"\",\n\t\t\t\t\"source\": \"\",\n\t\t\t\t\"parsed\": false\n\t\t\t}\n\t\t};\n\n\t\t// Escape double vertical bars (that mean display one vertical bar)\n\t\tformat = format.replace(\"||\", $type.PLACEHOLDER2);\n\n\t\t// Split it up and deal with different formats\n\t\tlet parts = format.split(\"|\");\n\t\tinfo.positive.source = parts[0];\n\n\t\tif (typeof parts[2] === \"undefined\") {\n\t\t\tinfo.zero = info.positive;\n\t\t}\n\t\telse {\n\t\t\tinfo.zero.source = parts[2];\n\t\t}\n\n\t\tif (typeof parts[1] === \"undefined\") {\n\t\t\tinfo.negative = info.positive;\n\t\t}\n\t\telse {\n\t\t\tinfo.negative.source = parts[1];\n\t\t}\n\n\t\t// Parse each\n\t\t$object.each(info, (_part, item) => {\n\t\t\t// Already parsed\n\t\t\tif (item.parsed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check cached\n\t\t\t// TODO\n\t\t\t// if (typeof this.getCache(item.source) !== \"undefined\") {\n\t\t\t// \tinfo[part] = this.getCache(item.source);\n\t\t\t// \treturn;\n\t\t\t// }\n\n\t\t\t// Begin parsing\n\t\t\tlet partFormat = item.source;\n\n\t\t\t// Just \"Number\"?\n\t\t\tif (partFormat.toLowerCase() === \"number\") {\n\t\t\t\tpartFormat = this.get(\"numberFormat\", \"#,###.#####\");\n\t\t\t}\n\n\t\t\t// Let TextFormatter split into chunks\n\t\t\tlet chunks = TextFormatter.chunk(partFormat, true);\n\t\t\tfor (let i: number = 0; i < chunks.length; i++) {\n\t\t\t\tlet chunk = chunks[i];\n\n\t\t\t\t// replace back double vertical bar\n\t\t\t\tchunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\n\n\t\t\t\tif (chunk.type === \"value\") {\n\t\t\t\t\t// Parse format\n\n\t\t\t\t\t// Look for codes\n\t\t\t\t\tlet matches: string[] | null = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\n\n\t\t\t\t\tif (matches) {\n\t\t\t\t\t\tif (matches === null || matches[0] === \"\") {\n\t\t\t\t\t\t\t// no codes here - assume string\n\t\t\t\t\t\t\t// nothing to do here\n\t\t\t\t\t\t\titem.template += chunk.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\t// look for the format modifiers at the end\n\t\t\t\t\t\t\tlet mods: string[] | null = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\n\n\t\t\t\t\t\t\tif (mods) {\n\t\t\t\t\t\t\t\titem.mod = mods[0].toLowerCase();\n\t\t\t\t\t\t\t\titem.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// break the format up\n\t\t\t\t\t\t\tlet a = matches[0].split(\".\");\n\n\t\t\t\t\t\t\t// Deal with thousands\n\t\t\t\t\t\t\tif (a[0] === \"\") {\n\t\t\t\t\t\t\t\t// No directives for thousands\n\t\t\t\t\t\t\t\t// Leave default settings (no formatting)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Counts\n\t\t\t\t\t\t\t\titem.thousands.active = (a[0].match(/0/g) || []).length;\n\t\t\t\t\t\t\t\titem.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\n\n\t\t\t\t\t\t\t\t// Separator interval\n\t\t\t\t\t\t\t\tlet b = a[0].split(\",\");\n\t\t\t\t\t\t\t\tif (b.length === 1) {\n\t\t\t\t\t\t\t\t\t// No thousands separators\n\t\t\t\t\t\t\t\t\t// Do nothing\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t// Use length fo the last chunk as thousands length\n\t\t\t\t\t\t\t\t\titem.thousands.interval = (b.pop() || \"\").length;\n\n\t\t\t\t\t\t\t\t\tif (item.thousands.interval === 0) {\n\t\t\t\t\t\t\t\t\t\titem.thousands.interval = -1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Deal with decimals\n\t\t\t\t\t\t\tif (typeof (a[1]) === \"undefined\") {\n\t\t\t\t\t\t\t\t// No directives for decimals\n\t\t\t\t\t\t\t\t// Leave at defaults (no formatting)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Counts\n\t\t\t\t\t\t\t\titem.decimals.active = (a[1].match(/0/g) || []).length;\n\t\t\t\t\t\t\t\titem.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Add special code to template\n\t\t\t\t\t\t\titem.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Quoted string - take it as it is\n\t\t\t\t\titem.template += chunk.text;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply style formatting\n\t\t\t//item.template = getTextFormatter().format(item.template, this.outputFormat);\n\n\t\t\t// Save cache\n\t\t\t// TODO\n\t\t\t//this.setCache(item.source, item);\n\n\t\t\t// Mark this as parsed\n\t\t\titem.parsed = true;\n\n\t\t});\n\n\t\t// Save cache (the whole thing)\n\t\t// TODO\n\t\t//this.setCache(format, info);\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Applies parsed format to a numeric value.\n\t *\n\t * @param value    Value\n\t * @param details  Parsed format as returned by parseFormat()\n\t * @return Formatted number\n\t * @ignore\n\t */\n\tprotected applyFormat(value: number, details: any): string {\n\n\t\t// Use absolute values\n\t\tlet negative: boolean = value < 0;\n\t\tvalue = Math.abs(value);\n\n\t\t// Recalculate according to modifier\n\t\tlet prefix: string = \"\", suffix: string = \"\";\n\t\tlet mods: string[] = details.mod ? details.mod.split(\"\") : [];\n\t\tif (mods.indexOf(\"b\") !== -1) {\n\t\t\tlet a = this.applyPrefix(value, this.get(\"bytePrefixes\")!, mods.indexOf(\"!\") !== -1);\n\t\t\tvalue = a[0];\n\t\t\tprefix = a[1];\n\t\t\tsuffix = a[2];\n\t\t\tif (details.modSpacing) {\n\t\t\t\tsuffix = \" \" + suffix;\n\t\t\t}\n\t\t}\n\t\telse if (mods.indexOf(\"a\") !== -1) {\n\t\t\tlet a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\")! ? this.get(\"smallNumberPrefixes\")! : this.get(\"bigNumberPrefixes\")!, mods.indexOf(\"!\") !== -1);\n\t\t\tvalue = a[0];\n\t\t\tprefix = a[1];\n\t\t\tsuffix = a[2];\n\t\t\tif (details.modSpacing) {\n\t\t\t\tsuffix = \" \" + suffix;\n\t\t\t}\n\t\t}\n\t\telse if (mods.indexOf(\"p\") !== -1) {\n\t\t\tlet ol = Math.min(value.toString().length + 2, 21);\n\t\t\t//value *= 100;\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\n\t\t\tprefix = this._root.language.translate(\"_percentPrefix\");\n\t\t\tsuffix = this._root.language.translate(\"_percentSuffix\");\n\t\t\tif (prefix == \"\" && suffix == \"\") {\n\t\t\t\tsuffix = \"%\";\n\t\t\t}\n\t\t}\n\t\telse if (mods.indexOf(\"%\") !== -1) {\n\t\t\tlet ol = Math.min(value.toString().length + 2, 21);\n\t\t\tvalue *= 100;\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\n\t\t\tsuffix = \"%\";\n\t\t}\n\t\telse if (mods.indexOf(\"‰\") !== -1) {\n\t\t\tlet ol = Math.min(value.toString().length + 3, 21);\n\t\t\tvalue *= 1000;\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\n\t\t\tsuffix = \"‰\";\n\t\t}\n\n\t\t// Round to passive\n\t\tif (mods.indexOf(\"e\") !== -1) {\n\t\t\t// convert the value to exponential\n\t\t\tlet exp: string[];\n\t\t\tif (details.decimals.passive >= 0) {\n\t\t\t\texp = value.toExponential(details.decimals.passive).split(\"e\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\texp = value.toExponential().split(\"e\");\n\t\t\t}\n\t\t\tvalue = Number(exp[0]);\n\t\t\tsuffix = \"e\" + exp[1];\n\t\t\tif (details.modSpacing) {\n\t\t\t\tsuffix = \" \" + suffix;\n\t\t\t}\n\t\t}\n\t\telse if (details.decimals.passive === 0) {\n\t\t\tvalue = Math.round(value);\n\t\t}\n\t\telse if (details.decimals.passive > 0) {\n\t\t\tconst decimals = $utils.decimalPlaces(value);\n\t\t\tif (decimals > 0) {\n\t\t\t\tconst d = Math.pow(10, details.decimals.passive);\n\t\t\t\tvalue = Math.round(parseFloat((value * d).toFixed(decimals))) / d;\n\t\t\t}\n\t\t}\n\n\t\t// Init return value\n\t\tlet res: string = \"\";\n\n\t\t// Calc integer and decimal parts\n\t\tlet a = $type.numberToString(value).split(\".\");\n\n\t\t// Format integers\n\t\tlet ints = a[0];\n\n\t\t// Pad integers to active length\n\t\tif (ints.length < details.thousands.active) {\n\t\t\tints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\n\t\t}\n\n\t\t// Insert thousands separators\n\t\tif (details.thousands.interval > 0) {\n\t\t\tlet ip: string[] = [];\n\t\t\tlet intsr: string = ints.split(\"\").reverse().join(\"\");\n\t\t\tfor (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\n\t\t\t\tlet c: string = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tip.unshift(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tints = ip.join(details.thousands.separator);\n\t\t}\n\n\t\t// Add integers\n\t\tres += ints;\n\n\t\t// Add decimals\n\t\tif (a.length === 1) {\n\t\t\ta.push(\"\");\n\t\t}\n\t\tlet decs: string = a[1];\n\n\t\t// Fill zeros?\n\t\tif (decs.length < details.decimals.active) {\n\t\t\tdecs += Array(details.decimals.active - decs.length + 1).join(\"0\");\n\t\t}\n\n\t\tif (decs !== \"\") {\n\t\t\tres += details.decimals.separator + decs;\n\t\t}\n\n\t\t// Can't have empty return value\n\t\tif (res === \"\") {\n\t\t\tres = \"0\";\n\t\t}\n\n\t\t// Add minus sign back\n\t\tif (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\n\t\t\tres = \"-\" + res;\n\t\t}\n\n\t\t// Add suffixes/prefixes\n\t\tif (prefix) {\n\t\t\tres = prefix + res;\n\t\t}\n\t\tif (suffix) {\n\t\t\tres += suffix;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\n\tprotected applyPrefix(value: number, prefixes: any[], force: boolean = false): any[] {\n\t\tlet newvalue = value;\n\t\tlet prefix = \"\";\n\t\tlet suffix = \"\";\n\t\tlet applied = false;\n\t\tlet k = 1;\n\n\t\tfor (let i = 0, len = prefixes.length; i < len; i++) {\n\t\t\tif (prefixes[i].number <= value) {\n\t\t\t\tif (prefixes[i].number === 0) {\n\t\t\t\t\tnewvalue = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewvalue = value / prefixes[i].number;\n\t\t\t\t\tk = prefixes[i].number;\n\t\t\t\t}\n\t\t\t\tprefix = prefixes[i].prefix;\n\t\t\t\tsuffix = prefixes[i].suffix;\n\t\t\t\tapplied = true;\n\t\t\t}\n\t\t}\n\n\n\t\tif (!applied && force && prefixes.length && value != 0) {\n\t\t\t// Prefix was not applied. Use the first prefix.\n\t\t\tnewvalue = value / prefixes[0].number;\n\t\t\tprefix = prefixes[0].prefix;\n\t\t\tsuffix = prefixes[0].suffix;\n\t\t\tapplied = true;\n\t\t}\n\n\t\tif (applied) {\n\t\t\tnewvalue = parseFloat(\n\t\t\t\tnewvalue.toPrecision(\n\t\t\t\t\tMath.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn [newvalue, prefix, suffix];\n\t}\n\n\t/**\n\t * Replaces brackets with temporary placeholders.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Input text\n\t * @return Escaped text\n\t */\n\tpublic escape(text: string): string {\n\t\treturn text.replace(\"||\", $type.PLACEHOLDER2);\n\t}\n\n\t/**\n\t * Replaces placeholders back to brackets.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Escaped text\n\t * @return Unescaped text\n\t */\n\tpublic unescape(text: string): string {\n\t\treturn text.replace($type.PLACEHOLDER2, \"|\");\n\t}\n\n}\n", "interface ParsedDate {\n\tyear: number,\n\tmonth: number,\n\tday: number,\n\thour: number,\n\tminute: number,\n\tsecond: number,\n\tmillisecond: number,\n\tweekday: number\n}\n\nfunction parseDate(timezone: Intl.DateTimeFormat, date: Date): ParsedDate {\n\tlet year = 0;\n\tlet month = 0;\n\tlet day = 1;\n\tlet hour = 0;\n\tlet minute = 0;\n\tlet second = 0;\n\tlet millisecond = 0;\n\tlet weekday = 0;\n\n\n\n\ttimezone.formatToParts(date).forEach((x) => {\n\n\t\tswitch (x.type) {\n\t\t\tcase \"year\":\n\t\t\t\tyear = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"month\":\n\t\t\t\tmonth = (+x.value) - 1;\n\t\t\t\tbreak;\n\t\t\tcase \"day\":\n\t\t\t\tday = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"hour\":\n\t\t\t\thour = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"minute\":\n\t\t\t\tminute = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"second\":\n\t\t\t\tsecond = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"fractionalSecond\" as any:\n\t\t\t\tmillisecond = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"weekday\":\n\t\t\t\tswitch (x.value) {\n\t\t\t\t\tcase \"Sun\":\n\t\t\t\t\t\tweekday = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Mon\":\n\t\t\t\t\t\tweekday = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Tue\":\n\t\t\t\t\t\tweekday = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Wed\":\n\t\t\t\t\t\tweekday = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Thu\":\n\t\t\t\t\t\tweekday = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Fri\":\n\t\t\t\t\t\tweekday = 5;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Sat\":\n\t\t\t\t\t\tweekday = 6;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\t});\n\n\tif (hour === 24) {\n\t\thour = 0;\n\t}\n\n\treturn { year, month, day, hour, minute, second, millisecond, weekday };\n}\n\n\nfunction toUTCDate(timezone: Intl.DateTimeFormat, date: Date): number {\n\tconst { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\n\treturn Date.UTC(year, month, day, hour, minute, second, millisecond);\n}\n\n\nexport class Timezone {\n\tprivate _utc: Intl.DateTimeFormat;\n\tprivate _dtf: Intl.DateTimeFormat;\n\n\tpublic readonly name: string | undefined;\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   timezone  IANA timezone\n\t * @return            Instantiated object\n\t */\n\tstatic new<C extends typeof Timezone, T extends InstanceType<C>>(this: C, timezone: string | undefined): T {\n\t\treturn (new this(timezone, true)) as T;\n\t}\n\n\tconstructor(timezone: string | undefined, isReal: boolean) {\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tthis.name = timezone;\n\n\t\tthis._utc = new Intl.DateTimeFormat(\"en-US\", {\n\t\t\thour12: false,\n\t\t\ttimeZone: \"UTC\",\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"2-digit\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t\tweekday: \"short\",\n\t\t\tfractionalSecondDigits: 3,\n\t\t} as any);\n\n\t\tthis._dtf = new Intl.DateTimeFormat(\"en-US\", {\n\t\t\thour12: false,\n\t\t\ttimeZone: timezone,\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"2-digit\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t\tweekday: \"short\",\n\t\t\tfractionalSecondDigits: 3,\n\t\t} as any);\n\t}\n\n\tconvertLocal(date: Date): Date {\n\t\tconst offset = this.offsetUTC(date);\n\t\tconst userOffset = date.getTimezoneOffset();\n\t\tconst output = new Date(date);\n\t\toutput.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\n\n\t\tconst newUserOffset = output.getTimezoneOffset();\n\n\t\tif (userOffset != newUserOffset) {\n\t\t\toutput.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset)\n\t\t}\n\n\t\treturn output;\n\t}\n\n\toffsetUTC(date: Date): number {\n\t\tconst utc = toUTCDate(this._utc, date);\n\t\tconst dtf = toUTCDate(this._dtf, date);\n\t\treturn (utc - dtf) / 60000;\n\t}\n\n\tparseDate(date: Date): ParsedDate {\n\t\treturn parseDate(this._dtf, date)\n\t}\n}\n", "import type { ILocaleSettings } from \"./Language\"\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\nimport { TextFormatter } from \"./TextFormatter\"\nimport { Timezone } from \"./Timezone\"\n\nimport * as $type from \"./Type\"\nimport * as $utils from \"./Utils\";\n\n/**\n * Interface describing parsed date format definition.\n *\n * @ignore\n */\nexport interface DateFormatInfo {\n\t\"template\": string;\n\t\"parts\": any[];\n}\n\nexport interface IDateFormatterSettings extends IEntitySettings {\n\n\t/**\n\t * Should the first letter of the formatted date be capitalized?\n\t *\n\t * @default true\n\t */\n\tcapitalize?: boolean;\n\n\t/**\n\t * A date format to be used when formatting dates.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\tdateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * An array of data fields that hold date values and should be formatted\n\t * with a [[DateFormatter]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/data-placeholders/#Formatting_placeholders} for more info\n\t */\n\tdateFields?: string[];\n\n\t/**\n\t * Locales to use when formatting using `Intl.DateFormatter`.\n\t */\n\tintlLocales?: string;\n\n}\n\nexport interface IDateFormatterPrivate extends IEntityPrivate {\n}\n\ntype Months = \"January\" | \"February\" | \"March\" | \"April\" | \"May\" | \"June\" | \"July\" | \"August\" | \"September\" | \"October\" | \"November\" | \"December\";\ntype ShortMonths = \"Jan\" | \"Feb\" | \"Mar\" | \"Apr\" | \"May(short)\" | \"Jun\" | \"Jul\" | \"Aug\" | \"Sep\" | \"Oct\" | \"Nov\" | \"Dec\";\ntype Weekdays = \"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\";\ntype ShortWeekdays = \"Sun\" | \"Mon\" | \"Tue\" | \"Wed\" | \"Thu\" | \"Fri\" | \"Sat\";\n\n\n/**\n * Date formatter class.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n * @important\n */\nexport class DateFormatter extends Entity {\n\tdeclare public _settings: IDateFormatterSettings;\n\tdeclare public _privateSettings: IDateFormatterPrivate;\n\n\tprotected _setDefaults() {\n\t\t// Defaults\n\t\tthis._setDefault(\"capitalize\", true);\n\t\tthis._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\n\n\t\tsuper._setDefaults();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t}\n\n\t/**\n\t * Formats a source `Date` object into string format\n\t * @param   source          inpout date\n\t * @param   format          Output format\n\t * @param   ignoreTimezone  Ignore timezone?\n\t * @return                  Formatted date\n\t */\n\tpublic format(source: any, format?: string | Intl.DateTimeFormatOptions, ignoreTimezone: boolean = false): string {\n\n\t\t// Locale?\n\t\t// TODO\n\n\t\t// No format passed in or it's empty\n\t\tif (typeof format === \"undefined\" || format === \"\") {\n\t\t\tformat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\n\t\t}\n\n\t\t// Init return value\n\t\tlet formatted;\n\n\t\t// Cast?\n\t\t// TODO: decide if we need to cast\n\t\tlet date: Date = source;\n\n\n\t\t// Is it a built-in format or Intl.DateTimeFormat\n\t\tif ($type.isObject(format)) {\n\n\t\t\ttry {\n\t\t\t\tconst locales = this.get(\"intlLocales\");\n\t\t\t\tif (locales) {\n\t\t\t\t\treturn new Intl.DateTimeFormat(locales, <Intl.DateTimeFormatOptions>format).format(date);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn new Intl.DateTimeFormat(undefined, <Intl.DateTimeFormatOptions>format).format(date);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treturn \"Invalid\";\n\t\t\t}\n\n\t\t}\n\n\t\t// get format info (it will also deal with parser caching)\n\t\tlet info = this.parseFormat(format);\n\n\t\t// Should we apply custom time zone?\n\t\tconst timezone = this._root.timezone;\n\t\tlet originalDate = date;\n\t\tif (timezone && !this._root.utc && !ignoreTimezone) {\n\t\t\tdate = timezone.convertLocal(date);\n\t\t}\n\n\t\t// Check if it's a valid date\n\t\tif (!$type.isNumber(date.getTime())) {\n\t\t\t// TODO translation\n\t\t\t//return this._t(\"Invalid date\");\n\t\t\treturn \"Invalid date\";\n\t\t}\n\n\t\t// Apply format\n\t\tformatted = this.applyFormat(date, info, ignoreTimezone, originalDate);\n\n\t\t// Capitalize\n\t\tif (this.get(\"capitalize\")) {\n\t\t\tformatted = formatted.replace(\n\t\t\t\t/^.{1}/, formatted.substr(0, 1).toUpperCase()\n\t\t\t);\n\t\t}\n\n\t\t// We're done\n\t\treturn formatted;\n\t}\n\n\t/**\n\t * Applies format to Date.\n\t *\n\t * @param date      Date object\n\t * @param info      Parsed format information\n\t * @return Formatted date string\n\t */\n\tprotected applyFormat(date: Date, info: DateFormatInfo, ignoreTimezone: boolean = false, originalDate?: Date): string {\n\n\t\t// Init return value\n\t\tlet res = info.template;\n\n\t\t// Get values\n\t\tlet fullYear: number,\n\t\t\tmonth: number,\n\t\t\tweekday: number,\n\t\t\tday: number,\n\t\t\thours: number,\n\t\t\tminutes: number,\n\t\t\tseconds: number,\n\t\t\tmilliseconds: number,\n\t\t\ttimestamp: number = date.getTime();\n\t\tif (this._root.utc && !ignoreTimezone) {\n\t\t\tfullYear = date.getUTCFullYear();\n\t\t\tmonth = date.getUTCMonth();\n\t\t\tweekday = date.getUTCDay();\n\t\t\tday = date.getUTCDate();\n\t\t\thours = date.getUTCHours();\n\t\t\tminutes = date.getUTCMinutes();\n\t\t\tseconds = date.getUTCSeconds();\n\t\t\tmilliseconds = date.getUTCMilliseconds();\n\t\t}\n\t\telse {\n\t\t\tfullYear = date.getFullYear();\n\t\t\tmonth = date.getMonth();\n\t\t\tweekday = date.getDay();\n\t\t\tday = date.getDate();\n\t\t\thours = date.getHours();\n\t\t\tminutes = date.getMinutes();\n\t\t\tseconds = date.getSeconds();\n\t\t\tmilliseconds = date.getMilliseconds();\n\t\t}\n\n\t\t// Go through each part and format/replace it in template\n\t\tfor (let i = 0, len = info.parts.length; i < len; i++) {\n\t\t\tlet value: string = \"\";\n\t\t\tswitch (info.parts[i]) {\n\n\t\t\t\tcase \"G\":\n\t\t\t\t\tvalue = this._t(\n\t\t\t\t\t\tfullYear < 0\n\t\t\t\t\t\t\t? \"_era_bc\"\n\t\t\t\t\t\t\t: \"_era_ad\"\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yyyy\":\n\t\t\t\t\tvalue = Math.abs(fullYear).toString();\n\t\t\t\t\tif (fullYear < 0) {\n\t\t\t\t\t\tvalue += this._t(\"_era_bc\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yyy\":\n\t\t\t\tcase \"yy\":\n\t\t\t\tcase \"y\":\n\t\t\t\t\tvalue = Math.abs(fullYear).toString().substr(-info.parts[i].length);\n\t\t\t\t\tif (fullYear < 0) {\n\t\t\t\t\t\tvalue += this._t(\"_era_bc\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"YYYY\":\n\t\t\t\tcase \"YYY\":\n\t\t\t\tcase \"YY\":\n\t\t\t\tcase \"Y\":\n\t\t\t\t\tlet year = $utils.getWeekYear(date, this._root.utc);\n\t\t\t\t\tif (info.parts[i] == \"YYYY\") {\n\t\t\t\t\t\tvalue = Math.abs(year).toString();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = Math.abs(year).toString().substr(-info.parts[i].length);\n\t\t\t\t\t}\n\t\t\t\t\tif (year < 0) {\n\t\t\t\t\t\tvalue += this._t(\"_era_bc\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"u\":\n\t\t\t\t\t// @todo\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"q\":\n\t\t\t\t\tvalue = \"\" + Math.ceil((date.getMonth() + 1) / 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMMMM\":\n\t\t\t\t\tvalue = this._t(this._getMonth(month)).substr(0, 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMMM\":\n\t\t\t\t\tvalue = this._t(this._getMonth(month));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMM\":\n\t\t\t\t\tvalue = this._t(this._getShortMonth(month));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MM\":\n\t\t\t\t\tvalue = $utils.padString(month + 1, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"M\":\n\t\t\t\t\tvalue = (month + 1).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ww\":\n\t\t\t\t\tvalue = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"w\":\n\t\t\t\t\tvalue = $utils.getWeek(date, this._root.utc).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"W\":\n\t\t\t\t\tvalue = $utils.getMonthWeek(date, this._root.utc).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"dd\":\n\t\t\t\t\tvalue = $utils.padString(day, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"d\":\n\t\t\t\t\tvalue = day.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"DD\":\n\t\t\t\tcase \"DDD\":\n\t\t\t\t\tvalue = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"D\":\n\t\t\t\t\tvalue = $utils.getYearDay(date, this._root.utc).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"F\":\n\t\t\t\t\t// @todo\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"g\":\n\t\t\t\t\t// @todo\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"t\":\n\t\t\t\t\tvalue = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"E\":\n\t\t\t\t\tvalue = (weekday || 7).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EE\":\n\t\t\t\t\tvalue = $utils.padString((weekday || 7).toString(), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EEE\":\n\t\t\t\tcase \"eee\":\n\t\t\t\t\tvalue = this._t(this._getShortWeekday(weekday));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EEEE\":\n\t\t\t\tcase \"eeee\":\n\t\t\t\t\tvalue = this._t(this._getWeekday(weekday));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EEEEE\":\n\t\t\t\tcase \"eeeee\":\n\t\t\t\t\tvalue = this._t(this._getShortWeekday(weekday)).substr(0, 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"e\":\n\t\t\t\tcase \"ee\":\n\t\t\t\t\tvalue = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\n\t\t\t\t\tif (info.parts[i] == \"ee\") {\n\t\t\t\t\t\tvalue = $utils.padString(value, 2, \"0\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"a\":\n\t\t\t\t\tif (hours >= 12) {\n\t\t\t\t\t\tvalue = this._t(\"PM\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = this._t(\"AM\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aa\":\n\t\t\t\t\tif (hours >= 12) {\n\t\t\t\t\t\tvalue = this._t(\"P.M.\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = this._t(\"A.M.\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aaa\":\n\t\t\t\t\tif (hours >= 12) {\n\t\t\t\t\t\tvalue = this._t(\"P\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = this._t(\"A\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"h\":\n\t\t\t\t\tvalue = $utils.get12Hours(hours).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"hh\":\n\t\t\t\t\tvalue = $utils.padString($utils.get12Hours(hours), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"H\":\n\t\t\t\t\tvalue = hours.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"HH\":\n\t\t\t\t\tvalue = $utils.padString(hours, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"K\":\n\t\t\t\t\tvalue = $utils.get12Hours(hours, 0).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"KK\":\n\t\t\t\t\tvalue = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"k\":\n\t\t\t\t\tvalue = (hours + 1).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"kk\":\n\t\t\t\t\tvalue = $utils.padString(hours + 1, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"m\":\n\t\t\t\t\tvalue = minutes.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"mm\":\n\t\t\t\t\tvalue = $utils.padString(minutes, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"s\":\n\t\t\t\t\tvalue = seconds.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ss\":\n\t\t\t\t\tvalue = $utils.padString(seconds, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"S\":\n\t\t\t\tcase \"SS\":\n\t\t\t\tcase \"SSS\":\n\t\t\t\t\tvalue = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"x\":\n\t\t\t\t\tvalue = timestamp.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"n\":\n\t\t\t\tcase \"nn\":\n\t\t\t\tcase \"nnn\":\n\t\t\t\t\tvalue = $utils.padString(milliseconds, info.parts[i].length, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"z\":\n\t\t\t\t\tvalue = $utils.getTimeZone(originalDate || date, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"zz\":\n\t\t\t\t\tvalue = $utils.getTimeZone(originalDate || date, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"zzz\":\n\t\t\t\t\tvalue = $utils.getTimeZone(originalDate || date, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined).replace(/[+-]+[0-9]+$/, \"\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"zzzz\":\n\t\t\t\t\tvalue = $utils.getTimeZone(originalDate || date, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : undefined);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Z\":\n\t\t\t\tcase \"ZZ\":\n\t\t\t\t\tlet timezone = this._root.utc ? \"UTC\" : this._root.timezone;\n\t\t\t\t\tif (timezone instanceof Timezone) {\n\t\t\t\t\t\ttimezone = timezone.name;\n\t\t\t\t\t}\n\t\t\t\t\tconst offset = timezone ? $utils.getTimezoneOffset(timezone, originalDate || date) : date.getTimezoneOffset();\n\n\t\t\t\t\tlet tz = Math.abs(offset) / 60;\n\t\t\t\t\tlet tzh = Math.floor(tz);\n\t\t\t\t\tlet tzm = tz * 60 - tzh * 60;\n\n\t\t\t\t\tif (this._root.utc) {\n\t\t\t\t\t\ttzh = 0;\n\t\t\t\t\t\ttzm = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (info.parts[i] == \"Z\") {\n\t\t\t\t\t\tvalue = \"GMT\";\n\t\t\t\t\t\tvalue += offset > 0 ? \"-\" : \"+\";\n\t\t\t\t\t\tvalue += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = offset > 0 ? \"-\" : \"+\";\n\t\t\t\t\t\tvalue += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"i\":\n\t\t\t\t\tvalue = date.toISOString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"I\":\n\t\t\t\t\tvalue = date.toUTCString();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\tres = res.replace($type.PLACEHOLDER, value);\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Parses format into structured infromation.\n\t *\n\t * @param format Format template\n\t */\n\tprotected parseFormat(format: string): DateFormatInfo {\n\n\t\t// Check cache\n\t\t// TODO: implement caching of the parsed format\n\n\t\t// Init format parse info holder\n\t\tlet info: DateFormatInfo = {\n\t\t\t\"template\": \"\",\n\t\t\t\"parts\": <any>[]\n\t\t};\n\n\t\t// Let TextFormatter split into chunks\n\t\tlet chunks = TextFormatter.chunk(format, true);\n\t\tfor (let i: number = 0; i < chunks.length; i++) {\n\t\t\tlet chunk = chunks[i];\n\n\t\t\tif (chunk.type === \"value\") {\n\n\t\t\t\t// Just \"Date\"?\n\t\t\t\tif (chunk.text.match(/^date$/i)) {\n\t\t\t\t\tlet dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\n\t\t\t\t\tif (!$type.isString(dateFormat)) {\n\t\t\t\t\t\tdateFormat = \"yyyy-MM-dd\";\n\t\t\t\t\t}\n\t\t\t\t\tchunk.text = dateFormat;\n\t\t\t\t}\n\n\t\t\t\t// Find all possible parts\n\t\t\t\tlet matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\n\n\t\t\t\t// Found?\n\t\t\t\tif (matches) {\n\n\t\t\t\t\t// Populate template\n\t\t\t\t\tfor (let x = 0; x < matches.length; x++) {\n\t\t\t\t\t\tinfo.parts.push(matches[x]);\n\t\t\t\t\t\tchunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply to template\n\t\t\tinfo.template += chunk.text;\n\t\t}\n\n\t\t// Save cache\n\t\t// TODO\n\n\t\treturn info;\n\t}\n\n\tprotected _months(): Months[] {\n\t\treturn [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t}\n\n\tprotected _getMonth(index: number): Months {\n\t\treturn this._months()[index];\n\t}\n\n\tprotected _shortMonths(): ShortMonths[] {\n\t\treturn [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t}\n\n\tprotected _getShortMonth(index: number): ShortMonths {\n\t\treturn this._shortMonths()[index];\n\t}\n\n\tprotected _weekdays(): Weekdays[] {\n\t\treturn [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\t}\n\n\tprotected _getWeekday(index: number): Weekdays {\n\t\treturn this._weekdays()[index];\n\t}\n\n\tprotected _shortWeekdays(): ShortWeekdays[] {\n\t\treturn [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t}\n\n\tprotected _getShortWeekday(index: number): ShortWeekdays {\n\t\treturn this._shortWeekdays()[index];\n\t}\n\n\tpublic parse(source: any, format: string, utc?: boolean): Date {\n\n\t\t// If UTC is not supplied, use Root setting\n\t\tif (typeof utc === \"undefined\") {\n\t\t\tutc = this._root.utc;\n\t\t}\n\n\t\t// Is it already a Date\n\t\tif (source instanceof Date) {\n\t\t\treturn source;\n\t\t}\n\n\t\t// Is it a numeric timestamp\n\t\tif ($type.isNumber(source)) {\n\t\t\treturn new Date(source);\n\t\t}\n\n\t\t// Are we parsing a timestamp?\n\t\tif (format == \"x\") {\n\t\t\treturn new Date(parseInt(source));\n\t\t}\n\n\t\t// No? Let's check if it's string, and try converting to it if nec\n\t\tif (!$type.isString(source)) {\n\t\t\tsource = source.toString();\n\t\t}\n\n\t\t// Init return value\n\t\tlet res: Date;\n\n\t\t// Init RegEx for parsing\n\t\tlet reg: string = \"\";\n\n\t\t// Clean format\n\t\tformat = $utils.cleanFormat(format);\n\n\t\t// Clip format to length of the source string\n\t\tformat = format.substr(0, source.length);\n\n\t\t// Parse format\n\t\tlet info = this.parseFormat(format);\n\n\t\t// Init parsed items holder\n\t\tlet parsedIndexes = {\n\t\t\t\"year\": -1,\n\t\t\t\"year3\": -1,\n\t\t\t\"year2\": -1,\n\t\t\t\"year1\": -1,\n\t\t\t\"month\": -1,\n\t\t\t\"monthShort\": -1,\n\t\t\t\"monthLong\": -1,\n\t\t\t\"weekdayShort\": -1,\n\t\t\t\"weekdayLong\": -1,\n\t\t\t\"day\": -1,\n\t\t\t\"yearDay\": -1,\n\t\t\t\"week\": -1,\n\t\t\t\"hourBase0\": -1,\n\t\t\t\"hour12Base0\": -1,\n\t\t\t\"hourBase1\": -1,\n\t\t\t\"hour12Base1\": -1,\n\t\t\t\"minute\": -1,\n\t\t\t\"second\": -1,\n\t\t\t\"millisecond\": -1,\n\t\t\t\"millisecondDigits\": -1,\n\t\t\t\"am\": -1,\n\t\t\t\"zone\": -1,\n\t\t\t\"timestamp\": -1,\n\t\t\t\"iso\": -1\n\t\t};\n\n\t\t// Init values\n\t\tlet resValues = {\n\t\t\t\"year\": 1970,\n\t\t\t\"month\": 0,\n\t\t\t\"day\": 1,\n\t\t\t\"hour\": 0,\n\t\t\t\"minute\": 0,\n\t\t\t\"second\": 0,\n\t\t\t\"millisecond\": 0,\n\t\t\t\"timestamp\": <any>null,\n\t\t\t\"offset\": 0,\n\t\t\t\"utc\": utc\n\t\t}\n\n\t\t// Index adjuster\n\t\tlet indexAdjust: number = 0;\n\t\tlet index: number = 0;\n\n\t\t// Iterate through all of the parts\n\t\tfor (let i: number = 0; i < info.parts.length; i++) {\n\n\t\t\t// Set current match index\n\t\t\tindex = i + indexAdjust + 1;\n\n\t\t\tswitch (info.parts[i]) {\n\n\t\t\t\tcase \"yyyy\":\n\t\t\t\tcase \"YYYY\":\n\t\t\t\t\treg += \"([0-9]{4})\";\n\t\t\t\t\tparsedIndexes.year = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yyy\":\n\t\t\t\tcase \"YYY\":\n\t\t\t\t\treg += \"([0-9]{3})\";\n\t\t\t\t\tparsedIndexes.year3 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yy\":\n\t\t\t\tcase \"YY\":\n\t\t\t\t\treg += \"([0-9]{2})\";\n\t\t\t\t\tparsedIndexes.year2 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"y\":\n\t\t\t\tcase \"Y\":\n\t\t\t\t\treg += \"([0-9]{1})\";\n\t\t\t\t\tparsedIndexes.year1 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMMM\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.monthLong = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMM\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.monthShort = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MM\":\n\t\t\t\tcase \"M\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.month = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ww\":\n\t\t\t\tcase \"w\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.week = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"dd\":\n\t\t\t\tcase \"d\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.day = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"DDD\":\n\t\t\t\tcase \"DD\":\n\t\t\t\tcase \"D\":\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.yearDay = index;\n\t\t\t\t\tbreak;\n\n\n\t\t\t\tcase \"dddd\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.weekdayLong = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ddd\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.weekdayShort = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aaa\":\n\t\t\t\tcase \"aa\":\n\t\t\t\tcase \"a\":\n\t\t\t\t\t// TODO: fix (escape regex)\n\t\t\t\t\treg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.am = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"hh\":\n\t\t\t\tcase \"h\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hour12Base1 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"HH\":\n\t\t\t\tcase \"H\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hourBase0 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"KK\":\n\t\t\t\tcase \"K\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hour12Base0 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"kk\":\n\t\t\t\tcase \"k\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hourBase1 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"mm\":\n\t\t\t\tcase \"m\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.minute = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ss\":\n\t\t\t\tcase \"s\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.second = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"SSS\":\n\t\t\t\tcase \"SS\":\n\t\t\t\tcase \"S\":\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.millisecond = index;\n\t\t\t\t\tparsedIndexes.millisecondDigits = info.parts[i].length;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"nnn\":\n\t\t\t\tcase \"nn\":\n\t\t\t\tcase \"n\":\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.millisecond = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"x\":\n\t\t\t\t\treg += \"([0-9]{1,})\";\n\t\t\t\t\tparsedIndexes.timestamp = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Z\":\n\t\t\t\t\treg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\n\t\t\t\t\tparsedIndexes.zone = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ZZ\":\n\t\t\t\t\treg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\n\t\t\t\t\tparsedIndexes.zone = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"i\":\n\t\t\t\t\treg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\n\t\t\t\t\tparsedIndexes.iso = index;\n\t\t\t\t\tindexAdjust += 7;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"G\":\n\t\t\t\tcase \"YYYY\":\n\t\t\t\tcase \"YYY\":\n\t\t\t\tcase \"YY\":\n\t\t\t\tcase \"Y\":\n\t\t\t\tcase \"MMMMM\":\n\t\t\t\tcase \"W\":\n\t\t\t\tcase \"EEEEE\":\n\t\t\t\tcase \"EEEE\":\n\t\t\t\tcase \"EEE\":\n\t\t\t\tcase \"EE\":\n\t\t\t\tcase \"E\":\n\t\t\t\tcase \"eeeee\":\n\t\t\t\tcase \"eeee\":\n\t\t\t\tcase \"eee\":\n\t\t\t\tcase \"ee\":\n\t\t\t\tcase \"e\":\n\t\t\t\tcase \"zzzz\":\n\t\t\t\tcase \"zzz\":\n\t\t\t\tcase \"zz\":\n\t\t\t\tcase \"z\":\n\t\t\t\tcase \"t\":\n\t\t\t\t\t// Ignore\n\t\t\t\t\tindexAdjust--;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treg += \"[^0-9]*\";\n\t\t}\n\n\t\t// Try matching\n\t\tlet regex = new RegExp(reg);\n\t\tlet matches: RegExpMatchArray = source.match(regex);\n\n\t\tif (matches) {\n\t\t\t// Populate the date object\n\n\t\t\t// Full year\n\t\t\tif (parsedIndexes.year > -1) {\n\t\t\t\tresValues.year = parseInt(matches[parsedIndexes.year]);\n\t\t\t}\n\n\t\t\t// 3-digit year\n\t\t\tif (parsedIndexes.year3 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year3]);\n\t\t\t\tval += 1000;\n\t\t\t\tresValues.year = val;\n\t\t\t}\n\n\t\t\t// 2-digit year\n\t\t\tif (parsedIndexes.year2 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year2]);\n\t\t\t\tif (val > 50) {\n\t\t\t\t\tval += 1000;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tval += 2000;\n\t\t\t\t}\n\t\t\t\tresValues.year = val;\n\t\t\t}\n\n\t\t\t// 1-digit year\n\t\t\tif (parsedIndexes.year1 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year1]);\n\t\t\t\tval = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\n\t\t\t\tresValues.year = val;\n\t\t\t}\n\n\t\t\t// Full month\n\t\t\tif (parsedIndexes.monthLong > -1) {\n\t\t\t\tresValues.month = this.resolveMonth(<any>matches[parsedIndexes.monthLong]);\n\t\t\t}\n\n\t\t\t// Short month\n\t\t\tif (parsedIndexes.monthShort > -1) {\n\t\t\t\tresValues.month = this.resolveShortMonth(<any>matches[parsedIndexes.monthShort]);\n\t\t\t}\n\n\t\t\t// Numeric month\n\t\t\tif (parsedIndexes.month > -1) {\n\t\t\t\tresValues.month = parseInt(matches[parsedIndexes.month]) - 1;\n\t\t\t}\n\n\t\t\t// Weekday\n\t\t\t// @todo\n\n\t\t\t// Week\n\t\t\tif ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\n\t\t\t\t// We parse weeks ONLY if day is not explicitly set\n\t\t\t\t// TODO: this needs work\n\t\t\t\t// (but maybe later - I can hardly imagine anyone passing their dates in weeks)\n\t\t\t\tresValues.month = 0;\n\t\t\t\tresValues.day = $utils.getDayFromWeek(\n\t\t\t\t\tparseInt(matches[parsedIndexes.week]),\n\t\t\t\t\tresValues.year,\n\t\t\t\t\t1,\n\t\t\t\t\tutc\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Day\n\t\t\tif (parsedIndexes.day > -1) {\n\t\t\t\tresValues.day = parseInt(matches[parsedIndexes.day]);\n\t\t\t}\n\n\t\t\t// Year day\n\t\t\tif (parsedIndexes.yearDay > -1) {\n\t\t\t\tresValues.month = 0;\n\t\t\t\tresValues.day = parseInt(matches[parsedIndexes.yearDay]);\n\t\t\t}\n\n\t\t\t// 24 Hour (0-23)\n\t\t\tif (parsedIndexes.hourBase0 > -1) {\n\t\t\t\tresValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\n\t\t\t}\n\n\t\t\t// 24 Hour (1-24)\n\t\t\tif (parsedIndexes.hourBase1 > -1) {\n\t\t\t\tresValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\n\t\t\t}\n\n\t\t\t// 12 Hour (0-11)\n\t\t\tif (parsedIndexes.hour12Base0 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hour12Base0]);\n\t\t\t\tif (val == 11) {\n\t\t\t\t\tval = 0;\n\t\t\t\t}\n\t\t\t\tif ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\n\t\t\t\t\tval += 12;\n\t\t\t\t}\n\t\t\t\tresValues.hour = val;\n\t\t\t}\n\n\t\t\t// 12 Hour (1-12)\n\t\t\tif (parsedIndexes.hour12Base1 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hour12Base1]);\n\t\t\t\tif (val == 12) {\n\t\t\t\t\tval = 0;\n\t\t\t\t}\n\t\t\t\tif ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\n\t\t\t\t\tval += 12;\n\t\t\t\t}\n\t\t\t\tresValues.hour = val;\n\t\t\t}\n\n\t\t\t// Minute\n\t\t\tif (parsedIndexes.minute > -1) {\n\t\t\t\tresValues.minute = parseInt(matches[parsedIndexes.minute]);\n\t\t\t}\n\n\t\t\t// Second\n\t\t\tif (parsedIndexes.second > -1) {\n\t\t\t\tresValues.second = parseInt(matches[parsedIndexes.second]);\n\t\t\t}\n\n\t\t\t// Millisecond\n\t\t\tif (parsedIndexes.millisecond > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.millisecond]);\n\t\t\t\tif (parsedIndexes.millisecondDigits == 2) {\n\t\t\t\t\tval *= 10;\n\t\t\t\t}\n\t\t\t\telse if (parsedIndexes.millisecondDigits == 1) {\n\t\t\t\t\tval *= 100;\n\t\t\t\t}\n\t\t\t\tresValues.millisecond = val;\n\t\t\t}\n\n\t\t\t// Timestamp\n\t\t\tif (parsedIndexes.timestamp > -1) {\n\t\t\t\tresValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\n\n\t\t\t\tconst ts = new Date(resValues.timestamp);\n\t\t\t\tresValues.year = ts.getUTCFullYear();\n\t\t\t\tresValues.month = ts.getUTCMonth();\n\t\t\t\tresValues.day = ts.getUTCDate();\n\t\t\t\tresValues.hour = ts.getUTCHours();\n\t\t\t\tresValues.minute = ts.getUTCMinutes();\n\t\t\t\tresValues.second = ts.getUTCSeconds();\n\t\t\t\tresValues.millisecond = ts.getUTCMilliseconds();\n\t\t\t}\n\n\t\t\t// Adjust time zone\n\t\t\tif (parsedIndexes.zone > -1) {\n\t\t\t\tresValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\n\t\t\t}\n\n\t\t\t// ISO\n\t\t\tif (parsedIndexes.iso > -1) {\n\n\t\t\t\tresValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\n\t\t\t\tresValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\n\t\t\t\tresValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\n\t\t\t\tresValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\n\t\t\t\tresValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\n\t\t\t\tresValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\n\t\t\t\tresValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\n\n\t\t\t\tif (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\n\t\t\t\t\tresValues.utc = true;\n\t\t\t\t}\n\t\t\t\telse if (matches[parsedIndexes.iso + 7] != \"\") {\n\t\t\t\t\tresValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create Date object\n\t\t\tif (resValues.utc) {\n\t\t\t\tres = new Date(Date.UTC(\n\t\t\t\t\tresValues.year,\n\t\t\t\t\tresValues.month,\n\t\t\t\t\tresValues.day,\n\t\t\t\t\tresValues.hour,\n\t\t\t\t\tresValues.minute,\n\t\t\t\t\tresValues.second,\n\t\t\t\t\tresValues.millisecond\n\t\t\t\t));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres = new Date(\n\t\t\t\t\tresValues.year,\n\t\t\t\t\tresValues.month,\n\t\t\t\t\tresValues.day,\n\t\t\t\t\tresValues.hour,\n\t\t\t\t\tresValues.minute + resValues.offset,\n\t\t\t\t\tresValues.second,\n\t\t\t\t\tresValues.millisecond\n\t\t\t\t);\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Didn't match anything\n\t\t\t// Let's try dropping it into Date constructor and hope for the best\n\t\t\tres = new Date(source);\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tprotected resolveTimezoneOffset(date: Date, zone: string): number {\n\t\tlet value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\n\t\tif (value) {\n\t\t\tlet match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/)!;\n\t\t\tlet dir = match[1];\n\t\t\tlet hour = match[2];\n\t\t\tlet minute = match[3];\n\t\t\tlet offset = parseInt(hour) * 60 + parseInt(minute);\n\n\t\t\t// Adjust offset\n\t\t\t// Making it negative does not seem to make sense, but it's right\n\t\t\t// because of how JavaScript calculates GMT offsets\n\t\t\tif (dir == \"+\") {\n\t\t\t\toffset *= -1;\n\t\t\t}\n\n\t\t\t// Check the difference in offset\n\t\t\tlet originalOffset = (date || new Date()).getTimezoneOffset();\n\t\t\tlet diff = offset - originalOffset;\n\t\t\treturn diff;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Resolves month name (i.e. \"December\") into a month number (11).\n\t *\n\t * @param value  Month name\n\t * @return Month number\n\t */\n\tprotected resolveMonth(value: Months): number {\n\n\t\t// Let's try English first\n\t\tlet month: number = this._months().indexOf(value);\n\t\tif (month > -1) {\n\t\t\treturn month;\n\t\t}\n\n\t\t// Try the translation\n\t\tif (!this._root.language.isDefault()) {\n\t\t\tmonth = this._root.language.translateAll(this._months()).indexOf(value);\n\t\t\tif (month > -1) {\n\t\t\t\treturn month\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Resolves short month name (i.e. \"Dec\") into a month number.\n\t *\n\t * @param value  Short month name\n\t * @return Month number\n\t */\n\tprotected resolveShortMonth(value: ShortMonths): number {\n\n\t\t// Let's try English first\n\t\tlet month: number = this._shortMonths().indexOf(value);\n\t\tif (month > -1) {\n\t\t\treturn month;\n\t\t}\n\n\t\t// Maybe long month (workaround for May)\n\t\tmonth = this._months().indexOf(<any>value);\n\t\tif (month > -1) {\n\t\t\treturn month;\n\t\t}\n\n\t\t// Try the translation\n\t\tif (this._root.language && !this._root.language.isDefault()) {\n\t\t\tmonth = this._root.language.translateAll(this._shortMonths()).indexOf(value);\n\t\t\tif (month > -1) {\n\t\t\t\treturn month\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Checks if passed in string represents AM/PM notation in many of its\n\t * versions.\n\t *\n\t * @param value  Source string\n\t * @return Is it AM/PM?\n\t */\n\tprotected isAm(value: string): boolean {\n\t\tlet list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\n\t\treturn list.indexOf(value.toUpperCase()) > -1;\n\t}\n\n\t/**\n\t * Translates list of strings.\n\t *\n\t * @param list  Source strings\n\t * @return Translated strings\n\t */\n\tprotected getStringList(list: Array<keyof ILocaleSettings>): Array<string> {\n\t\tlet res: string[] = [];\n\t\tfor (let i: number = 0; i < list.length; i++) {\n\t\t\t// translate?\n\t\t\tif (this._root.language) {\n\t\t\t\tres.push($utils.escapeForRgex(this._t(list[i])));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres.push($utils.escapeForRgex(list[i]));\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n}\n", "import type { TimeUnit } from \"./Time\";\r\n\r\nimport { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n\r\n\r\nexport interface IDurationFormatterSettings extends IEntitySettings {\r\n\r\n\t/**\r\n\t * A universal duration format to use wherever number needs to be formatted\r\n\t * as a duration.\r\n\t */\r\n\tdurationFormat?: string;\r\n\r\n\t/**\r\n\t * A base value. Any number below it will be considered \"negative\".\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tnegativeBase?: number;\r\n\r\n\t/**\r\n\t * Identifies what values are used in duration.\r\n\t *\r\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\r\n\t * @default \"second\"\r\n\t */\r\n\tbaseUnit?: TimeUnit;\r\n\r\n\t/**\r\n\t * Time unit dependent duration formats.\r\n\t *\r\n\t * Used be [[DurationAxis]].\r\n\t */\r\n\tdurationFormats?: Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>>;\r\n\r\n\t/**\r\n\t * An array of data fields that hold duration values and should be formatted\r\n\t * with a [[DurationFormatter]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/data-placeholders/#Formatting_placeholders} for more info\r\n\t */\r\n\tdurationFields?: string[];\r\n\r\n}\r\n\r\nexport interface IDurationFormatterPrivate extends IEntityPrivate {\r\n}\r\n\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n\tdeclare public _settings: IDurationFormatterSettings;\r\n\tdeclare public _privateSettings: IDurationFormatterPrivate;\r\n\r\n\tprotected _setDefaults() {\r\n\t\tconst dmillisecond = \"_duration_millisecond\";\r\n\t\tconst dsecond = \"_duration_second\";\r\n\t\tconst dminute = \"_duration_minute\";\r\n\t\tconst dhour = \"_duration_hour\";\r\n\t\tconst dday = \"_duration_day\";\r\n\t\tconst dweek = \"_duration_week\";\r\n\t\tconst dmonth = \"_duration_month\";\r\n\t\tconst dyear = \"_duration_year\";\r\n\r\n\t\tconst asecond = \"_second\";\r\n\t\tconst aminute = \"_minute\";\r\n\t\tconst ahour = \"_hour\";\r\n\t\tconst aday = \"_day\";\r\n\t\tconst aweek = \"_week\";\r\n\t\tconst amonth = \"_week\";\r\n\t\tconst ayear = \"_year\";\r\n\r\n\t\t// Defaults\r\n\t\tthis._setDefault(\"negativeBase\", 0);\r\n\t\tthis._setDefault(\"baseUnit\", \"second\");\r\n\t\tthis._setDefault(\"durationFormats\", {\r\n\t\t\t\"millisecond\": {\r\n\t\t\t\t\"millisecond\": this._t(dmillisecond),\r\n\t\t\t\t\"second\": this._t((dmillisecond + asecond) as any),\r\n\t\t\t\t\"minute\": this._t((dmillisecond + aminute) as any),\r\n\t\t\t\t\"hour\": this._t((dmillisecond + ahour) as any),\r\n\t\t\t\t\"day\": this._t((dmillisecond + aday) as any),\r\n\t\t\t\t\"week\": this._t((dmillisecond + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dmillisecond + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dmillisecond + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"second\": {\r\n\t\t\t\t\"second\": this._t((dsecond) as any),\r\n\t\t\t\t\"minute\": this._t((dsecond + aminute) as any),\r\n\t\t\t\t\"hour\": this._t((dsecond + ahour) as any),\r\n\t\t\t\t\"day\": this._t((dsecond + aday) as any),\r\n\t\t\t\t\"week\": this._t((dsecond + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dsecond + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dsecond + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"minute\": {\r\n\t\t\t\t\"minute\": this._t((dminute) as any),\r\n\t\t\t\t\"hour\": this._t((dminute + ahour) as any),\r\n\t\t\t\t\"day\": this._t((dminute + aday) as any),\r\n\t\t\t\t\"week\": this._t((dminute + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dminute + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dminute + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"hour\": {\r\n\t\t\t\t\"hour\": this._t((dhour) as any),\r\n\t\t\t\t\"day\": this._t((dhour + aday) as any),\r\n\t\t\t\t\"week\": this._t((dhour + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dhour + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dhour + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"day\": {\r\n\t\t\t\t\"day\": this._t((dday) as any),\r\n\t\t\t\t\"week\": this._t((dday + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dday + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dday + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"week\": {\r\n\t\t\t\t\"week\": this._t((dweek) as any),\r\n\t\t\t\t\"month\": this._t((dweek + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dweek + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"month\": {\r\n\t\t\t\t\"month\": this._t((dmonth) as any),\r\n\t\t\t\t\"year\": this._t((dmonth + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"year\": {\r\n\t\t\t\t\"year\": this._t(dyear)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsuper._setDefaults();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Collection of aliases for units.\r\n\t */\r\n\tprotected _unitAliases: { [index: string]: string } = {\r\n\t\t\"Y\": \"y\",\r\n\t\t\"D\": \"d\",\r\n\t\t\"H\": \"h\",\r\n\t\t\"K\": \"h\",\r\n\t\t\"k\": \"h\",\r\n\t\t\"n\": \"S\"\r\n\t};\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the number as duration.\r\n\t *\r\n\t * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n\t * 16 minutes and 40 seconds.\r\n\t *\r\n\t * @param value   Value to format\r\n\t * @param format  Format to apply\r\n\t * @param base    Override base unit\r\n\t * @return Formatted number\r\n\t */\r\n\tpublic format(value: number | string, format?: string, base?: TimeUnit): string {\r\n\r\n\t\t// no base unit?\r\n\t\tlet baseUnit = base || this.get(\"baseUnit\");\r\n\r\n\t\t// no format passed in or empty\r\n\t\tif (typeof format === \"undefined\" || format === \"\") {\r\n\t\t\tif (this.get(\"durationFormat\") != null) {\r\n\t\t\t\tformat = this.get(\"durationFormat\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tformat = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Clean format\r\n\t\tformat = $utils.cleanFormat(format!);\r\n\r\n\t\t// get format info (it will also deal with parser caching)\r\n\t\tlet info = this.parseFormat(format, baseUnit);\r\n\r\n\t\t// cast to number just in case\r\n\t\t// TODO: maybe use better casting\r\n\t\tlet source: number = Number(value);\r\n\r\n\t\t// format and replace the number\r\n\t\tlet details;\r\n\t\tif (source > this.get(\"negativeBase\")) {\r\n\t\t\tdetails = info.positive;\r\n\t\t}\r\n\t\telse if (source < this.get(\"negativeBase\")) {\r\n\t\t\tdetails = info.negative;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdetails = info.zero;\r\n\t\t}\r\n\r\n\r\n\t\t// Format\r\n\t\tlet formatted = this.applyFormat(source, details);\r\n\r\n\t\t// Apply color?\r\n\t\tif (details.color !== \"\") {\r\n\t\t\tformatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n\t\t}\r\n\r\n\t\treturn formatted;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses supplied format into structured object which can be used to format\r\n\t * the number.\r\n\t *\r\n\t * @param format  Format string, i.e. \"#,###.00\"\r\n\t * @param base    Override base unit\r\n\t * @return Parsed information\r\n\t */\r\n\tprotected parseFormat(format: string, base?: TimeUnit): any {\r\n\r\n\t\t// Check cache\r\n\t\t// TODO\r\n\t\t// let cached = this.getCache(format);\r\n\t\t// if (cached != null) {\r\n\t\t// \treturn cached;\r\n\t\t// }\r\n\r\n\t\t// no base unit?\r\n\t\tlet baseUnit = base || this.get(\"baseUnit\");\r\n\r\n\t\t// Initialize duration parsing info\r\n\t\tlet info = {\r\n\t\t\t\"positive\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t},\r\n\t\t\t\"negative\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t},\r\n\t\t\t\"zero\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Escape double vertical bars (that mean display one vertical bar)\r\n\t\tformat = format.replace(\"||\", $type.PLACEHOLDER2);\r\n\r\n\t\t// Split it up and deal with different formats\r\n\t\tlet parts = format.split(\"|\");\r\n\t\tinfo.positive.source = parts[0];\r\n\r\n\t\tif (typeof parts[2] === \"undefined\") {\r\n\t\t\tinfo.zero = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.zero.source = parts[2];\r\n\t\t}\r\n\r\n\t\tif (typeof parts[1] === \"undefined\") {\r\n\t\t\tinfo.negative = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.negative.source = parts[1];\r\n\t\t}\r\n\r\n\t\t// Parse each\r\n\t\t$object.each(info, (_part, item) => {\r\n\t\t\t// Already parsed\r\n\t\t\tif (item.parsed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check cached\r\n\t\t\t// TODO\r\n\t\t\t// if (typeof this.getCache(item.source) !== \"undefined\") {\r\n\t\t\t// \tinfo[part] = this.getCache(item.source);\r\n\t\t\t// \treturn;\r\n\t\t\t// }\r\n\r\n\t\t\t// Begin parsing\r\n\t\t\tlet partFormat: string = item.source;\r\n\r\n\t\t\t// Check for [] directives\r\n\t\t\tlet dirs: string[] | null = [];\r\n\t\t\tdirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n\t\t\tif (dirs && dirs.length && dirs[0] !== \"\") {\r\n\t\t\t\tpartFormat = item.source.substr(dirs[0].length);\r\n\t\t\t\titem.color = dirs[1];\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Let TextFormatter split into chunks\r\n\t\t\tlet chunks = TextFormatter.chunk(partFormat, true);\r\n\t\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\t\tlet chunk = chunks[i];\r\n\r\n\t\t\t\t// replace back double vertical bar\r\n\t\t\t\tchunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n\r\n\t\t\t\tif (chunk.type === \"value\") {\r\n\r\n\t\t\t\t\t// Just \"Duration\"?\r\n\t\t\t\t\t// if (chunk.text.toLowerCase() === \"duration\") {\r\n\t\t\t\t\t// \tchunk.text = durationFormat;\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t// Check for \"a\" (absolute) modifier\r\n\t\t\t\t\tif (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n\t\t\t\t\t\titem.absolute = true;\r\n\t\t\t\t\t\tchunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Find all possible parts\r\n\t\t\t\t\tlet matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t// Populate template\r\n\t\t\t\t\t\tfor (let x = 0; x < matches.length; x++) {\r\n\t\t\t\t\t\t\t// Is it an alias?\r\n\t\t\t\t\t\t\tif (matches[x] == null) {\r\n\t\t\t\t\t\t\t\tmatches[x] = this._unitAliases[matches[x]];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\titem.parts.push(matches[x]);\r\n\t\t\t\t\t\t\tchunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply to template\r\n\t\t\t\titem.template += chunk.text;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply style formatting\r\n\t\t\t//item.template = TextFormatter.format(item.template, this.outputFormat);\r\n\r\n\t\t\t// Save cache\r\n\t\t\t// TODO\r\n\t\t\t//this.setCache(item.source, item);\r\n\r\n\t\t\t// Mark this as parsed\r\n\t\t\titem.parsed = true;\r\n\t\t});\r\n\r\n\t\t// Save cache (the whole thing)\r\n\t\t// TODO\r\n\t\t//this.setCache(format, info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies parsed format to a numeric value.\r\n\t *\r\n\t * @param value    Value\r\n\t * @param details  Parsed format as returned by {parseFormat}\r\n\t * @return Formatted duration\r\n\t */\r\n\tprotected applyFormat(value: number, details: any): string {\r\n\r\n\t\t// Use absolute values\r\n\t\tlet negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n\t\tvalue = Math.abs(value);\r\n\r\n\r\n\t\t// Recalculate to milliseconds\r\n\t\tlet tstamp = this.toTimeStamp(value, details.baseUnit);\r\n\r\n\t\t// Init return value\r\n\t\tlet res = details.template;\r\n\t\tconst values: any  = {\r\n\t\t\tmillisecond: 0,\r\n\t\t\tsecond: 0,\r\n\t\t\tminute: 0,\r\n\t\t\thour: 0,\r\n\t\t\tday: 0,\r\n\t\t\tweek: 0,\r\n\t\t\tmonth: 0,\r\n\t\t\tyear: 0\r\n\t\t};\r\n\r\n\t\t// Iterate through duration parts\r\n\t\tfor (let i = 0, len = details.parts.length; i < len; i++) {\r\n\r\n\t\t\t// Gather the part\r\n\t\t\tlet part = details.parts[i];\r\n\t\t\tlet unit: any = this._toTimeUnit(part.substr(0, 1));\r\n\r\n\t\t\t// Calculate current unit value\r\n\t\t\tlet ints: number;\r\n\t\t\tconst unitValue = this._getUnitValue(unit!);\r\n\t\t\tif (i < (len -1)) {\r\n\t\t\t\tints = Math.floor(tstamp / unitValue);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tints = Math.round(tstamp / unitValue);\r\n\t\t\t}\r\n\r\n\t\t\tvalues[unit] += ints;\r\n\r\n\t\t\t// Reduce timestamp\r\n\t\t\ttstamp -= ints * unitValue;\r\n\t\t}\r\n\r\n\t\t// Check if we have full unit that we need to bump up to higher unit\r\n\t\t$object.each(values, (unit, value) => {\r\n\t\t\tif (unit == \"millisecond\" && value == 1000) {\r\n\t\t\t\tvalues[\"second\"]++;\r\n\t\t\t\tvalues[\"millisecond\"] = 0;\r\n\t\t\t}\r\n\t\t\telse if (unit == \"second\" && value == 60) {\r\n\t\t\t\tvalues[\"minute\"]++;\r\n\t\t\t\tvalues[\"second\"] = 0;\r\n\t\t\t}\r\n\t\t\telse if (unit == \"minute\" && value == 60) {\r\n\t\t\t\tvalues[\"hour\"]++;\r\n\t\t\t\tvalues[\"minute\"] = 0;\r\n\t\t\t}\r\n\t\t\telse if (unit == \"hour\" && value == 24) {\r\n\t\t\t\tvalues[\"day\"]++;\r\n\t\t\t\tvalues[\"hour\"] = 0;\r\n\t\t\t}\r\n\t\t\telse if (unit == \"day\" && value == 7) {\r\n\t\t\t\tvalues[\"week\"]++;\r\n\t\t\t\tvalues[\"day\"] = 0;\r\n\t\t\t}\r\n\t\t\telse if (unit == \"day\" && value == 30) {\r\n\t\t\t\tvalues[\"month\"]++;\r\n\t\t\t\tvalues[\"day\"] = 0;\r\n\t\t\t}\r\n\t\t\telse if (unit == \"month\" && value == 12) {\r\n\t\t\t\tvalues[\"year\"]++;\r\n\t\t\t\tvalues[\"month\"] = 0;\r\n\t\t\t}\r\n\t\t\t// if (val > 0) {\r\n\t\t\t// \tres = res.replace($type.PLACEHOLDER, $utils.padString(val, 2, \"0\"));\r\n\t\t\t// }\r\n\t\t\t// else {\r\n\t\t\t// \tres = res.replace($type.PLACEHOLDER, \"\");\r\n\t\t\t// }\r\n\t\t});\r\n\r\n\t\t// Iterate again\r\n\t\tfor (let i = 0, len = details.parts.length; i < len; i++) {\r\n\t\t\t// Gather the part\r\n\t\t\tlet part = details.parts[i];\r\n\t\t\tlet unit: any = this._toTimeUnit(part.substr(0, 1));\r\n\t\t\tlet digits = part.length;\r\n\r\n\t\t\t// Calculate current unit value\r\n\t\t\tres = res.replace($type.PLACEHOLDER, $utils.padString(values[unit], digits, \"0\"));\r\n\t\t}\r\n\r\n\r\n\t\t// Reapply negative sign\r\n\t\tif (negative) {\r\n\t\t\tres = \"-\" + res;\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value to timestamp in milliseconds.\r\n\t *\r\n\t * @param value     A source value\r\n\t * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n\t * @return Value representation as a timestamp in milliseconds\r\n\t */\r\n\tpublic toTimeStamp(value: number, baseUnit: TimeUnit): number {\r\n\t\treturn value * this._getUnitValue(baseUnit);\r\n\t}\r\n\r\n\tprotected _toTimeUnit(code: string): TimeUnit | undefined {\r\n\t\tswitch (code) {\r\n\t\t\tcase \"S\":\r\n\t\t\t\treturn \"millisecond\";\r\n\t\t\tcase \"s\":\r\n\t\t\t\treturn \"second\";\r\n\t\t\tcase \"m\":\r\n\t\t\t\treturn \"minute\";\r\n\t\t\tcase \"h\":\r\n\t\t\t\treturn \"hour\";\r\n\t\t\tcase \"d\":\r\n\t\t\t\treturn \"day\";\r\n\t\t\tcase \"w\":\r\n\t\t\t\treturn \"week\";\r\n\t\t\tcase \"M\":\r\n\t\t\t\treturn \"month\";\r\n\t\t\tcase \"y\":\r\n\t\t\t\treturn \"year\";\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns appropriate default format for the value.\r\n\t *\r\n\t * If `maxValue` is sepcified, it will use that value to determine the time\r\n\t * unit for the format.\r\n\t *\r\n\t * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n\t * will get `\"10\"`.\r\n\t *\r\n\t * However, you might want it to be formatted in the context of bigger scale,\r\n\t * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n\t * values, including small ones will use format with minutes, e.g.:\r\n\t * `00:10`, `00:50`, `12: 30`, etc.\r\n\t *\r\n\t * @param value     Value to format\r\n\t * @param maxValue  Maximum value to be used to determine format\r\n\t * @param baseUnit  Base unit of the value\r\n\t * @return Format\r\n\t */\r\n\tpublic getFormat(value: number, maxValue?: number, baseUnit?: TimeUnit): string {\r\n\r\n\t\t// Is format override set?\r\n\t\tif (this.get(\"durationFormat\") != null) {\r\n\t\t\treturn this.get(\"durationFormat\")!;\r\n\t\t}\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.get(\"baseUnit\");\r\n\t\t}\r\n\r\n\t\tif (maxValue != null && value != maxValue) {\r\n\t\t\tvalue = Math.abs(value);\r\n\t\t\tmaxValue = Math.abs(maxValue);\r\n\t\t\tlet maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n\t\t\treturn (<any>this.get(\"durationFormats\"))[baseUnit!][maxUnit!];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet unit = this.getValueUnit(value, baseUnit);\r\n\t\t\treturn (<any>this.get(\"durationFormats\"))[baseUnit!][unit!];\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns value's closest denominator time unit, e.g 100 seconds is\r\n\t * `\"minute\"`, while 59 seconds would still be `second`.\r\n\t *\r\n\t * @param value     Source duration value\r\n\t * @param baseUnit  Base unit\r\n\t * @return Denominator\r\n\t */\r\n\tpublic getValueUnit(value: number, baseUnit?: TimeUnit): TimeUnit | undefined {\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.get(\"baseUnit\");\r\n\t\t}\r\n\r\n\t\t// Convert to milliseconds\r\n\t\tlet currentUnit: any;\r\n\t\tlet ms = this.getMilliseconds(value, baseUnit);\r\n\t\t$object.eachContinue(this._getUnitValues(), (key, val) => {\r\n\t\t\tif (key == baseUnit || currentUnit) {\r\n\t\t\t\tlet num = ms / val;\r\n\t\t\t\tif (num <= 1) {\r\n\t\t\t\t\tif (!currentUnit) {\r\n\t\t\t\t\t\tcurrentUnit = key;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tcurrentUnit = key;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\treturn currentUnit;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts value to milliseconds according to `baseUnit`.\r\n\t *\r\n\t * @param value     Source duration value\r\n\t * @param baseUnit  Base unit\r\n\t * @return Value in milliseconds\r\n\t */\r\n\tpublic getMilliseconds(value: number, baseUnit?: TimeUnit): number {\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.get(\"baseUnit\");\r\n\t\t}\r\n\r\n\t\treturn value * this._getUnitValue(baseUnit!);\r\n\t}\r\n\r\n\tprotected _getUnitValue(timeUnit: TimeUnit): number {\r\n\t\treturn this._getUnitValues()[timeUnit];\r\n\t}\r\n\r\n\tprotected _getUnitValues(): any {\r\n\t\treturn {\r\n\t\t\t\"millisecond\": 1,\r\n\t\t\t\"second\": 1000,\r\n\t\t\t\"minute\": 60000,\r\n\t\t\t\"hour\": 3600000,\r\n\t\t\t\"day\": 86400000,\r\n\t\t\t\"week\": 604800000,\r\n\t\t\t\"month\": 2592000000,\r\n\t\t\t\"year\": 31536000000,\r\n\t\t};\r\n\t}\r\n\r\n}\r\n", "/**\n * amCharts 5 locale\n * \n * Locale: en\n * Language: International English\n * Author: Martynas Majeris\n *\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\n *\n * ---\n * Edit but leave the header section above this line. You can remove any\n * subsequent comment sections.\n * ---\n *\n * Use this file as a template to create translations. Leave the key part in\n * English intact. Fill the value with a translation.\n *\n * Empty string means no translation, so default \"International English\"\n * will be used.\n *\n * If you need the translation to literally be an empty string, use `null`\n * instead.\n *\n * IMPORTANT:\n * When translating make good effort to keep the translation length\n * at least the same chartcount as the English, especially for short prompts.\n *\n * Having significantly longer prompts may distort the actual charts.\n *\n * NOTE:\n * Some prompts - like months or weekdays - come in two versions: full and\n * shortened.\n *\n * If there's no official shortened version of these in your language, and it\n * would not be possible to invent such short versions that don't seem weird\n * to native speakers of that language, fill those with the same as full\n * version.\n *\n * PLACEHOLDERS:\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\n * values during translation and should be retained in the translated prompts.\n *\n * Placeholder positions may be changed to better suit structure of the\n * sentence.\n *\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\n * actual value representing range start, and \"%2\" will be replaced by end\n * value.\n *\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\n * places where they will make sense.\n *\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\n */\nexport default {\n\t\"firstDayOfWeek\": 1,\n\t\n\t// Number formatting options.\n\t// \n\t// Please check with the local standards which separator is accepted to be\n\t// used for separating decimals, and which for thousands.\n\t\"_decimalSeparator\": \".\",\n\t\"_thousandSeparator\": \",\",\n\n\t// Position of the percent sign in numbers\n\t\"_percentPrefix\": null,\n\t\"_percentSuffix\": \"%\",\n\n\t// Suffixes for numbers\n\t// When formatting numbers, big or small numers might be reformatted to\n\t// shorter version, by applying a suffix.\n\t// \n\t// For example, 1000000 might become \"1m\".\n\t// Or 1024 might become \"1KB\" if we're formatting byte numbers.\n\t// \n\t// This section defines such suffixes for all such cases.\n\t\"_big_number_suffix_3\": \"k\",\n\t\"_big_number_suffix_6\": \"M\",\n\t\"_big_number_suffix_9\": \"G\",\n\t\"_big_number_suffix_12\": \"T\",\n\t\"_big_number_suffix_15\": \"P\",\n\t\"_big_number_suffix_18\": \"E\",\n\t\"_big_number_suffix_21\": \"Z\",\n\t\"_big_number_suffix_24\": \"Y\",\n\n\t\"_small_number_suffix_3\": \"m\",\n\t\"_small_number_suffix_6\": \"μ\",\n\t\"_small_number_suffix_9\": \"n\",\n\t\"_small_number_suffix_12\": \"p\",\n\t\"_small_number_suffix_15\": \"f\",\n\t\"_small_number_suffix_18\": \"a\",\n\t\"_small_number_suffix_21\": \"z\",\n\t\"_small_number_suffix_24\": \"y\",\n\n\t\"_byte_suffix_B\": \"B\",\n\t\"_byte_suffix_KB\": \"KB\",\n\t\"_byte_suffix_MB\": \"MB\",\n\t\"_byte_suffix_GB\": \"GB\",\n\t\"_byte_suffix_TB\": \"TB\",\n\t\"_byte_suffix_PB\": \"PB\",\n\n\t// Default date formats for various periods.\n\t// \n\t// This should reflect official or de facto formatting universally accepted\n\t// in the country translation is being made for\n\t// Available format codes here:\n\t// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\n\t// \n\t// This will be used when formatting date/time for particular granularity,\n\t// e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\n\t// \n\t// \"date\" is used as in default date format when showing standalone dates.\n\t\"_date\": \"yyyy-MM-dd\",\n\t\"_date_millisecond\": \"mm:ss SSS\",\n\t\"_date_millisecond_full\": \"HH:mm:ss SSS\",\n\t\"_date_second\": \"HH:mm:ss\",\n\t\"_date_second_full\": \"HH:mm:ss\",\n\t\"_date_minute\": \"HH:mm\",\n\t\"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\n\t\"_date_hour\": \"HH:mm\",\n\t\"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\n\t\"_date_day\": \"MMM dd\",\n\t\"_date_day_full\": \"MMM dd, yyyy\",\n\t\"_date_week\": \"ww\",\n\t\"_date_week_full\": \"MMM dd, yyyy\",\n\t\"_date_month\": \"MMM\",\n\t\"_date_month_full\": \"MMM, yyyy\",\n\t\"_date_year\": \"yyyy\",\n\n\t// Default duration formats for various base units.\n\t// \n\t// This will be used by DurationFormatter to format numeric values into\n\t// duration.\n\t// \n\t// Notice how each duration unit comes in several versions. This is to ensure\n\t// that each base unit is shown correctly.\n\t// \n\t// For example, if we have baseUnit set to \"second\", meaning our duration is\n\t// in seconds.\n\t// \n\t// If we pass in `50` to formatter, it will know that we have just 50 seconds\n\t// (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\n\t// and the formatted result will be in like `\"50\"`.\n\t// \n\t// If we pass in `70`, which is more than a minute, the formatter will switch\n\t// to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\n\t// text.\n\t// \n\t// Available codes here:\n\t// https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\n\t\"_duration_millisecond\": \"SSS\",\n\t\"_duration_millisecond_second\": \"ss.SSS\",\n\t\"_duration_millisecond_minute\": \"mm:ss SSS\",\n\t\"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\n\t\"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\n\t\"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\n\t\"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\n\t\"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\n\n\t\"_duration_second\": \"ss\",\n\t\"_duration_second_minute\": \"mm:ss\",\n\t\"_duration_second_hour\": \"hh:mm:ss\",\n\t\"_duration_second_day\": \"d'd' hh:mm:ss\",\n\t\"_duration_second_week\": \"d'd' hh:mm:ss\",\n\t\"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\n\t\"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\n\n\t\"_duration_minute\": \"mm\",\n\t\"_duration_minute_hour\": \"hh:mm\",\n\t\"_duration_minute_day\": \"d'd' hh:mm\",\n\t\"_duration_minute_week\": \"d'd' hh:mm\",\n\t\"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\n\t\"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\n\n\t\"_duration_hour\": \"hh'h'\",\n\t\"_duration_hour_day\": \"d'd' hh'h'\",\n\t\"_duration_hour_week\": \"d'd' hh'h'\",\n\t\"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\n\t\"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\n\n\t\"_duration_day\": \"d'd'\",\n\t\"_duration_day_week\": \"d'd'\",\n\t\"_duration_day_month\": \"M'm' dd'd'\",\n\t\"_duration_day_year\": \"y'y' MM'm' dd'd'\",\n\n\t\"_duration_week\": \"w'w'\",\n\t\"_duration_week_month\": \"w'w'\",\n\t\"_duration_week_year\": \"w'w'\",\n\n\t\"_duration_month\": \"M'm'\",\n\t\"_duration_month_year\": \"y'y' MM'm'\",\n\n\t\"_duration_year\": \"y'y'\",\n\n\t// Era translations\n\t\"_era_ad\": \"AD\",\n\t\"_era_bc\": \"BC\",\n\n\t// Day part, used in 12-hour formats, e.g. 5 P.M.\n\t// Please note that these come in 3 variants:\n\t// * one letter (e.g. \"A\")\n\t// * two letters (e.g. \"AM\")\n\t// * two letters with dots (e.g. \"A.M.\")\n\t// \n\t// All three need to to be translated even if they are all the same. Some\n\t// users might use one, some the other.\n\t\"A\": \"\",\n\t\"P\": \"\",\n\t\"AM\": \"\",\n\t\"PM\": \"\",\n\t\"A.M.\": \"\",\n\t\"P.M.\": \"\",\n\n\t// Date-related stuff.\n\t// \n\t// When translating months, if there's a difference, use the form which is\n\t// best for a full date, e.g. as you would use it in \"2018 January 1\".\n\t// \n\t// Note that May is listed twice. This is because in English May is the same\n\t// in both long and short forms, while in other languages it may not be the\n\t// case. Translate \"May\" to full word, while \"May(short)\" to shortened\n\t// version.\n\t// \n\t// Should month names and weekdays be capitalized or not?\n\t// \n\t// Rule of thumb is this: if the names should always be capitalized,\n\t// regardless of name position within date (\"January\", \"21st January 2018\",\n\t// etc.) use capitalized names. Otherwise enter all lowercase.\n\t// \n\t// The date formatter will automatically capitalize names if they are the\n\t// first (or only) word in resulting date.\n\t\"January\": \"\",\n\t\"February\": \"\",\n\t\"March\": \"\",\n\t\"April\": \"\",\n\t\"May\": \"\",\n\t\"June\": \"\",\n\t\"July\": \"\",\n\t\"August\": \"\",\n\t\"September\": \"\",\n\t\"October\": \"\",\n\t\"November\": \"\",\n\t\"December\": \"\",\n\t\"Jan\": \"\",\n\t\"Feb\": \"\",\n\t\"Mar\": \"\",\n\t\"Apr\": \"\",\n\t\"May(short)\": \"May\",\n\t\"Jun\": \"\",\n\t\"Jul\": \"\",\n\t\"Aug\": \"\",\n\t\"Sep\": \"\",\n\t\"Oct\": \"\",\n\t\"Nov\": \"\",\n\t\"Dec\": \"\",\n\n\t// Weekdays.\n\t\"Sunday\": \"\",\n\t\"Monday\": \"\",\n\t\"Tuesday\": \"\",\n\t\"Wednesday\": \"\",\n\t\"Thursday\": \"\",\n\t\"Friday\": \"\",\n\t\"Saturday\": \"\",\n\t\"Sun\": \"\",\n\t\"Mon\": \"\",\n\t\"Tue\": \"\",\n\t\"Wed\": \"\",\n\t\"Thu\": \"\",\n\t\"Fri\": \"\",\n\t\"Sat\": \"\",\n\n\t// Date ordinal function.\n\t// \n\t// This is used when adding number ordinal when formatting days in dates.\n\t// \n\t// E.g. \"January 1st\", \"February 2nd\".\n\t// \n\t// The function accepts day number, and returns a string to be added to the\n\t// day, like in default English translation, if we pass in 2, we will receive\n\t// \"nd\" back.\n\t\"_dateOrd\": function(day: number): string {\n\t\tlet res = \"th\";\n\t\tif ((day < 11) || (day > 13)) {\n\t\t\tswitch (day % 10) {\n\t\t\t\tcase 1:\n\t\t\t\t\tres = \"st\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tres = \"nd\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tres = \"rd\"\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\t// Various chart controls.\n\t// Shown as a tooltip on zoom out button.\n\t\"Zoom Out\": \"\",\n\n\t// Timeline buttons\n\t\"Play\": \"\",\n\t\"Stop\": \"\",\n\n\t// Chart's Legend screen reader title.\n\t\"Legend\": \"\",\n\n\t// Legend's item screen reader indicator.\n\t\"Press ENTER to toggle\": \"\",\n\n\t// Shown when the chart is busy loading something.\n\t\"Loading\": \"\",\n\n\t// Shown as the first button in the breadcrumb navigation, e.g.:\n\t// Home > First level > ...\n\t\"Home\": \"\",\n\n\t// Chart types.\n\t// Those are used as default screen reader titles for the main chart element\n\t// unless developer has set some more descriptive title.\n\t\"Chart\": \"\",\n\t\"Serial chart\": \"\",\n\t\"X/Y chart\": \"\",\n\t\"Pie chart\": \"\",\n\t\"Gauge chart\": \"\",\n\t\"Radar chart\": \"\",\n\t\"Sankey diagram\": \"\",\n\t\"Flow diagram\": \"\",\n\t\"Chord diagram\": \"\",\n\t\"TreeMap chart\": \"\",\n\t\"Force directed tree\": \"\",\n\t\"Sliced chart\": \"\",\n\n\t// Series types.\n\t// Used to name series by type for screen readers if they do not have their\n\t// name set.\n\t\"Series\": \"\",\n\t\"Candlestick Series\": \"\",\n\t\"OHLC Series\": \"\",\n\t\"Column Series\": \"\",\n\t\"Line Series\": \"\",\n\t\"Pie Slice Series\": \"\",\n\t\"Funnel Series\": \"\",\n\t\"Pyramid Series\": \"\",\n\t\"X/Y Series\": \"\",\n\n\t// Map-related stuff.\n\t\"Map\": \"\",\n\t\"Press ENTER to zoom in\": \"\",\n\t\"Press ENTER to zoom out\": \"\",\n\t\"Use arrow keys to zoom in and out\": \"\",\n\t\"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\n\n\t// Export-related stuff.\n\t// These prompts are used in Export menu labels.\n\t// \n\t// \"Export\" is the top-level menu item.\n\t// \n\t// \"Image\", \"Data\", \"Print\" as second-level indicating type of export\n\t// operation.\n\t// \n\t// Leave actual format untranslated, unless you absolutely know that they\n\t// would convey more meaning in some other way.\n\t\"Export\": \"\",\n\t\"Image\": \"\",\n\t\"Data\": \"\",\n\t\"Print\": \"\",\n\t\"Press ENTER or use arrow keys to navigate\": \"\",\n\t\"Press ENTER to open\": \"\",\n\t\"Press ENTER to print.\": \"\",\n\t\"Press ENTER to export as %1.\": \"\",\n\t\"(Press ESC to close this message)\": \"\",\n\t\"Image Export Complete\": \"\",\n\t\"Export operation took longer than expected. Something might have gone wrong.\": \"\",\n\t\"Saved from\": \"\",\n\t\"PNG\": \"\",\n\t\"JPG\": \"\",\n\t\"GIF\": \"\",\n\t\"SVG\": \"\",\n\t\"PDF\": \"\",\n\t\"JSON\": \"\",\n\t\"CSV\": \"\",\n\t\"XLSX\": \"\",\n\t\"HTML\": \"\",\n\n\t// Scrollbar-related stuff.\n\t// \n\t// Scrollbar is a control which can zoom and pan the axes on the chart.\n\t// \n\t// Each scrollbar has two grips: left or right (for horizontal scrollbar) or\n\t// upper and lower (for vertical one).\n\t// \n\t// Prompts change in relation to whether Scrollbar is vertical or horizontal.\n\t// \n\t// The final section is used to indicate the current range of selection.\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\n\t\"Use left and right arrows to move selection\": \"\",\n\t\"Use left and right arrows to move left selection\": \"\",\n\t\"Use left and right arrows to move right selection\": \"\",\n\t\"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\n\t\"Use up and down arrows to move selection\": \"\",\n\t\"Use up and down arrows to move lower selection\": \"\",\n\t\"Use up and down arrows to move upper selection\": \"\",\n\t\"From %1 to %2\": \"\",\n\t\"From %1\": \"\",\n\t\"To %1\": \"\",\n\n\t// Data loader-related.\n\t\"No parser available for file: %1\": \"\",\n\t\"Error parsing file: %1\": \"\",\n\t\"Unable to load file: %1\": \"\",\n\t\"Invalid date\": \"\",\n\n\t// Common actions\n\t\"Close\": \"\",\n\t\"Minimize\": \"\"\n\n};", "import { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\nimport * as $array from \"./Array\"\nimport * as $object from \"./Object\"\nimport en from \"../../../locales/en\";\n\n/**\n * Defines properties that exist for the locale.\n *\n * @ignore\n */\nexport interface ILocaleSettings {\n\t\"firstDayOfWeek\"?: number,\n\n\t// number formatter related\n\t\"_decimalSeparator\"?: string;\n\t\"_thousandSeparator\"?: string;\n\n\t\"_percentPrefix\"?: string | null;\n\t\"_percentSuffix\"?: string | null;\n\n\t\"_big_number_suffix_3\"?: string;\n\t\"_big_number_suffix_6\"?: string;\n\t\"_big_number_suffix_9\"?: string;\n\t\"_big_number_suffix_12\"?: string;\n\t\"_big_number_suffix_15\"?: string;\n\t\"_big_number_suffix_18\"?: string;\n\t\"_big_number_suffix_21\"?: string;\n\t\"_big_number_suffix_24\"?: string;\n\n\t\"_small_number_suffix_24\"?: string;\n\t\"_small_number_suffix_21\"?: string;\n\t\"_small_number_suffix_18\"?: string;\n\t\"_small_number_suffix_15\"?: string;\n\t\"_small_number_suffix_12\"?: string;\n\t\"_small_number_suffix_9\"?: string;\n\t\"_small_number_suffix_6\"?: string;\n\t\"_small_number_suffix_3\"?: string;\n\n\t\"_byte_suffix_B\"?: string;\n\t\"_byte_suffix_KB\"?: string;\n\t\"_byte_suffix_MB\"?: string;\n\t\"_byte_suffix_GB\"?: string;\n\t\"_byte_suffix_TB\"?: string;\n\t\"_byte_suffix_PB\"?: string;\n\n\t// Default date formats for various periods\n\t\"_date\"?: string;\n\t\"_date_millisecond\"?: string;\n\t\"_date_millisecond_full\"?: string;\n\t\"_date_second\"?: string;\n\t\"_date_second_full\"?: string;\n\t\"_date_minute\"?: string;\n\t\"_date_minute_full\"?: string;\n\t\"_date_hour\"?: string;\n\t\"_date_hour_full\"?: string;\n\t\"_date_day\"?: string;\n\t\"_date_day_full\"?: string;\n\t\"_date_week\"?: string;\n\t\"_date_week_full\"?: string;\n\t\"_date_month\"?: string;\n\t\"_date_month_full\"?: string;\n\t\"_date_year\"?: string;\n\n\t// Default duration formats for various base units\n\t\"_duration_millisecond\"?: string;\n\t\"_duration_millisecond_second\"?: string;\n\t\"_duration_millisecond_minute\"?: string;\n\t\"_duration_millisecond_hour\"?: string;\n\t\"_duration_millisecond_day\"?: string;\n\t\"_duration_millisecond_week\"?: string;\n\t\"_duration_millisecond_month\"?: string;\n\t\"_duration_millisecond_year\"?: string;\n\n\t\"_duration_second\"?: string;\n\t\"_duration_second_minute\"?: string;\n\t\"_duration_second_hour\"?: string;\n\t\"_duration_second_day\"?: string;\n\t\"_duration_second_week\"?: string;\n\t\"_duration_second_month\"?: string;\n\t\"_duration_second_year\"?: string;\n\n\t\"_duration_minute\"?: string;\n\t\"_duration_minute_hour\"?: string;\n\t\"_duration_minute_day\"?: string;\n\t\"_duration_minute_week\"?: string;\n\t\"_duration_minute_month\"?: string;\n\t\"_duration_minute_year\"?: string;\n\n\t\"_duration_hour\"?: string;\n\t\"_duration_hour_day\"?: string;\n\t\"_duration_hour_week\"?: string;\n\t\"_duration_hour_month\"?: string;\n\t\"_duration_hour_year\"?: string;\n\n\t\"_duration_day\"?: string;\n\t\"_duration_day_week\"?: string;\n\t\"_duration_day_month\"?: string;\n\t\"_duration_day_year\"?: string;\n\n\t\"_duration_week\"?: string;\n\t\"_duration_week_month\"?: string;\n\t\"_duration_week_year\"?: string;\n\n\t\"_duration_month\"?: string;\n\t\"_duration_month_year\"?: string;\n\n\t\"_duration_year\"?: string;\n\n\t// Era\n\t\"_era_ad\"?: string;\n\t\"_era_bc\"?: string;\n\n\t// Period\n\t\"A\"?: string;\n\t\"P\"?: string;\n\t\"AM\"?: string;\n\t\"PM\"?: string;\n\t\"A.M.\"?: string;\n\t\"P.M.\"?: string;\n\n\t// Dates\n\t\"January\"?: string;\n\t\"February\"?: string;\n\t\"March\"?: string;\n\t\"April\"?: string;\n\t\"May\"?: string;\n\t\"June\"?: string;\n\t\"July\"?: string;\n\t\"August\"?: string;\n\t\"September\"?: string;\n\t\"October\"?: string;\n\t\"November\"?: string;\n\t\"December\"?: string;\n\t\"Jan\"?: string;\n\t\"Feb\"?: string;\n\t\"Mar\"?: string;\n\t\"Apr\"?: string;\n\t\"May(short)\"?: string;\n\t\"Jun\"?: string;\n\t\"Jul\"?: string;\n\t\"Aug\"?: string;\n\t\"Sep\"?: string;\n\t\"Oct\"?: string;\n\t\"Nov\"?: string;\n\t\"Dec\"?: string;\n\t\"Sunday\"?: string;\n\t\"Monday\"?: string;\n\t\"Tuesday\"?: string;\n\t\"Wednesday\"?: string;\n\t\"Thursday\"?: string;\n\t\"Friday\"?: string;\n\t\"Saturday\"?: string;\n\t\"Sun\"?: string;\n\t\"Mon\"?: string;\n\t\"Tue\"?: string;\n\t\"Wed\"?: string;\n\t\"Thu\"?: string;\n\t\"Fri\"?: string;\n\t\"Sat\"?: string;\n\n\t// Chart elements\n\t\"Zoom Out\"?: string;\n\t\"Play\"?: string;\n\t\"Stop\"?: string;\n\t\"Legend\"?: string;\n\t\"Press ENTER to toggle\"?: string;\n\t\"Loading\"?: string;\n\t\"%1 shown\"?: string;\n\t\"%1 hidden\"?: string;\n\n\t// Chart types\n\t\"Chart\"?: string;\n\t\"Serial chart\"?: string;\n\t\"X/Y chart\"?: string;\n\t\"Pie chart\"?: string;\n\t\"Sunburst chart\"?: string;\n\t\"Gauge chart\"?: string;\n\t\"Radar chart\"?: string;\n\t\"Sankey diagram\"?: string;\n\t\"Flow diagram\"?: string;\n\t\"Chord diagram\"?: string;\n\t\"TreeMap chart\"?: string;\n\t\"Force directed tree\"?: string;\n\t\"Sliced chart\"?: string;\n\n\t// Series types\n\t\"Series\"?: string;\n\t\"Candlestick Series\"?: string;\n\t\"OHLC Series\"?: string;\n\t\"Column Series\"?: string;\n\t\"Line Series\"?: string;\n\t\"Pie Slice Series\"?: string;\n\t\"Funnel Series\"?: string;\n\t\"Pyramid Series\"?: string;\n\t\"X/Y Series\"?: string;\n\n\t// Map-related\n\t\"Map\"?: string;\n\t\"Press ENTER to zoom in\"?: string;\n\t\"Press ENTER to zoom out\"?: string;\n\t\"Use arrow keys to zoom in and out\"?: string;\n\t\"Use plus and minus keys on your keyboard to zoom in and out\"?: string;\n\t\"Home\"?: string;\n\t\"Zoom level changed to %1\"?: string;\n\n\t// Export-related\n\t\"Export\"?: string;\n\t\"Image\"?: string;\n\t\"Data\"?: string;\n\t\"Print\"?: string;\n\t\"Press ENTER or use arrow keys to navigate\"?: string;\n\t\"Press ENTER to open\"?: string;\n\t\"Press ENTER to print.\"?: string;\n\t\"Press ENTER to export as %1.\"?: string;\n\t\"(Press ESC to close this message)\"?: string;\n\t\"Image Export Complete\"?: string;\n\t\"Export operation took longer than expected. Something might have gone wrong.\"?: string;\n\t\"Saved from\"?: string;\n\t\"PNG\"?: string;\n\t\"JPG\"?: string;\n\t\"GIF\"?: string;\n\t\"SVG\"?: string;\n\t\"PDF\"?: string;\n\t\"JSON\"?: string;\n\t\"CSV\"?: string;\n\t\"XLSX\"?: string;\n\t\"HTML\"?: string;\n\n\t// Scrollbar-related\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\"?: string;\n\t\"Use left and right arrows to move selection\"?: string;\n\t\"Use left and right arrows to move left selection\"?: string;\n\t\"Use left and right arrows to move right selection\"?: string;\n\t\"Use TAB select grip buttons or up and down arrows to change selection\"?: string;\n\t\"Use up and down arrows to move selection\"?: string;\n\t\"Use up and down arrows to move lower selection\"?: string;\n\t\"Use up and down arrows to move upper selection\"?: string;\n\t\"From %1 to %2\"?: string;\n\t\"From %1\"?: string;\n\t\"To %1\"?: string;\n\n\t// Data loader-related\n\t\"No parser available for file: %1\"?: string;\n\t\"Error parsing file: %1\"?: string;\n\t\"Unable to load file: %1\"?: string;\n\t\"Invalid date\"?: string;\n\n\t// Common actions\n\t\"Close\"?: string;\n\t\"Minimize\"?: string;\n\n\t\"Venn Series\"?: string;\n\t\"Venn Diagram\"?: string;\n}\n\n/**\n * Defines functions that exist for the locale.\n *\n * @ignore\n */\nexport interface ILocaleFunctions {\n\t// ordinal function\n\t\"_dateOrd\": (day: number) => string;\n}\n\n/**\n * Defines all of the defaults for locale properties.\n * @ignore\n */\nexport interface ILocaleDefault extends ILocaleSettings, ILocaleFunctions { }\n\n/**\n * Defines locale interface.\n *\n * @ignore\n */\nexport interface ILocale extends Partial<ILocaleDefault> { };\n\nexport interface ILanguageSettings extends IEntitySettings {\n}\n\nexport interface ILanguagePrivate extends IEntityPrivate {\n\n\t/**\n\t * A locale for International English (default).\n\t */\n\tdefaultLocale: ILocale;\n\n}\n\n/**\n * Add localization functionality.\n */\nexport class Language extends Entity {\n\tdeclare public _settings: ILanguageSettings;\n\tdeclare public _privateSettings: ILanguagePrivate;\n\n\tprotected _setDefaults() {\n\t\tthis.setPrivate(\"defaultLocale\", en);\n\t\tsuper._setDefaults();\n\t}\n\n\t/**\n\t * Returns a prompt translation.\n\t * \n\t * @param   prompt   Prompt to translate\n\t * @param   locale   Target locale\n\t * @param   ...rest  Parameters\n\t * @return           Translation\n\t */\n\tpublic translate<Key extends keyof ILocaleSettings>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\n\n\t\t// Get langauge\n\t\tif (!locale) {\n\t\t\tlocale = this._root.locale || this.getPrivate(\"defaultLocale\");\n\t\t}\n\n\t\t// Init translation\n\t\tlet translation: string = prompt;\n\t\tlet value = locale[prompt];\n\n\t\t// Try to look for the translation\n\t\tif (value === null) {\n\t\t\ttranslation = \"\";\n\t\t}\n\t\telse if (value != null) {\n\t\t\t// It might be an empty string\n\t\t\tif (value) {\n\t\t\t\ttranslation = <string>value!;\n\t\t\t}\n\t\t}\n\t\telse if (locale !== this.getPrivate(\"defaultLocale\")) {\n\t\t\t// Try to look in default language\n\t\t\treturn this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\n\t\t}\n\n\t\t// Replace %1, %2, etc params\n\t\tif (rest.length) {\n\t\t\tfor (let len = rest.length, i = 0; i < len; ++i) {\n\t\t\t\ttranslation = translation.split(\"%\" + (i + 1)).join(rest[i]);\n\t\t\t}\n\t\t}\n\n\t\t// Return the translation\n\t\treturn translation;\n\t}\n\n\t/**\n\t * Returns a prompt translation, including custom prompts.\n\t * \n\t * @param   prompt   Prompt to translate\n\t * @param   locale   Target locale\n\t * @param   ...rest  Parameters\n\t * @return           Translation\n\t */\n\tpublic translateAny(prompt: string, locale?: ILocale, ...rest: Array<string>): string {\n\t\treturn this.translate(<any>prompt, locale, ...rest);\n\t}\n\n\t/**\n\t * Add a custom prompt to locale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\n\t * @param  prompt       Source prompt\n\t * @param  translation  Tanslation\n\t * @param  locale       Target locale\n\t */\n\tpublic setTranslationAny(prompt: string, translation: string, locale?: ILocale): void {\n\t\tconst localeTarget = locale || this._root.locale;\n\t\t(<any>localeTarget)[prompt] = translation;\n\t}\n\n\t/**\n\t * Add a batch of custom prompts.\n\t *\n\t * @since 5.3.3\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/creating-translations/#Extending_locale_with_custom_prompts}\n\t * @param  translations  Translations\n\t * @param  locale        Target locale\n\t */\n\tpublic setTranslationsAny(translations: { [index: string]: any }, locale?: ILocale): void {\n\t\t$object.each(translations, (key, val) => {\n\t\t\tthis.setTranslationAny(key as string, val, locale);\n\t\t});\n\t}\n\n\tpublic translateEmpty<Key extends keyof ILocaleSettings>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\n\t\tlet translation = this.translate(prompt, locale, ...rest);\n\t\treturn translation == prompt ? \"\" : translation;\n\t}\n\n\tpublic translateFunc<Key extends keyof ILocaleFunctions>(prompt: Key, locale?: ILocale): ILocaleFunctions[Key] {\n\n\t\tif ((<any>this._root.locale)[prompt]) {\n\t\t\treturn (<any>this._root.locale)[prompt];\n\t\t}\n\n\t\t// Try to look in default language\n\t\tif (locale !== this.getPrivate(\"defaultLocale\")) {\n\t\t\treturn this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\n\t\t}\n\n\t\t// Fail - return empty function\n\t\treturn (): string => {\n\t\t\treturn \"\";\n\t\t};\n\t}\n\n\t/**\n\t * Translates a btach of prompts.\n\t * \n\t * @param  list    Array of prompts to translate\n\t * @param  locale  Target locale\n\t * @return         Array of translations\n\t */\n\tpublic translateAll<Key extends keyof ILocaleSettings>(list: Array<Key>, locale?: ILocale): Array<string> {\n\t\t// Translate all items in the list\n\t\tif (!this.isDefault()) {\n\t\t\treturn $array.map(list, (x) => this.translate(x, locale));\n\n\t\t} else {\n\t\t\treturn list;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if the currently selected locale is a default locale.\n\t *\n\t * @return `true` if locale is default; `false` if it is not.\n\t */\n\tpublic isDefault(): boolean {\n\t\treturn this.getPrivate(\"defaultLocale\") === this._root.locale;\n\t}\n\n}\n", "/**\n * Modified from Pixi:\n *\n * The MIT License\n *\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport type { IPoint } from \"./IPoint\";\n\n/**\n * @ignore\n */\nexport class Matrix {\n\tpublic a: number;\n\tpublic b: number;\n\tpublic c: number;\n\tpublic d: number;\n\tpublic tx: number;\n\tpublic ty: number;\n\n\tconstructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Sets the matrix based on all the available properties\n\t */\n\tsetTransform(x: number, y: number, pivotX: number, pivotY: number, rotation: number, scale: number = 1): void {\n\t\tthis.a = Math.cos(rotation) * scale;\n\t\tthis.b = Math.sin(rotation) * scale;\n\t\tthis.c = -Math.sin(rotation) * scale;\n\t\tthis.d = Math.cos(rotation) * scale;\n\t\tthis.tx = x - ((pivotX * this.a) + (pivotY * this.c));\n\t\tthis.ty = y - ((pivotX * this.b) + (pivotY * this.d));\n\t}\n\n\t/**\n\t * Get a new position with the current transformation applied.\n\t * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n\t */\n\tapply(origin: IPoint): IPoint {\n\t\treturn {\n\t\t\tx: (this.a * origin.x) + (this.c * origin.y) + this.tx,\n\t\t\ty: (this.b * origin.x) + (this.d * origin.y) + this.ty\n\t\t};\n\t}\n\n\t/**\n\t * Get a new position with the inverse of the current transformation applied.\n\t * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n\t */\n\tapplyInverse(origin: IPoint): IPoint {\n\t\tconst id = 1 / ((this.a * this.d) + (this.c * -this.b));\n\n\t\treturn {\n\t\t\tx: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\n\t\t\ty: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\n\t\t};\n\t}\n\n\t/**\n\t * Appends the given Matrix to this Matrix.\n\t */\n\tappend(matrix: Matrix): void {\n\t\tconst a1 = this.a;\n\t\tconst b1 = this.b;\n\t\tconst c1 = this.c;\n\t\tconst d1 = this.d;\n\t\tthis.a = (matrix.a * a1) + (matrix.b * c1);\n\t\tthis.b = (matrix.a * b1) + (matrix.b * d1);\n\t\tthis.c = (matrix.c * a1) + (matrix.d * c1);\n\t\tthis.d = (matrix.c * b1) + (matrix.d * d1);\n\t\tthis.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n\t\tthis.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\t}\n\n\t/**\n\t * Prepends the given Matrix to this Matrix.\n\t */\n\tprepend(matrix: Matrix): void {\n\t\tconst tx1 = this.tx;\n\t\tif (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n\t\t\tconst a1 = this.a;\n\t\t\tconst c1 = this.c;\n\t\t\tthis.a = (a1 * matrix.a) + (this.b * matrix.c);\n\t\t\tthis.b = (a1 * matrix.b) + (this.b * matrix.d);\n\t\t\tthis.c = (c1 * matrix.a) + (this.d * matrix.c);\n\t\t\tthis.d = (c1 * matrix.b) + (this.d * matrix.d);\n\t\t}\n\t\tthis.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n\t\tthis.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n\t}\n\n\t/**\n\t * Copies the other matrix's properties into this matrix\n\t */\n\tcopyFrom(matrix: Matrix): void {\n\t\tthis.a = matrix.a;\n\t\tthis.b = matrix.b;\n\t\tthis.c = matrix.c;\n\t\tthis.d = matrix.d;\n\t\tthis.tx = matrix.tx;\n\t\tthis.ty = matrix.ty;\n\t}\n}\n\n", "var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;", "/** @ignore *//** */\n\nimport {\n\tIRenderer, IContainer, IDisplayObject, IGraphics, IRendererEvents, IMargin,\n\tIText, ITextStyle, IRadialText, IPicture, IRendererEvent, ILayer, ICanvasOptions, BlendMode, IPointerEvent, Id\n} from \"./Renderer\";\nimport type { IBounds } from \"../../util/IBounds\";\nimport type { IPoint } from \"../../util/IPoint\";\nimport { Color } from \"../../util/Color\";\nimport { Matrix } from \"../../util/Matrix\";\nimport { Percent, percent } from \"../../util/Percent\";\n//import { Throttler } from \"../../util/Throttler\";\nimport { ArrayDisposer, Disposer, DisposerClass, IDisposer, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\nimport { TextFormatter, ITextChunk } from \"../../util/TextFormatter\";\nimport * as $utils from \"../../util/Utils\";\nimport * as $array from \"../../util/Array\";\nimport * as $object from \"../../util/Object\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\n\n\n/**\n * @ignore\n */\nfunction checkArgs(name: string, actual: number, expected: number) {\n\tif (actual !== expected) {\n\t\tthrow new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkMinArgs(name: string, actual: number, expected: number) {\n\tif (actual < expected) {\n\t\tthrow new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkEvenArgs(name: string, actual: number, expected: number) {\n\tcheckMinArgs(name, actual, expected);\n\n\tif ((actual % expected) !== 0) {\n\t\tthrow new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n\t}\n}\n\n/**\n * @ignore\n * This splits the flag so that way 0017 will be processed as 0 0 17\n *\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\n */\nfunction splitArcFlags(args: Array<string>) {\n\tfor (let i = 0; i < args.length; i += 7) {\n\t\tlet index = i + 3;\n\t\tlet flag = args[index];\n\n\t\tif (flag.length > 1) {\n\t\t\tconst a = /^([01])([01])(.*)$/.exec(flag);\n\n\t\t\tif (a !== null) {\n\t\t\t\targs.splice(index, 0, a[1]);\n\t\t\t\t++index;\n\n\t\t\t\targs.splice(index, 0, a[2]);\n\t\t\t\t++index;\n\n\t\t\t\tif (a[3].length > 0) {\n\t\t\t\t\targs[index] = a[3];\n\n\t\t\t\t} else {\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t++index;\n\n\t\tflag = args[index];\n\n\t\tif (flag.length > 1) {\n\t\t\tconst a = /^([01])(.+)$/.exec(flag);\n\n\t\t\tif (a !== null) {\n\t\t\t\targs.splice(index, 0, a[1]);\n\t\t\t\t++index;\n\n\t\t\t\targs[index] = a[2];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nfunction assertBinary(value: number): 0 | 1 {\n\tif (value === 0 || value === 1) {\n\t\treturn value;\n\n\t} else {\n\t\tthrow new Error(\"Flag must be 0 or 1\");\n\t}\n}\n\n//  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n/*function distributeId(id: number): number {\n\tif (id === 1) {\n\t\treturn 0x000001;\n\n\t} else {\n\t\t// Finds the closest power of 2\n\t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\n\n\t\t// Translates the id into an odd fraction index\n\t\tconst index = ((base - id) * 2) + 1;\n\n\t\t// TODO is Math.round correct ?\n\t\treturn Math.round(0xffffff * (index / base));\n\t}\n}*/\n\n/**\n * Function by smeans:\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\n * @ignore\n */\nfunction distributeId(id: number): number {\n\tconst rgb = [0, 0, 0];\n\n\tfor (let i = 0; i < 24; i++) {\n\t\trgb[i % 3] <<= 1;\n\t\trgb[i % 3] |= id & 0x01;\n\t\tid >>= 1;\n\t}\n\n\treturn (rgb[0] | 0) + (rgb[1] << 8) + (rgb[2] << 16);\n}\n\n/**\n * @ignore\n */\nfunction eachTargets(hitTarget: CanvasDisplayObject, f: (target: CanvasDisplayObject) => boolean): void {\n\tfor (; ;) {\n\t\tif (hitTarget.interactive) {\n\t\t\tif (!f(hitTarget)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (hitTarget._parent) {\n\t\t\thitTarget = hitTarget._parent;\n\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// TODO feature detection for mouse/touch/pointer\n/**\n * @ignore\n */\nfunction onPointerEvent(element: EventTarget, name: string, f: (event: Array<IPointerEvent>, target: Node | null) => void): IDisposer {\n\treturn $utils.addEventListener(element, $utils.getRendererEvent(name), (event: MouseEvent | TouchEvent) => {\n\t\tconst target = $utils.getEventTarget(event);\n\n\t\tlet touches = (<any>event).touches;\n\t\tif (touches) {\n\t\t\tif (touches.length == 0) {\n\t\t\t\ttouches = (<any>event).changedTouches;\n\t\t\t}\n\n\t\t\tf($array.copy(<TouchList>touches), target);\n\n\t\t} else {\n\t\t\tf([<MouseEvent>event], target);\n\t\t}\n\t});\n}\n\n/**\n * @ignore\n */\nfunction isTainted(image: HTMLImageElement): boolean {\n\tconst canvas = document.createElement(\"canvas\");\n\tcanvas.width = 1;\n\tcanvas.height = 1;\n\tconst context = canvas.getContext(\"2d\", { willReadFrequently: true })! as CanvasRenderingContext2D;\n\tcontext.drawImage(image, 0, 0, 1, 1);\n\n\ttry {\n\t\tcontext.getImageData(0, 0, 1, 1);\n\t\treturn false;\n\t}\n\tcatch (err) {\n\t\tconsole.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n\t\treturn true;\n\t}\n}\n\n/**\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\n *\n * @ignore\n */\nfunction clearCanvas(view: HTMLCanvasElement) {\n\tview.width = 0;\n\tview.height = 0;\n\tview.style.width = \"0px\";\n\tview.style.height = \"0px\";\n}\n\n\n/**\n * Aligns the coordinate to the pixel, so it renders crisp\n *\n * @ignore\n */\nfunction crisp(x: number): number {\n\treturn Math.floor(x) + .5;\n}\n\n/**\n * @ignore\n */\nexport class CanvasPivot implements IPoint {\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\tget y(): number {\n\t\treturn this._y;\n\t}\n\n\tset x(value: number) {\n\t\tthis._x = value;\n\t}\n\n\tset y(value: number) {\n\t\tthis._y = value;\n\t}\n}\n\n\ninterface IStatus {\n\tlayer: CanvasLayer;\n\tinactive: boolean | null;\n}\n\n/**\n * @ignore\n */\nexport class CanvasDisplayObject extends DisposerClass implements IDisplayObject, IDisposer {\n\tpublic _layer?: CanvasLayer;\n\n\tpublic mask: CanvasGraphics | null = null;\n\tpublic visible: boolean = true;\n\tpublic exportable?: boolean = true;\n\tpublic interactive: boolean = false;\n\tpublic inactive: boolean | null = null;\n\tpublic wheelable: boolean = false;\n\tpublic cancelTouch: boolean = false;\n\tpublic isMeasured: boolean = false;\n\tpublic buttonMode: boolean = false;\n\tpublic alpha: number = 1;\n\tpublic compoundAlpha: number = 1;\n\tpublic angle: number = 0;\n\tpublic scale: number = 1;\n\tpublic x: number = 0;\n\tpublic y: number = 0;\n\tpublic crisp: boolean = false;\n\tpublic pivot: CanvasPivot = new CanvasPivot();\n\n\tpublic filter?: string;\n\n\tpublic cursorOverStyle?: string;\n\tpublic _replacedCursorStyle?: string;\n\n\tpublic _localMatrix: Matrix = new Matrix();\n\tpublic _matrix: Matrix = new Matrix();\n\t// TODO can this be replaced with _localMatrix ?\n\tprotected _uMatrix: Matrix = new Matrix();\n\n\tpublic _renderer: CanvasRenderer;\n\tpublic _parent: CanvasContainer | undefined;\n\n\tprotected _localBounds: IBounds | undefined;\n\tprotected _bounds: IBounds | undefined;\n\tpublic _colorId: string | undefined;\n\n\tconstructor(renderer: CanvasRenderer) {\n\t\tsuper();\n\t\tthis._renderer = renderer;\n\t}\n\n\tprotected subStatus(status: IStatus): IStatus {\n\t\treturn {\n\t\t\tinactive: (this.inactive == null ? status.inactive : this.inactive),\n\t\t\tlayer: this._layer || status.layer,\n\t\t};\n\t}\n\n\tprotected _dispose(): void {\n\t\tthis._renderer._removeObject(this);\n\t\tthis.getLayer().dirty = true;\n\t}\n\n\tpublic getCanvas(): HTMLCanvasElement {\n\t\treturn this.getLayer().view;\n\t}\n\n\tpublic getLayer(): CanvasLayer {\n\t\tlet self: CanvasDisplayObject = this;\n\n\t\tfor (; ;) {\n\t\t\tif (self._layer) {\n\t\t\t\treturn self._layer;\n\n\t\t\t} else if (self._parent) {\n\t\t\t\tself = self._parent;\n\n\t\t\t} else {\n\t\t\t\treturn this._renderer.defaultLayer;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setLayer(order: number | undefined, margin: IMargin | undefined): void {\n\t\tif (order == null) {\n\t\t\tthis._layer = undefined;\n\n\t\t} else {\n\t\t\tconst visible = true;\n\t\t\tthis._layer = this._renderer.getLayer(order, visible);\n\t\t\tthis._layer.visible = visible;\n\t\t\tthis._layer.margin = margin;\n\t\t\tif (margin) {\n\t\t\t\t$utils.setInteractive(this._layer.view, false);\n\t\t\t}\n\n\t\t\tthis._renderer._ghostLayer.setMargin(this._renderer.layers);\n\n\t\t\tif (this._parent) {\n\t\t\t\tthis._parent.registerChildLayer(this._layer);\n\t\t\t}\n\n\t\t\tthis._layer.dirty = true;\n\t\t\tthis._renderer.resizeLayer(this._layer);\n\t\t\tthis._renderer.resizeGhost();\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(): void {\n\t\tthis.getLayer().dirty = true;\n\t}\n\n\tpublic clear(): void {\n\t\tthis.invalidateBounds();\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tthis._localBounds = undefined;\n\t}\n\n\tpublic _addBounds(_bounds: IBounds): void { }\n\n\tprotected _getColorId(): string {\n\t\tif (this._colorId === undefined) {\n\t\t\tthis._colorId = this._renderer.paintId(this);\n\t\t}\n\n\t\treturn this._colorId;\n\t}\n\n\tprotected _isInteractive(status: IStatus): boolean {\n\t\treturn !status.inactive && (this.interactive || this._renderer._forceInteractive > 0);\n\t}\n\n\tprotected _isInteractiveMask(status: IStatus): boolean {\n\t\treturn this._isInteractive(status);\n\t}\n\n\tpublic contains(child: CanvasDisplayObject): boolean {\n\t\tfor (; ;) {\n\t\t\tif (child === this) {\n\t\t\t\treturn true;\n\n\t\t\t} else if (child._parent) {\n\t\t\t\tchild = child._parent;\n\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\ttoGlobal(point: IPoint): IPoint {\n\t\treturn this._matrix.apply(point);\n\t}\n\n\ttoLocal(point: IPoint): IPoint {\n\t\treturn this._matrix.applyInverse(point);\n\t}\n\n\tpublic getLocalMatrix(): Matrix {\n\t\tthis._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n\t\treturn this._uMatrix;\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\t\t\tconst bn = 10000000;\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: bn,\n\t\t\t\ttop: bn,\n\t\t\t\tright: -bn,\n\t\t\t\tbottom: -bn\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tgetAdjustedBounds(bounds: IBounds): IBounds {\n\t\tthis._setMatrix();\n\n\t\tconst matrix = this.getLocalMatrix();\n\n\t\tconst p0 = matrix.apply({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = matrix.apply({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\ton<C, Key extends keyof IRendererEvents>(key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tif (this.interactive) {\n\t\t\treturn this._renderer._addEvent(this, key, callback, context);\n\n\t\t} else {\n\t\t\treturn new Disposer(() => { });\n\t\t}\n\t}\n\n\tpublic _setMatrix(): void {\n\t\t// TODO only calculate this if it has actually changed\n\t\tthis._localMatrix.setTransform(\n\t\t\tthis.x,\n\t\t\tthis.y,\n\t\t\tthis.pivot.x,\n\t\t\tthis.pivot.y,\n\t\t\t// Converts degrees to radians\n\t\t\tthis.angle * Math.PI / 180,\n\t\t\tthis.scale\n\t\t);\n\n\t\tthis._matrix.copyFrom(this._localMatrix);\n\n\t\tif (this._parent) {\n\t\t\t// TODO only calculate this if it has actually changed\n\t\t\tthis._matrix.prepend(this._parent._matrix);\n\t\t}\n\t}\n\n\tpublic _transform(context: CanvasRenderingContext2D, resolution: number): void {\n\t\tconst m = this._matrix;\n\t\tlet tx = m.tx * resolution;\n\t\tlet ty = m.ty * resolution;\n\t\tif (this.crisp) {\n\t\t\ttx = crisp(tx);\n\t\t\tty = crisp(ty);\n\t\t}\n\n\t\tcontext.setTransform(\n\t\t\tm.a * resolution,\n\t\t\tm.b * resolution,\n\t\t\tm.c * resolution,\n\t\t\tm.d * resolution,\n\t\t\ttx,\n\t\t\tty)\n\n\t}\n\n\tpublic _transformMargin(context: CanvasRenderingContext2D, resolution: number, margin: IMargin): void {\n\t\tconst m = this._matrix;\n\t\tcontext.setTransform(\n\t\t\tm.a * resolution,\n\t\t\tm.b * resolution,\n\t\t\tm.c * resolution,\n\t\t\tm.d * resolution,\n\t\t\t(m.tx + margin.left) * resolution,\n\t\t\t(m.ty + margin.top) * resolution\n\t\t);\n\t}\n\n\tpublic _transformLayer(context: CanvasRenderingContext2D, resolution: number, layer: CanvasLayer): void {\n\t\tif (layer.margin) {\n\t\t\tthis._transformMargin(context, layer.scale || resolution, layer.margin);\n\n\t\t} else {\n\t\t\tthis._transform(context, layer.scale || resolution);\n\t\t}\n\t}\n\n\tpublic render(status: IStatus, targetGhostLayer: number = 0): void {\n\t\tif (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n\t\t\tthis._setMatrix();\n\n\t\t\tconst subStatus = this.subStatus(status);\n\n\t\t\tconst resolution = this._renderer.resolution;\n\n\t\t\tconst layers = this._renderer.layers;\n\t\t\tconst ghostLayer = this._renderer._ghostLayer;\n\t\t\tconst ghostContext = ghostLayer.context;\n\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t}\n\n\t\t\t// TODO improve this\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tconst context = layer.context;\n\t\t\t\t\tcontext.save();\n\n\t\t\t\t\t// We must apply the mask before we transform the element\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tmask._transformLayer(context, resolution, layer);\n\t\t\t\t\t\tmask._runPath(context);\n\t\t\t\t\t\tcontext.clip();\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\t\t\tthis._transformLayer(context, resolution, layer);\n\n\t\t\t\t\tif (this.filter) {\n\t\t\t\t\t\tcontext.filter = this.filter;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tghostContext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tif (mask && this._isInteractiveMask(subStatus)) {\n\t\t\t\tmask._transformMargin(ghostContext, resolution, ghostLayer.margin);\n\t\t\t\tmask._runPath(ghostContext);\n\t\t\t\tghostContext.clip();\n\t\t\t}\n\n\t\t\tthis._transformMargin(ghostContext, resolution, ghostLayer.margin);\n\t\t\tif ((subStatus.layer.order > 0) && !targetGhostLayer) {\n\t\t\t\t$array.move(this._renderer._deferredGhostLayers, subStatus.layer.order);\n\t\t\t}\n\t\t\tthis._render(subStatus, targetGhostLayer);\n\n\t\t\tghostContext.restore();\n\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.context.restore();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _render(status: IStatus, _targetGhostLayer: number = 0): void {\n\t\tif (this.exportable === false) {\n\t\t\tstatus.layer.tainted = true;\n\t\t}\n\t}\n\n\tprotected _ghostOnly(targetGhostLayer: number = 0): boolean {\n\t\treturn targetGhostLayer > 0 ? true : false;\n\t}\n\n\tprotected _drawGhost(status: IStatus, targetGhostLayer: number = 0): boolean {\n\t\tconst interactive = this._isInteractive(status);\n\t\tconst order = status.layer.order || 0;\n\t\treturn interactive && ((order == 0 && !this._ghostOnly(targetGhostLayer)) || order == targetGhostLayer) ? true : false;\n\t}\n\n\thovering(): boolean {\n\t\treturn this._renderer._hovering.has(this);\n\t}\n\n\tdragging(): boolean {\n\t\treturn this._renderer._dragging.some((x) => x.value === this);\n\t}\n\n\n\tpublic shouldCancelTouch(): boolean {\n\t\tconst renderer = this._renderer;\n\t\tif (renderer.tapToActivate && !renderer._touchActive) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.cancelTouch) {\n\t\t\treturn true;\n\t\t}\n\t\telse if (this._parent) {\n\t\t\treturn this._parent.shouldCancelTouch();\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasContainer extends CanvasDisplayObject implements IContainer {\n\tpublic interactiveChildren: boolean = true;\n\tprivate _childLayers?: CanvasLayer[];\n\n\tprotected _children: Array<CanvasDisplayObject> = [];\n\n\tprotected _isInteractiveMask(status: IStatus): boolean {\n\t\treturn this.interactiveChildren || super._isInteractiveMask(status);\n\t}\n\n\taddChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = this;\n\t\tthis._children.push(child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\taddChildAt(child: CanvasDisplayObject, index: number): void {\n\t\tchild._parent = this;\n\t\tthis._children.splice(index, 0, child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\tremoveChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = undefined;\n\t\t$array.removeFirst(this._children, child);\n\t}\n\n\tprotected _render(status: IStatus, targetGhostLayer: number): void {\n\t\tsuper._render(status);\n\n\t\tconst renderer = this._renderer;\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t++renderer._forceInteractive;\n\t\t}\n\n\t\t$array.each(this._children, (child) => {\n\t\t\tchild.compoundAlpha = this.compoundAlpha * this.alpha;\n\t\t\tchild.render(status, targetGhostLayer);\n\t\t});\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t--renderer._forceInteractive;\n\t\t}\n\t}\n\n\tregisterChildLayer(layer: CanvasLayer): void {\n\t\tif (!this._childLayers) {\n\t\t\tthis._childLayers = [];\n\t\t}\n\t\t$array.pushOne(this._childLayers, layer);\n\t\tif (this._parent) {\n\t\t\tthis._parent.registerChildLayer(layer);\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(deep: boolean = false): void {\n\t\tsuper.markDirtyLayer();\n\t\tif (deep && this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => layer.dirty = true);\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tif (this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => {\n\t\t\t\tlayer.dirty = true;\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nfunction setPoint(bounds: IBounds, point: IPoint): void {\n\tbounds.left = Math.min(bounds.left, point.x);\n\tbounds.top = Math.min(bounds.top, point.y);\n\tbounds.right = Math.max(bounds.right, point.x);\n\tbounds.bottom = Math.max(bounds.bottom, point.y);\n}\n\n/**\n * @ignore\n */\nabstract class Op {\n\tpublic colorize(_context: CanvasRenderingContext2D, _forceColor: string | undefined): void { }\n\n\tpublic colorizeGhost(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tthis.colorize(context, forceColor);\n\t}\n\n\tpublic path(_context: CanvasRenderingContext2D): void { }\n\n\tpublic pathGhost(context: CanvasRenderingContext2D): void {\n\t\tthis.path(context);\n\t}\n\n\tpublic addBounds(_bounds: IBounds): void { }\n}\n\n/**\n * @ignore\n */\nclass BeginPath extends Op {\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.beginPath();\n\t}\n}\n\n/**\n * @ignore\n */\nclass BeginFill extends Op {\n\tconstructor(public color: string | CanvasGradient | CanvasPattern) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.fillStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndFill extends Op {\n\tconstructor(public clearShadow: boolean) { super(); }\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.fill();\n\t\tif (this.clearShadow) {\n\t\t\tcontext.shadowColor = \"\";\n\t\t\tcontext.shadowBlur = 0;\n\t\t\tcontext.shadowOffsetX = 0;\n\t\t\tcontext.shadowOffsetY = 0;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndStroke extends Op {\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.stroke();\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineStyle extends Op {\n\tconstructor(public width: number, public color: string | CanvasGradient | CanvasPattern, public lineJoin?: \"miter\" | \"round\" | \"bevel\", public lineCap?: \"butt\" | \"round\" | \"square\") { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.strokeStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t}\n\n\t\tcontext.lineWidth = this.width;\n\t\tif (this.lineJoin) {\n\t\t\tcontext.lineJoin = this.lineJoin;\n\t\t}\n\n\t\tif (this.lineCap) {\n\t\t\tcontext.lineCap = this.lineCap;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDash extends Op {\n\tconstructor(public dash: number[]) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.setLineDash(this.dash);\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDashOffset extends Op {\n\tconstructor(public dashOffset: number) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.lineDashOffset = this.dashOffset;\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawRect extends Op {\n\tconstructor(public x: number, public y: number, public width: number, public height: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.rect(this.x, this.y, this.width, this.height);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tconst l = this.x;\n\t\tconst t = this.y;\n\t\tconst r = l + this.width;\n\t\tconst b = t + this.height;\n\n\t\tsetPoint(bounds, { x: l, y: t });\n\t\tsetPoint(bounds, { x: r, y: t });\n\t\tsetPoint(bounds, { x: l, y: b });\n\t\tsetPoint(bounds, { x: r, y: b });\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawCircle extends Op {\n\tconstructor(public x: number, public y: number, public radius: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x + this.radius, this.y);\n\t\tcontext.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n\t}\n\n\t// TODO handle skewing and rotation\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\n\t\tsetPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawEllipse extends Op {\n\tconstructor(public x: number, public y: number, public radiusX: number, public radiusY: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\n\t}\n\n\t// TODO handle skewing and rotation\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\n\t\tsetPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Arc extends Op {\n\tconstructor(\n\t\tpublic cx: number,\n\t\tpublic cy: number,\n\t\tpublic radius: number,\n\t\tpublic startAngle: number,\n\t\tpublic endAngle: number,\n\t\tpublic anticlockwise: boolean,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n\t\t}\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tlet arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\n\t\tsetPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\n\t\tsetPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ArcTo extends Op {\n\tconstructor(\n\t\tpublic x1: number,\n\t\tpublic y1: number,\n\t\tpublic x2: number,\n\t\tpublic y2: number,\n\t\tpublic radius: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n\t\t}\n\t}\n\n\t// TODO: add points\n\tpublic addBounds(_bounds: IBounds): void {\n\t\t/*\n\t\t// not finished\n\t\thttps://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\n\n\t\tif (prevPoint) {\n\t\t\tlet x1 = prevPoint.x;\n\t\t\tlet y1 = prevPoint.y;\n\t\t\tlet x2 = this.x2;\n\t\t\tlet y2 = this.y2;\n\t\t\tlet r = this.radius;\n\n\t\t\tlet xa = (x2 - x1) / 2;\n\t\t\tlet ya = (y2 - y1) / 2;\n\n\t\t\tlet x0 = x1 + xa;\n\t\t\tlet y0 = y1 + ya;\n\n\t\t\tlet a = Math.hypot(xa, ya);\n\t\t\tlet b = Math.sqrt(r * r - a * a);\n\n\t\t\tlet cx = x0 + b * ya / a;\n\t\t\tlet cy = y0 - b * xa / a;\n\n\t\t\tconsole.log(cx, cy);\n\t\t}*/\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.lineTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass MoveTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ClosePath extends Op {\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.closePath();\n\t}\n}\n\n/**\n * @ignore\n */\nclass BezierCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic cpX2: number,\n\t\tpublic cpY2: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.cpX2, y: this.cpY2 });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass QuadraticCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Shadow extends Op {\n\tconstructor(\n\t\tpublic color: string,\n\t\tpublic blur: number,\n\t\tpublic offsetX: number,\n\t\tpublic offsetY: number,\n\t\tpublic opacity?: number\n\t) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tif (this.opacity) {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t\tcontext.shadowColor = this.color;\n\t\tcontext.shadowBlur = this.blur;\n\t\tcontext.shadowOffsetX = this.offsetX;\n\t\tcontext.shadowOffsetY = this.offsetY;\n\t}\n\n\tpublic colorizeGhost(_context: CanvasRenderingContext2D, _forceColor: string | undefined): void {}\n}\n\n/**\n * @ignore\n */\nclass GraphicsImage extends Op {\n\tconstructor(\n\t\tpublic image: HTMLImageElement | HTMLCanvasElement,\n\t\tpublic width: number,\n\t\tpublic height: number,\n\t\tpublic x: number,\n\t\tpublic y: number\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.drawImage(this.image, this.x, this.y, this.width, this.height);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t\tsetPoint(bounds, { x: this.width, y: this.height });\n\t}\n}\n\n/**\n * @ignore\n */\nexport class CanvasGraphics extends CanvasDisplayObject implements IGraphics {\n\tprotected _operations: Array<Op> = [];\n\n\tpublic blendMode: BlendMode = BlendMode.NORMAL;\n\n\tprotected _hasShadows: boolean = false;\n\tprotected _fillAlpha?: number;\n\tprotected _strokeAlpha?: number;\n\n\tclear(): void {\n\t\tsuper.clear();\n\t\tthis._operations.length = 0;\n\t}\n\n\tprotected _pushOp(op: Op): void {\n\t\tthis._operations.push(op);\n\t}\n\n\tbeginFill(color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1): void {\n\t\tthis._fillAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new BeginFill(color.toCSS(alpha)));\n\n\t\t\t} else {\n\t\t\t\tthis.isMeasured = true;\n\t\t\t\tthis._pushOp(new BeginFill(color));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n\t\t}\n\t}\n\n\tendFill(): void {\n\t\tthis._pushOp(new EndFill(this._hasShadows));\n\t}\n\n\tendStroke(): void {\n\t\tthis._pushOp(new EndStroke());\n\t}\n\n\tbeginPath(): void {\n\t\tthis._pushOp(new BeginPath());\n\t}\n\n\tlineStyle(width: number = 0, color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1, lineJoin?: \"miter\" | \"round\" | \"bevel\", lineCap?: \"butt\" | \"round\" | \"square\"): void {\n\t\tthis._strokeAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin, lineCap));\n\t\t\t} else {\n\t\t\t\tthis._pushOp(new LineStyle(width, color, lineJoin, lineCap));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin, lineCap));\n\t\t}\n\t}\n\n\tsetLineDash(dash?: number[]): void {\n\t\tthis._pushOp(new LineDash(dash ? dash : []));\n\t}\n\n\tsetLineDashOffset(dashOffset: number = 0): void {\n\t\tthis._pushOp(new LineDashOffset(dashOffset));\n\t}\n\n\tdrawRect(x: number, y: number, width: number, height: number): void {\n\t\tthis._pushOp(new DrawRect(x, y, width, height));\n\t}\n\n\tdrawCircle(x: number, y: number, radius: number): void {\n\t\tthis._pushOp(new DrawCircle(x, y, radius));\n\t}\n\n\tdrawEllipse(x: number, y: number, radiusX: number, radiusY: number): void {\n\t\tthis._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\n\t}\n\n\tarc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean = false): void {\n\t\tthis._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\tarcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void {\n\t\tthis._pushOp(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\tlineTo(x: number, y: number): void {\n\t\tthis._pushOp(new LineTo(x, y));\n\t}\n\n\tmoveTo(x: number, y: number): void {\n\t\tthis._pushOp(new MoveTo(x, y));\n\t}\n\n\tbezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n\t}\n\n\tquadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\n\t}\n\n\tclosePath(): void {\n\t\tthis._pushOp(new ClosePath());\n\t}\n\n\tshadow(color: Color, blur: number = 0, offsetX: number = 0, offsetY: number = 0, opacity?: number): void {\n\t\tthis._hasShadows = true;\n\t\tthis._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n\t}\n\n\timage(image: HTMLImageElement | HTMLCanvasElement, width: number, height: number, x: number, y: number): void {\n\t\tthis._pushOp(new GraphicsImage(image, width, height, x, y));\n\t}\n\n\t// https://svgwg.org/svg2-draft/paths.html#DProperty\n\t// TODO better error checking\n\tsvgPath(path: string): void {\n\t\tlet x = 0;\n\t\tlet y = 0;\n\t\tlet cpx: number | null = null;\n\t\tlet cpy: number | null = null;\n\t\tlet qcpx: number | null = null;\n\t\tlet qcpy: number | null = null;\n\n\t\tconst SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n\t\tconst ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n\n\t\tlet match;\n\n\t\twhile ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\n\t\t\tconst name = match[1];\n\t\t\tconst rest = match[2];\n\n\t\t\tconst args: Array<string> = [];\n\n\t\t\twhile ((match = ARGS_REGEXP.exec(rest)) !== null) {\n\t\t\t\targs.push(match[1]);\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\n\t\t\t\tcpx = null;\n\t\t\t\tcpy = null;\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\n\t\t\t\tqcpx = null;\n\t\t\t\tqcpy = null;\n\t\t\t}\n\n\t\t\tswitch (name) {\n\t\t\t\tcase \"M\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx = +args[0];\n\t\t\t\t\ty = +args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx += +args[0];\n\t\t\t\t\ty += +args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"L\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"l\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"H\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"h\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"V\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty = +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty += +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"C\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = +args[i];\n\t\t\t\t\t\tconst y1 = +args[i + 1];\n\t\t\t\t\t\tcpx = +args[i + 2];\n\t\t\t\t\t\tcpy = +args[i + 3];\n\t\t\t\t\t\tx = +args[i + 4];\n\t\t\t\t\t\ty = +args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = +args[i] + x;\n\t\t\t\t\t\tconst y1 = +args[i + 1] + y;\n\t\t\t\t\t\tcpx = +args[i + 2] + x;\n\t\t\t\t\t\tcpy = +args[i + 3] + y;\n\t\t\t\t\t\tx += +args[i + 4];\n\t\t\t\t\t\ty += +args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"S\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = +args[i];\n\t\t\t\t\t\tcpy = +args[i + 1];\n\t\t\t\t\t\tx = +args[i + 2];\n\t\t\t\t\t\ty = +args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"s\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = +args[i] + x;\n\t\t\t\t\t\tcpy = +args[i + 1] + y;\n\t\t\t\t\t\tx += +args[i + 2];\n\t\t\t\t\t\ty += +args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = +args[i];\n\t\t\t\t\t\tqcpy = +args[i + 1];\n\t\t\t\t\t\tx = +args[i + 2];\n\t\t\t\t\t\ty = +args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = +args[i] + x;\n\t\t\t\t\t\tqcpy = +args[i + 1] + y;\n\t\t\t\t\t\tx += +args[i + 2];\n\t\t\t\t\t\ty += +args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"T\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"t\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"A\":\n\t\t\t\tcase \"a\":\n\t\t\t\t\tconst relative = (name === \"a\");\n\n\t\t\t\t\tsplitArcFlags(args);\n\t\t\t\t\tcheckEvenArgs(name, args.length, 7);\n\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 7) {\n\t\t\t\t\t\tlet cx = +args[i + 5];\n\t\t\t\t\t\tlet cy = +args[i + 6];\n\n\t\t\t\t\t\tif (relative) {\n\t\t\t\t\t\t\tcx += x;\n\t\t\t\t\t\t\tcy += y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst bs = arcToBezier({\n\t\t\t\t\t\t\tpx: x,\n\t\t\t\t\t\t\tpy: y,\n\t\t\t\t\t\t\trx: +args[i],\n\t\t\t\t\t\t\try: +args[i + 1],\n\t\t\t\t\t\t\txAxisRotation: +args[i + 2],\n\t\t\t\t\t\t\tlargeArcFlag: assertBinary(+args[i + 3]),\n\t\t\t\t\t\t\tsweepFlag: assertBinary(+args[i + 4]),\n\t\t\t\t\t\t\tcx,\n\t\t\t\t\t\t\tcy,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$array.each(bs, (b) => {\n\t\t\t\t\t\t\tthis.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n\t\t\t\t\t\t\tx = b.x;\n\t\t\t\t\t\t\ty = b.y;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Z\":\n\t\t\t\tcase \"z\":\n\t\t\t\t\tcheckArgs(name, args.length, 0);\n\t\t\t\t\tthis.closePath();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _runPath(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\n\t\t$array.each(this._operations, (op) => {\n\t\t\top.path(context);\n\t\t});\n\t}\n\n\tprotected _render(status: IStatus, targetGhostLayer: number = 0): void {\n\t\tsuper._render(status);\n\n\t\tconst layerDirty = status.layer.dirty;\n\t\tconst interactive = this._isInteractive(status);\n\t\tconst ghostOnly = this._ghostOnly(targetGhostLayer);\n\t\tconst drawGhost = this._drawGhost(status, targetGhostLayer);\n\n\t\tif (layerDirty || interactive || ghostOnly) {\n\n\t\t\tconst context = status.layer.context;\n\t\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\n\t\t\tif (layerDirty && !ghostOnly) {\n\t\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\t\t\t\tcontext.beginPath();\n\t\t\t}\n\n\t\t\tlet color: string | undefined;\n\n\t\t\tif (drawGhost) {\n\t\t\t\tghostContext.beginPath();\n\t\t\t\tcolor = this._getColorId();\n\t\t\t}\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\tif (layerDirty && !ghostOnly) {\n\t\t\t\t\top.path(context);\n\t\t\t\t\top.colorize(context, undefined);\n\t\t\t\t}\n\n\t\t\t\tif (drawGhost) {\n\t\t\t\t\top.pathGhost(ghostContext);\n\t\t\t\t\top.colorizeGhost(ghostContext, color);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic renderDetached(context: CanvasRenderingContext2D): void {\n\t\tif (this.visible) {\n\t\t\tthis._setMatrix();\n\n\t\t\tcontext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t\tmask._transform(context, 1);\n\t\t\t\tmask._runPath(context);\n\t\t\t\tcontext.clip();\n\t\t\t}\n\n\t\t\t// TODO handle compoundAlpha somehow ?\n\t\t\tcontext.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\tthis._transform(context, 1);\n\n\t\t\tif (this.filter) {\n\t\t\t\tcontext.filter = this.filter;\n\t\t\t}\n\n\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\tcontext.beginPath();\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.path(context);\n\t\t\t\top.colorize(context, undefined);\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.addBounds(bounds);\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface ILineChunk {\n\tstyle: string | undefined,\n\tfill: Color | undefined,\n\ttext: string,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\tascent: number,\n\toffsetX: number,\n\toffsetY: number,\n\ttextDecoration: string | undefined,\n\tverticalAlign?: \"baseline\" | \"sub\" | \"super\"\n}\n\n/**\n * @ignore\n */\ninterface ILine {\n\toffsetY: number,\n\tascent: number,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\ttextChunks: Array<ILineChunk>,\n}\n\n/**\n * @ignore\n */\nexport class CanvasText extends CanvasDisplayObject implements IText {\n\tpublic text: string;\n\tpublic style: CanvasTextStyle;\n\tpublic resolution: number = 1;\n\tpublic textVisible: boolean = true;\n\tpublic truncated?: boolean;\n\n\tprotected _textInfo: Array<ILine> | undefined;\n\tprotected _originalScale?: number = 1;\n\n\tconstructor(renderer: CanvasRenderer, text: string, style: CanvasTextStyle) {\n\t\tsuper(renderer);\n\t\tthis.text = text;\n\t\tthis.style = style;\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tsuper.invalidateBounds();\n\t\tthis._textInfo = undefined;\n\t}\n\n\tprivate _shared(context: CanvasRenderingContext2D) {\n\t\tif (this.style.textAlign) {\n\t\t\tcontext.textAlign = this.style.textAlign;\n\t\t}\n\n\t\tif (this.style.direction) {\n\t\t\tcontext.direction = this.style.direction;\n\t\t}\n\n\t\tif (this.style.textBaseline) {\n\t\t\tcontext.textBaseline = this.style.textBaseline;\n\t\t}\n\n\t}\n\n\tprotected _prerender(status: IStatus, ignoreGhost = false, ignoreFontWeight = false): void {\n\t\tsuper._render(status);\n\n\t\tconst context = status.layer.context;\n\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\n\t\t// Font style\n\n\t\tconst style = this.style;\n\t\tlet fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n\n\t\tcontext.font = fontStyle;\n\t\tif (this._isInteractive(status) && !ignoreGhost) {\n\t\t\tghostContext.font = fontStyle;\n\t\t}\n\n\t\t// Other parameters\n\t\tif (style.fill) {\n\t\t\tif (style.fill instanceof Color) {\n\t\t\t\tcontext.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\n\t\t\t} else {\n\t\t\t\tcontext.fillStyle = style.fill;\n\t\t\t}\n\t\t}\n\n\t\tif (style.shadowColor) {\n\t\t\tstatus.layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n\t\t}\n\t\tif (style.shadowBlur) {\n\t\t\tstatus.layer.context.shadowBlur = style.shadowBlur;\n\t\t}\n\t\tif (style.shadowOffsetX) {\n\t\t\tstatus.layer.context.shadowOffsetX = style.shadowOffsetX;\n\t\t}\n\t\tif (style.shadowOffsetY) {\n\t\t\tstatus.layer.context.shadowOffsetY = style.shadowOffsetY;\n\t\t}\n\n\t\tthis._shared(context);\n\n\t\tif (this._isInteractive(status) && !ignoreGhost) {\n\t\t\tghostContext.fillStyle = this._getColorId();\n\t\t\tthis._shared(ghostContext);\n\t\t}\n\t}\n\n\tprotected _getFontStyle(style2?: ITextStyle, ignoreFontWeight = false): string {\n\n\t\t// Process defaults\n\t\tconst style = this.style;\n\t\tlet fontStyle: string[] = [];\n\n\t\tif (style2 && style2.fontVariant) {\n\t\t\tfontStyle.push(style2.fontVariant);\n\t\t}\n\t\telse if (style.fontVariant) {\n\t\t\tfontStyle.push(style.fontVariant);\n\t\t}\n\n\t\tif (!ignoreFontWeight) {\n\t\t\tif (style2 && style2.fontWeight) {\n\t\t\t\tfontStyle.push(style2.fontWeight);\n\t\t\t}\n\t\t\telse if (style.fontWeight) {\n\t\t\t\tfontStyle.push(style.fontWeight);\n\t\t\t}\n\t\t}\n\n\t\tif (style2 && style2.fontStyle) {\n\t\t\tfontStyle.push(style2.fontStyle);\n\t\t}\n\t\telse if (style.fontStyle) {\n\t\t\tfontStyle.push(style.fontStyle);\n\t\t}\n\n\t\tif (style2 && style2.fontSize) {\n\t\t\tif ($type.isNumber(style2.fontSize)) {\n\t\t\t\tstyle2.fontSize = style2.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style2.fontSize);\n\t\t}\n\t\telse if (style.fontSize) {\n\t\t\tif ($type.isNumber(style.fontSize)) {\n\t\t\t\tstyle.fontSize = style.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style.fontSize);\n\t\t}\n\n\t\tif (style2 && style2.fontFamily) {\n\t\t\tfontStyle.push(style2.fontFamily);\n\t\t}\n\t\telse if (style.fontFamily) {\n\t\t\tfontStyle.push(style.fontFamily);\n\t\t}\n\t\telse if (fontStyle.length) {\n\t\t\tfontStyle.push(\"Arial\");\n\t\t}\n\n\t\treturn fontStyle.join(\" \");\n\t}\n\n\tprotected _render(status: IStatus, targetGhostLayer: number = 0): void {\n\t\t// We need measurements in order to properly position text for alignment\n\t\tif (!this._textInfo) {\n\t\t\tthis._measure(status);\n\t\t}\n\n\t\tif (this.textVisible) {\n\n\t\t\tconst interactive = this._isInteractive(status);\n\t\t\tconst context = status.layer.context;\n\t\t\tconst layerDirty = status.layer.dirty;\n\t\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\n\t\t\tconst ghostOnly = this._ghostOnly(targetGhostLayer);\n\t\t\tconst drawGhost = this._drawGhost(status, targetGhostLayer);\n\n\t\t\tcontext.save();\n\t\t\tghostContext.save();\n\t\t\tthis._prerender(status);\n\n\t\t\t// const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\t\t// const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n\n\t\t\t// Process text info produced by _measure()\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t\t// Set style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\t\tif (!ghostOnly) {\n\t\t\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._isInteractive(status)) {\n\t\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tif (!ghostOnly) {\n\t\t\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw text\n\t\t\t\t\tif (layerDirty && !ghostOnly) {\n\t\t\t\t\t\tcontext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw underline\n\t\t\t\t\tif (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\n\n\t\t\t\t\t\tlet thickness = 1;\n\t\t\t\t\t\tlet offset = 1;\n\t\t\t\t\t\tlet fontSize = chunk.height;\n\n\t\t\t\t\t\tconst oversizedBehavior = this.style.oversizedBehavior || \"\";\n\t\t\t\t\t\tif ([\"truncate\", \"wrap\", \"wrap-no-break\"].indexOf(oversizedBehavior) > -1) {\n\t\t\t\t\t\t\t// Measure actual width of the text so the line fits\n\t\t\t\t\t\t\tconst metrics = this._measureText(chunk.text, context);\n\t\t\t\t\t\t\tchunk.width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet offsetX = chunk.offsetX;\n\t\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\toffsetX -= chunk.width;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\t\toffsetX -= chunk.width / 2;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\t\tconst format = TextFormatter.getTextStyle(chunk.style);\n\t\t\t\t\t\t\tswitch (format.fontWeight) {\n\t\t\t\t\t\t\t\tcase \"bolder\":\n\t\t\t\t\t\t\t\tcase \"bold\":\n\t\t\t\t\t\t\t\tcase \"700\":\n\t\t\t\t\t\t\t\tcase \"800\":\n\t\t\t\t\t\t\t\tcase \"900\":\n\t\t\t\t\t\t\t\t\tthickness = 2;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fontSize) {\n\t\t\t\t\t\t\toffset = fontSize / 20;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet y: number;\n\n\t\t\t\t\t\tif (chunk.textDecoration == \"line-through\") {\n\t\t\t\t\t\t\ty = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ty = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!ghostOnly) {\n\t\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\t\t\tcontext.strokeStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (this.style.fill && this.style.fill instanceof Color) {\n\t\t\t\t\t\t\t\tcontext.strokeStyle = this.style.fill.toCSS();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontext.lineWidth = thickness * offset;\n\t\t\t\t\t\t\tcontext.moveTo(offsetX, y);\n\t\t\t\t\t\t\tcontext.lineTo(offsetX + chunk.width, y);\n\t\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (interactive && this.interactive && drawGhost) {\n\t\t\t\t\t\t// Draw text in ghost canvas ONLY if it is set as interactive\n\t\t\t\t\t\t// explicitly. This way we avoid hit test anomalies caused by anti\n\t\t\t\t\t\t// aliasing of text.\n\t\t\t\t\t\tghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t//if (this._textVisible) {\n\t\t\tconst x = this._measure({\n\t\t\t\tinactive: this.inactive,\n\t\t\t\tlayer: this.getLayer(),\n\t\t\t});\n\t\t\tsetPoint(bounds, { x: x.left, y: x.top });\n\t\t\tsetPoint(bounds, { x: x.right, y: x.bottom });\n\t\t\t//}\n\t\t}\n\t}\n\n\tprotected _ignoreFontWeight(): boolean {\n\t\treturn /apple/i.test(navigator.vendor);\n\t}\n\n\tpublic _measure(status: IStatus): IBounds {\n\t\tconst context = status.layer.context;\n\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\t\tconst rtl = this.style.direction == \"rtl\";\n\n\t\t// Reset text info\n\t\tthis._textInfo = [];\n\n\t\t// Init\n\t\tconst oversizedBehavior = this.style.oversizedBehavior;\n\t\tconst maxWidth = this.style.maxWidth!;\n\n\t\tconst truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n\t\tconst wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(status, true, this._ignoreFontWeight());\n\n\t\t// Get default font metrix\n\t\tconst refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\t\tlet minX = 0;\n\t\tlet maxX = 0;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\tlet currentStyle: string | undefined;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks: ITextChunk[];\n\t\t\tif (line == \"\") {\n\t\t\t\tchunks = [{\n\t\t\t\t\ttype: \"value\",\n\t\t\t\t\ttext: \"\"\n\t\t\t\t}];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\t\t\t}\n\n\t\t\twhile (chunks.length > 0) {\n\n\t\t\t\t// Init line object\n\t\t\t\tlet lineInfo: ILine = {\n\t\t\t\t\toffsetY: offsetY,\n\t\t\t\t\tascent: 0,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttextChunks: []\n\t\t\t\t};\n\n\t\t\t\t// Measure reference text\n\t\t\t\tconst metrics = this._measureText(refText, context);\n\n\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\tlineInfo.height = height;\n\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\n\t\t\t\tlet currentFormat: string;\n\t\t\t\tlet currentDecoration: string | undefined = this.style.textDecoration;\n\t\t\t\tlet currentFill: Color | undefined;\n\t\t\t\tlet currentChunkWidth: number | undefined;\n\t\t\t\tlet skipFurtherText = false;\n\t\t\t\tlet firstTextChunk = true;\n\t\t\t\tlet leftoverChunks: Array<ITextChunk> = [];\n\t\t\t\tlet currentVerticalAlign: \"baseline\" | \"sub\" | \"super\" | undefined;\n\t\t\t\t//let offsetX = 0;\n\t\t\t\t//let chunk;\n\n\t\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t\t$array.eachContinue(chunks, (chunk, index) => {\n\n\t\t\t\t\t// Format chunk\n\t\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t\t\tcurrentDecoration = this.style.textDecoration;\n\t\t\t\t\t\t\tcurrentVerticalAlign = undefined\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t\tif (format.textDecoration) {\n\t\t\t\t\t\t\t\tcurrentDecoration = format.textDecoration;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (format.verticalAlign) {\n\t\t\t\t\t\t\t\tcurrentVerticalAlign = format.verticalAlign;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstyleRestored = false;\n\n\t\t\t\t\t\t\t// Measure reference text after change of format\n\t\t\t\t\t\t\tconst metrics = this._measureText(refText, context);\n\t\t\t\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\t\tif (height > lineInfo.height) {\n\t\t\t\t\t\t\t\tlineInfo.height = height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text chunk\n\t\t\t\t\telse if (chunk.type == \"value\" && !skipFurtherText) {\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(chunk.text, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t// Check for fit\n\t\t\t\t\t\tif (truncate) {\n\n\t\t\t\t\t\t\tthis.truncated = undefined;\n\n\t\t\t\t\t\t\t// Break words?\n\t\t\t\t\t\t\tlet breakWords = firstTextChunk || this.style.breakWords || false;\n\n\t\t\t\t\t\t\t// Measure ellipsis and check if it fits\n\t\t\t\t\t\t\tconst ellipsis = this.style.ellipsis || \"\";\n\t\t\t\t\t\t\tconst ellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t\t\tconst ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n\t\t\t\t\t\t\t\tchunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\n\t\t\t\t\t\t\t\tchunk.text += ellipsis;\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t\tthis.truncated = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (wrap) {\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width;\n\t\t\t\t\t\t\t\tconst tmpText = this._truncateText(\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\tchunk.text,\n\t\t\t\t\t\t\t\t\texcessWidth,\n\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t(firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\")\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (tmpText == \"\") {\n\t\t\t\t\t\t\t\t\t// Unable to fit a single letter - hide the whole label\n\t\t\t\t\t\t\t\t\tthis.textVisible = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//skipFurtherText = true;\n\n\t\t\t\t\t\t\t\t//Add remaining chunks for the next line\n\t\t\t\t\t\t\t\tleftoverChunks = chunks.slice(index + 1);\n\n\t\t\t\t\t\t\t\t//Add remaining text of current chunk if it was forced-cut\n\t\t\t\t\t\t\t\tif ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\n\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\ttype: \"value\",\n\t\t\t\t\t\t\t\t\t\ttext: chunk.text.substr(tmpText.length)\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (currentFormat) {\n\t\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"format\",\n\t\t\t\t\t\t\t\t\t\t\ttext: currentFormat\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Set current chunk (truncated)\n\t\t\t\t\t\t\t\tchunk.text = $utils.trim(tmpText);\n\n\t\t\t\t\t\t\t\tchunks = [];\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tlet leftBoundMod = 1;\n\t\t\t\t\t\tlet rightBoundMod = 1;\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\t// increase horizontal bounding boxes accordingly\n\t\t\t\t\t\t\tconst boundsMod = chunkWidth / currentChunkWidth\n\t\t\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: chunk.text,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: 0,\n\t\t\t\t\t\t\ttextDecoration: currentDecoration,\n\t\t\t\t\t\t\tverticalAlign: currentVerticalAlign\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//offsetX += chunkWidth;\n\n\t\t\t\t\t\tfirstTextChunk = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (leftoverChunks) {\n\t\t\t\t\t\t//return false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t\t//}\n\t\t\t\t});\n\n\t\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight.value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight || 1.2;\n\t\t\t\t}\n\n\t\t\t\tif (minX < lineInfo.left) {\n\t\t\t\t\tminX = lineInfo.left;\n\t\t\t\t}\n\n\t\t\t\tif (maxX < lineInfo.right) {\n\t\t\t\t\tmaxX = lineInfo.right;\n\t\t\t\t}\n\n\t\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\t\toffsetY += lineInfo.height;\n\n\t\t\t\t// Reset chunks so that it can proceed to the next line\n\t\t\t\tchunks = leftoverChunks || [];\n\t\t\t}\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo, _index: number) => {\n\t\t\tlet currentChunkOffset = 0\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n\t\t\t\tchunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\n\t\t\t\tcurrentChunkOffset += chunk.width;\n\n\t\t\t\tif (chunk.verticalAlign) {\n\t\t\t\t\tswitch (chunk.verticalAlign) {\n\t\t\t\t\t\tcase \"super\":\n\t\t\t\t\t\t\tchunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"sub\":\n\t\t\t\t\t\t\tchunk.offsetY += chunk.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst bounds = {\n\t\t\tleft: rtl ? -maxX : -minX,\n\t\t\ttop: 0,\n\t\t\tright: rtl ? minX : maxX,\n\t\t\tbottom: offsetY,\n\t\t};\n\n\n\t\t// We need to fit?\n\t\tif (oversizedBehavior !== \"none\") {\n\t\t\tconst ratio = this._fitRatio(bounds);\n\t\t\tif (ratio < 1) {\n\t\t\t\tif (oversizedBehavior == \"fit\") {\n\t\t\t\t\tif ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\n\t\t\t\t\t\tthis.textVisible = false;\n\t\t\t\t\t\tbounds.left = 0;\n\t\t\t\t\t\tbounds.top = 0;\n\t\t\t\t\t\tbounds.right = 0;\n\t\t\t\t\t\tbounds.bottom = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!this._originalScale) {\n\t\t\t\t\t\t\tthis._originalScale = this.scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.scale = ratio;\n\t\t\t\t\t\tthis.textVisible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (oversizedBehavior == \"hide\") {\n\t\t\t\t\tthis.textVisible = false;\n\t\t\t\t\tbounds.left = 0;\n\t\t\t\t\tbounds.top = 0;\n\t\t\t\t\tbounds.right = 0;\n\t\t\t\t\tbounds.bottom = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tbounds.left = rtl ? maxWidth : -maxWidth;\n\t\t\t\t\t\t\tbounds.right = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\tbounds.left = -maxWidth / 2;\n\t\t\t\t\t\t\tbounds.right = maxWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbounds.left = 0;\n\t\t\t\t\t\t\tbounds.right = rtl ? -maxWidth : maxWidth;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\t\tthis._originalScale = undefined;\n\t\t\t\t\tthis.textVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\tthis._originalScale = undefined;\n\t\t\t\tthis.textVisible = true;\n\t\t\t}\n\t\t}\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn bounds;\n\t}\n\n\tprotected _fitRatio(bounds: IBounds): number {\n\t\tconst maxW = this.style.maxWidth;\n\t\tconst maxH = this.style.maxHeight;\n\t\tif (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst w = bounds.right - bounds.left;\n\t\tconst h = bounds.bottom - bounds.top;\n\t\treturn Math.min(maxW! / w || 1, maxH! / h || 1);\n\t}\n\n\tprotected _truncateText(context: CanvasRenderingContext2D, text: string, maxWidth: number, breakWords: boolean = false, fallbackBreakWords: boolean = true): string {\n\t\tlet width: number;\n\t\tdo {\n\t\t\tif (breakWords) {\n\t\t\t\ttext = text.slice(0, -1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet tmp = text.replace(/[^,;:!?\\\\\\/\\s​]+[,;:!?\\\\\\/\\s​]*$/g, \"\");\n\t\t\t\tif ((tmp == \"\" || tmp === text) && fallbackBreakWords) {\n\t\t\t\t\tbreakWords = true;\n\t\t\t\t}\n\t\t\t\telse if (tmp == \"\") {\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttext = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst metrics = this._measureText(text, context);\n\t\t\twidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\t\t} while ((width > maxWidth) && text != \"\");\n\t\treturn text;\n\t}\n\n\tprotected _measureText(text: string, context: CanvasRenderingContext2D): TextMetrics {\n\t\tlet metrics = context.measureText(text);\n\t\tlet fakeMetrics: any = {};\n\t\tif (metrics.actualBoundingBoxAscent == null) {\n\t\t\tconst div = document.createElement(\"div\");\n\t\t\tdiv.innerText = text;\n\t\t\tdiv.style.visibility = \"hidden\";\n\t\t\tdiv.style.position = \"absolute\";\n\t\t\tdiv.style.top = \"-1000000px;\"\n\t\t\tdiv.style.fontFamily = this.style.fontFamily || \"\";\n\t\t\tdiv.style.fontSize = this.style.fontSize + \"\";\n\t\t\tdocument.body.appendChild(div);\n\t\t\tconst bbox = div.getBoundingClientRect();\n\t\t\tdocument.body.removeChild(div);\n\t\t\tconst h = bbox.height;\n\t\t\tconst w = metrics.width;\n\t\t\tlet left = 0;\n\t\t\tlet right = w;\n\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: h,\n\t\t\t\tactualBoundingBoxDescent: 0,\n\t\t\t\tactualBoundingBoxLeft: left,\n\t\t\t\tactualBoundingBoxRight: right,\n\t\t\t\tfontBoundingBoxAscent: h,\n\t\t\t\tfontBoundingBoxDescent: 0,\n\t\t\t\twidth: w\n\t\t\t}\n\t\t\t//return fake;\n\t\t}\n\t\telse {\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tactualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\tactualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n\t\t\t\tactualBoundingBoxRight: metrics.actualBoundingBoxRight,\n\t\t\t\tfontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tfontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\twidth: metrics.width\n\t\t\t}\n\t\t}\n\n\t\tconst w = metrics.width;\n\t\tswitch (this.style.textAlign) {\n\t\t\tcase \"right\":\n\t\t\tcase \"end\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w / 2;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w / 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = 0;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w;\n\t\t}\n\n\t\treturn fakeMetrics;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasTextStyle implements ITextStyle {\n\t//public wordWrapWidth: number = 100;\n\tpublic fill?: Color | CanvasGradient | CanvasPattern;\n\tpublic fillOpacity?: number;\n\tpublic textAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tpublic fontFamily?: string;\n\tpublic fontSize?: string | number;\n\tpublic fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'\n\tpublic fontStyle?: 'normal' | 'italic' | 'oblique';\n\tpublic fontVariant?: \"normal\" | \"small-caps\";\n\tpublic textDecoration?: \"underline\" | \"line-through\";\n\tpublic shadowColor?: Color | null;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tpublic lineHeight?: number | Percent = percent(120);\n\tpublic baselineRatio?: number = 0.19;\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\tpublic direction?: \"ltr\" | \"rtl\";\n\tpublic textBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\tpublic oversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\" = \"none\";\n\tpublic breakWords?: boolean = false;\n\tpublic ellipsis?: string = \"…\";\n\tpublic maxWidth?: number;\n\tpublic maxHeight?: number;\n\tpublic minScale?: number;\n\tpublic ignoreFormatting?: boolean = false;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRadialText extends CanvasText implements IRadialText {\n\tpublic textType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\" = \"circular\";\n\tpublic radius?: number;\n\tpublic startAngle?: number;\n\tpublic inside?: boolean = false;\n\tpublic orientation?: \"inward\" | \"outward\" | \"auto\" = \"auto\";\n\tpublic kerning?: number = 0;\n\n\tprivate _textReversed: boolean = false;\n\n\tpublic _render(status: IStatus, targetGhostLayer: number = 0): void {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\tthis._renderCircular(status, targetGhostLayer);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._render(status, targetGhostLayer);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic _renderCircular(status: IStatus, targetGhostLayer: number = 0): void {\n\t\tif (this.textVisible) {\n\t\t\tthis._prerender(status);\n\n\t\t\tconst interactive = this._isInteractive(status);\n\t\t\tconst context = status.layer.context;\n\t\t\tconst layerDirty = status.layer.dirty;\n\t\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\n\t\t\t// Savepoint\n\t\t\tcontext.save();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.save();\n\t\t\t}\n\n\t\t\t// We need measurements in order to properly position text for alignment\n\t\t\tif (!this._textInfo) {\n\t\t\t\tthis._measure(status);\n\t\t\t}\n\n\t\t\t// Init\n\t\t\tlet radius = (this.radius || 0);\n\t\t\tlet startAngle = (this.startAngle || 0);\n\t\t\tlet deltaAngle = 0;\n\t\t\tlet orientation = this.orientation;\n\t\t\tlet inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\n\t\t\tconst inside = this.inside;\n\t\t\tconst align = this.style.textAlign || \"left\";\n\t\t\tconst kerning = this.kerning || 0;\n\t\t\tlet clockwise = align == \"left\" ? 1 : -1;\n\t\t\tconst shouldReverse = !this._textReversed;\n\n\t\t\tconst ghostOnly = this._ghostOnly(targetGhostLayer);\n\t\t\tconst drawGhost = this._drawGhost(status, targetGhostLayer);\n\n\t\t\t// Check if we need to invert the whole stuff\n\t\t\tif (inward == \"auto\") {\n\t\t\t\t// Calc max angle so we know whether we need to flip it\n\t\t\t\tlet maxAngle = 0;\n\t\t\t\tlet midAngle = 0;\n\t\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\t\tconst deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\n\t\t\t\t\tif (deltaAngle > maxAngle) {\n\t\t\t\t\t\tmaxAngle = deltaAngle;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (align == \"left\") {\n\t\t\t\t\tmidAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\telse if (align == \"right\") {\n\t\t\t\t\tmidAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmidAngle = startAngle * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\tmidAngle = $math.normalizeAngle(midAngle);\n\t\t\t\tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t\t}\n\n\t\t\tif (inward == true && shouldReverse) {\n\t\t\t\tthis._textInfo!.reverse();\n\t\t\t\tthis._textReversed = true;\n\t\t\t}\n\n\t\t\t// if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n\t\t\t// \tclockwise *= -1;\n\t\t\t// }\n\n\t\t\t// Process text info produced by _measure()\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\n\t\t\t\tconst textHeight = line.height;\n\n\t\t\t\t// Adjust radius (for `inside = false`)\n\t\t\t\t// Radius adjustment for `inside = false` is below the line calculation\n\t\t\t\tif (!inside) {\n\t\t\t\t\tradius += textHeight;\n\t\t\t\t}\n\n\t\t\t\t// Reverse letters if we're painting them counter-clockwise\n\t\t\t\tif (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\n\t\t\t\t\tline.textChunks.reverse();\n\t\t\t\t}\n\n\t\t\t\t// Init angles\n\t\t\t\tlet lineStartAngle = startAngle;\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t\t// Adjust for center-align\n\t\t\t\tif (align == \"center\") {\n\t\t\t\t\tlineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\n\t\t\t\t\tdeltaAngle = lineStartAngle - startAngle;\n\t\t\t\t}\n\n\t\t\t\t// if (inward == \"auto\") {\n\t\t\t\t// \tlet midAngle;\n\t\t\t\t// \tif (align == \"left\") {\n\t\t\t\t// \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t// \t}\n\t\t\t\t// \telse if () {\n\t\t\t\t// \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t// \t}\n\t\t\t\t// \tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t\t\t// }\n\n\t\t\t\t// Rotate letters if they are facing outward\n\t\t\t\tlineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\n\n\t\t\t\t// Savepoint\n\t\t\t\tcontext.save();\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.save();\n\t\t\t\t}\n\n\t\t\t\t// Assume starting angle\n\t\t\t\tif (!ghostOnly) {\n\t\t\t\t\tcontext.rotate(lineStartAngle);\n\t\t\t\t}\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.rotate(lineStartAngle);\n\t\t\t\t}\n\n\t\t\t\tlet angleShift = 0;\n\t\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t\t// Draw the letter\n\t\t\t\t\tconst char = chunk.text;\n\t\t\t\t\tconst charWidth = chunk.width;\n\n\t\t\t\t\t// Rotate half a letter\n\t\t\t\t\tangleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\n\t\t\t\t\tif (!ghostOnly) {\n\t\t\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\t\t}\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\t\tif (!ghostOnly) {\n\t\t\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tif (!ghostOnly) {\n\t\t\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Center letters\n\t\t\t\t\tif (!ghostOnly) {\n\t\t\t\t\t\tcontext.textBaseline = \"middle\";\n\t\t\t\t\t\tcontext.textAlign = \"center\";\n\t\t\t\t\t}\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.textBaseline = \"middle\";\n\t\t\t\t\t\tghostContext.textAlign = \"center\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Plop the letter\n\t\t\t\t\tif (layerDirty && !ghostOnly) {\n\t\t\t\t\t\tcontext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t\t}\n\t\t\t\t\tif (interactive && drawGhost) {\n\t\t\t\t\t\tghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Rotate half a letter and add spacing\n\t\t\t\t\tangleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\n\t\t\t\t\tif (!ghostOnly) {\n\t\t\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\t\t}\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\t// Restore angle\n\t\t\t\tcontext.restore();\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.restore();\n\t\t\t\t}\n\n\t\t\t\t// Adjust radius (for `inside = true`)\n\t\t\t\tif (inside) {\n\t\t\t\t\tradius -= textHeight;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// Restore\n\t\t\tcontext.restore();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.restore();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _measure(status: IStatus): IBounds {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\treturn this._measureCircular(status);\n\t\t\tdefault:\n\t\t\t\treturn super._measure(status);\n\t\t}\n\t}\n\n\tpublic _measureCircular(status: IStatus): IBounds {\n\t\tconst context = status.layer.context;\n\t\tconst ghostContext = this._renderer._ghostLayer.context;\n\t\tconst rtl = this.style.direction == \"rtl\";\n\n\t\tconst oversizedBehavior = this.style.oversizedBehavior;\n\t\tconst maxWidth = this.style.maxWidth!;\n\n\t\tconst truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n\t\tconst ellipsis = this.style.ellipsis || \"\";\n\t\tlet ellipsisMetrics: TextMetrics;\n\t\t//const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n\n\n\t\t// Reset text info\n\t\tthis.textVisible = true;\n\t\tthis._textInfo = [];\n\t\tthis._textReversed = false;\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(status, true);\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\t\tlet totalWidth = 0;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\n\t\t\t// Init line object\n\t\t\tlet lineInfo: ILine = {\n\t\t\t\toffsetY: offsetY,\n\t\t\t\tascent: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttextChunks: []\n\t\t\t};\n\n\t\t\tlet currentStyle: string | undefined;\n\t\t\tlet currentFill: Color | undefined;\n\t\t\tlet currentChunkWidth: number | undefined;\n\n\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t$array.each(chunks, (chunk, _index) => {\n\n\t\t\t\t// Format chunk\n\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyleRestored = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\tellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Text format\n\t\t\t\telse if (chunk.type == \"value\") {\n\n\t\t\t\t\t// Measure each letter\n\t\t\t\t\tlet chars = chunk.text.match(/./ug) || [];\n\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\tchars = $utils.splitString(chunk.text);\n\t\t\t\t\t\tchars.reverse();\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < chars.length; i++) {\n\n\t\t\t\t\t\tconst char = chars[i];\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(char, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.width;\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttotalWidth += chunkWidth;\n\n\t\t\t\t\t\t// Handle oversized behavior\n\t\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\t\t// Measure ellipsis and check if it fits\n\t\t\t\t\t\t\tif (!ellipsisMetrics) {\n\t\t\t\t\t\t\t\tellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n\t\t\t\t\t\t\t//totalWidth += ellipsisWidth;\n\t\t\t\t\t\t\tif ((totalWidth + ellipsisWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tif (lineInfo.textChunks.length == 1) {\n\t\t\t\t\t\t\t\t\tthis.textVisible = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tlineInfo.width += ellipsisWidth;\n\t\t\t\t\t\t\t\t\tlineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\n\t\t\t\t\t\t\t\t\tlineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\n\t\t\t\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\t\t\t\ttext: ellipsis,\n\t\t\t\t\t\t\t\t\t\twidth: ellipsisWidth,\n\t\t\t\t\t\t\t\t\t\theight: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\n\t\t\t\t\t\t\t\t\t\tleft: ellipsisMetrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\t\t\t\tright: ellipsisMetrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\t\t\t\tascent: ellipsisMetrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\t\t\t\toffsetY: chunkHeight,\n\t\t\t\t\t\t\t\t\t\ttextDecoration: undefined\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: char,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight + metrics.actualBoundingBoxDescent,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: chunkHeight,\n\t\t\t\t\t\t\ttextDecoration: undefined\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\t\t// @todo still needed?\n\t\t\t\t\t\t\t//break;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t}\n\n\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\toffsetY += lineInfo.height;\n\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\n\t\tif (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\n\t\t\tthis.textVisible = false;\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo) => {\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n\t\t\t});\n\t\t});\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t};\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasImage extends CanvasDisplayObject implements IPicture {\n\tpublic width: number | undefined;\n\tpublic height: number | undefined;\n\tpublic image: HTMLImageElement | undefined;\n\tpublic tainted?: boolean;\n\n\tpublic shadowColor?: Color;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\n\tprotected _imageMask: HTMLCanvasElement | undefined;\n\n\tconstructor(renderer: CanvasRenderer, image: HTMLImageElement | undefined) {\n\t\tsuper(renderer);\n\t\tthis.image = image;\n\t}\n\n\tprotected _dispose(): void {\n\t\tsuper._dispose();\n\n\t\tif (this._imageMask) {\n\t\t\tclearCanvas(this._imageMask);\n\t\t}\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\n\t\t\tlet w = 0;\n\t\t\tlet h = 0;\n\n\t\t\tif (this.width) {\n\t\t\t\tw = this.width;\n\t\t\t}\n\t\t\tif (this.height) {\n\t\t\t\th = this.height;\n\t\t\t}\n\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tright: w,\n\t\t\t\tbottom: h\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tprotected _render(status: IStatus, targetGhostLayer: number = 0): void {\n\t\tsuper._render(status);\n\n\t\tif (this.image) {\n\t\t\tif (this.tainted === undefined) {\n\t\t\t\tthis.tainted = isTainted(this.image);\n\t\t\t\tstatus.layer.tainted = true;\n\t\t\t}\n\n\t\t\tif (this.tainted && this._renderer._omitTainted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst ghostOnly = this._ghostOnly(targetGhostLayer);\n\t\t\tconst drawGhost = this._drawGhost(status, targetGhostLayer);\n\n\t\t\tif (status.layer.dirty && !ghostOnly) {\n\n\t\t\t\tif (this.shadowColor) {\n\t\t\t\t\tstatus.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n\t\t\t\t}\n\t\t\t\tif (this.shadowBlur) {\n\t\t\t\t\tstatus.layer.context.shadowBlur = this.shadowBlur;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetX) {\n\t\t\t\t\tstatus.layer.context.shadowOffsetX = this.shadowOffsetX;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetY) {\n\t\t\t\t\tstatus.layer.context.shadowOffsetY = this.shadowOffsetY;\n\t\t\t\t}\n\n\t\t\t\t// TODO should this round ?\n\t\t\t\tconst width = this.width || this.image.naturalWidth;\n\t\t\t\tconst height = this.height || this.image.naturalHeight;\n\n\t\t\t\tstatus.layer.context.drawImage(this.image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tif (this.interactive && this._isInteractive(status) && drawGhost) {\n\t\t\t\tconst mask = this._getMask(this.image);\n\n\t\t\t\tthis._renderer._ghostLayer.context.drawImage(mask, 0, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clear(): void {\n\t\tsuper.clear();\n\t\tthis.image = undefined;\n\t\tthis._imageMask = undefined;\n\t}\n\n\tprotected _getMask(image: HTMLImageElement): HTMLCanvasElement {\n\t\tif (this._imageMask === undefined) {\n\t\t\t// TODO should this round ?\n\t\t\tconst width = this.width || image.naturalWidth;\n\t\t\tconst height = this.height || image.naturalHeight;\n\n\t\t\t// We need to create a second canvas because destination-in clears out the entire canvas\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\t\tcontext.imageSmoothingEnabled = false;\n\n\t\t\tcontext.fillStyle = this._getColorId();\n\t\t\tcontext.fillRect(0, 0, width, height);\n\n\t\t\tif (!isTainted(image)) {\n\t\t\t\tcontext.globalCompositeOperation = \"destination-in\";\n\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tthis._imageMask = canvas;\n\t\t}\n\n\t\treturn this._imageMask;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasRendererEvent<A> implements IRendererEvent<A> {\n\tpublic id: Id;\n\tpublic simulated: boolean = false;\n\tpublic native: boolean = true;\n\n\tconstructor(public event: A, public originalPoint: IPoint, public point: IPoint, public bbox: DOMRect) {\n\t\tif ($utils.supports(\"touchevents\") && event instanceof Touch) {\n\t\t\tthis.id = event.identifier;\n\n\t\t} else {\n\t\t\tthis.id = null;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface IEvent<Key extends keyof IRendererEvents> {\n\tobject: CanvasDisplayObject;\n\tcontext: unknown;\n\tcallback: (event: IRendererEvents[Key]) => void;\n\tdisposed: boolean;\n}\n\n/**\n * @ignore\n */\ninterface IEvents<Key extends keyof IRendererEvents> {\n\tdisposer: IDisposer;\n\tcallbacks: Array<IEvent<Key>>;\n\tdispatching: boolean;\n\tcleanup: boolean;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRenderer extends ArrayDisposer implements IRenderer, IDisposer {\n\tpublic view: HTMLElement = document.createElement(\"div\");\n\tprotected _layerDom: HTMLElement = document.createElement(\"div\");\n\n\tpublic layers: Array<CanvasLayer> = [];\n\tpublic _dirtyLayers: Array<CanvasLayer> = [];\n\tpublic defaultLayer: CanvasLayer = this.getLayer(0);\n\n\tpublic _ghostLayer: GhostLayer = new GhostLayer();\n\n\tpublic _deferredGhostLayers: Array<number> = [];\n\n\tprotected _patternCanvas: HTMLCanvasElement = document.createElement(\"canvas\");\n\tprotected _patternContext: CanvasRenderingContext2D = this._patternCanvas.getContext(\"2d\")!;\n\n\tprotected _realWidth: number = 0;\n\tprotected _realHeight: number = 0;\n\n\tprotected _calculatedWidth: number = 0;\n\tprotected _calculatedHeight: number = 0;\n\n\tpublic resolution: number;\n\tpublic interactionsEnabled: boolean = true;\n\n\tprotected _listeners: { [key: string]: CounterDisposer } = {};\n\tprotected _events: { [Key in keyof IRendererEvents]?: IEvents<Key> } = {};\n\n\tprotected _colorId: number = 0;\n\tprotected _colorMap: { [color: string]: CanvasDisplayObject } = {};\n\n\tpublic _forceInteractive: number = 0;\n\tpublic _omitTainted: boolean = false;\n\n\t// TODO this should store the Id as well\n\tpublic _hovering: Set<CanvasDisplayObject> = new Set();\n\tpublic _dragging: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\tpublic _mousedown: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\n\tprotected _lastPointerMoveEvent: { events: Array<IPointerEvent>, target: Node | null, native: boolean } | undefined;\n\n\tpublic tapToActivate: boolean = false;\n\tpublic tapToActivateTimeout: number = 3000;\n\tpublic _touchActive: boolean = false;\n\tprotected _touchActiveTimeout?: number;\n\n\t/*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\n\t\tthis._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\n\t});\n\t*/\n\n\tpublic resetImageArray() {\n\t\tthis._ghostLayer.imageArray = undefined;\n\t}\n\n\tconstructor(resolution?: number) {\n\t\tsuper();\n\n\t\tif (resolution == null) {\n\t\t\tthis.resolution = window.devicePixelRatio;\n\t\t} else {\n\t\t\tthis.resolution = resolution;\n\t\t}\n\n\t\tthis.view.style.position = \"absolute\";\n\t\tthis.view.setAttribute(\"aria-hidden\", \"true\");\n\t\tthis.view.appendChild(this._layerDom);\n\n\t\tthis._disposers.push(new Disposer(() => {\n\t\t\t$object.each(this._events, (_key, events) => {\n\t\t\t\tevents.disposer.dispose();\n\t\t\t});\n\n\t\t\t$array.each(this.layers, (layer) => {\n\t\t\t\tclearCanvas(layer.view);\n\n\t\t\t\tif (layer.exportableView) {\n\t\t\t\t\tclearCanvas(layer.exportableView);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tclearCanvas(this._ghostLayer.view);\n\t\t\tclearCanvas(this._patternCanvas);\n\t\t}));\n\n\t\t/*\n\t\tthis._disposers.push($utils.addEventListener(this._ghostLayer.view, \"click\", (originalEvent: MouseEvent) => {\n\t\t\tconst event = this.getEvent(originalEvent);\n\t\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox);\n\t\t\tconsole.debug(target);\n\t\t}));\n\t\t*/\n\n\t\t// Monitor for possible pixel ratio changes (when page is zoomed)\n\t\tthis._disposers.push($utils.onZoom(() => {\n\t\t\tif (resolution == null) {\n\t\t\t\tthis.resolution = window.devicePixelRatio;\n\t\t\t}\n\t\t}));\n\n\t\t// We need this in order top prevent default touch gestures when dragging\n\t\t// draggable elements\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tconst listener = (ev: any) => {\n\t\t\t\tif (this._dragging.length !== 0) {\n\t\t\t\t\t$array.eachContinue(this._dragging, (item) => {\n\t\t\t\t\t\tif (item.value.shouldCancelTouch()) {\n\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If touch down happends, delay touch out\n\t\t\t\tif (this._touchActiveTimeout) {\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\n\t\t\t\t// If touch is moving, delay touch out\n\t\t\t\tif (this._touchActiveTimeout) {\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}\n\t\t\t}, { passive: true }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(window, \"click\", (_ev: any) => {\n\t\t\t\tthis._touchActive = false;\n\t\t\t}, { passive: true }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"click\", (_ev: any) => {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tthis._touchActive = true;\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}, 100);\n\t\t\t}, { passive: true }));\n\n\t\t}\n\n\t\t// Prevent scrolling of the window when hovering on \"wheelable\" object\n\t\tif ($utils.supports(\"wheelevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\n\t\t\t\tlet prevent = false;\n\t\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\t\tif (obj.wheelable) {\n\t\t\t\t\t\tprevent = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (prevent) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t}\n\t\t\t}, { passive: false }));\n\t\t}\n\n\t}\n\n\tprotected _delayTouchDeactivate(): void {\n\t\tif (this._touchActiveTimeout) {\n\t\t\tclearTimeout(this._touchActiveTimeout);\n\t\t}\n\t\tif (this.tapToActivateTimeout > 0) {\n\t\t\tthis._touchActiveTimeout = window.setTimeout(() => {\n\t\t\t\tthis._touchActive = false;\n\t\t\t}, this.tapToActivateTimeout);\n\t\t}\n\t}\n\n\tpublic get debugGhostView(): boolean {\n\t\treturn !!this._ghostLayer.view.parentNode;\n\t}\n\n\tpublic set debugGhostView(value: boolean) {\n\t\tif (value) {\n\t\t\tif (!this._ghostLayer.view.parentNode) {\n\t\t\t\tthis.view.appendChild(this._ghostLayer.view);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._ghostLayer.view.parentNode) {\n\t\t\t\tthis._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateLinearGradient(x1: number, y1: number, x2: number, y2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n\t}\n\n\tcreateRadialGradient(x1: number, y1: number, radius1: number, x2: number, y2: number, radius2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n\t}\n\n\tcreatePattern(graphics: CanvasGraphics, background: CanvasGraphics, repetition: string, width: number, height: number): CanvasPattern {\n\t\t// const patternCanvas = document.createElement(\"canvas\");\n\t\t// const patternContext = patternCanvas.getContext(\"2d\")!;\n\t\t// patternCanvas.width = width;\n\t\t// patternCanvas.height = height;\n\t\t// if (fill) {\n\t\t// \tpatternContext.fillStyle = fill.toCSS();\n\t\t// \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n\t\t// }\n\n\t\t// const layer = {\n\t\t// \tview: patternCanvas,\n\t\t// \tcontext: patternContext,\n\t\t// \tvisible: true,\n\t\t// \torder: 0,\n\t\t// \twidth: width,\n\t\t// \theight: height,\n\t\t// \tdirty: true\n\t\t// };\n\n\t\t// // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n\t\t// // patternContext.stroke();\n\n\t\t// image.targetLayer = layer;\n\t\t// image.render(layer);\n\n\t\t//this._layerDom.appendChild(patternCanvas);\n\n\t\tthis._patternCanvas.width = width;\n\t\tthis._patternCanvas.height = height;\n\n\t\tthis._patternContext.clearRect(0, 0, width, height);\n\n\t\t// patternCanvas.style.width = width * this.resolution + \"px\";\n\t\t// patternCanvas.style.height = height * this.resolution + \"px\";\n\n\t\tbackground.renderDetached(this._patternContext);\n\t\tgraphics.renderDetached(this._patternContext);\n\n\t\treturn this._patternContext.createPattern(this._patternCanvas, repetition)!;\n\t}\n\n\n\n\tmakeContainer(): CanvasContainer {\n\t\treturn new CanvasContainer(this);\n\t}\n\n\tmakeGraphics(): CanvasGraphics {\n\t\treturn new CanvasGraphics(this);\n\t}\n\n\tmakeText(text: string, style: CanvasTextStyle): CanvasText {\n\t\treturn new CanvasText(this, text, style);\n\t}\n\n\tmakeTextStyle(): CanvasTextStyle {\n\t\treturn new CanvasTextStyle();\n\t}\n\n\tmakeRadialText(text: string, style: CanvasTextStyle): CanvasRadialText {\n\t\treturn new CanvasRadialText(this, text, style);\n\t}\n\n\tmakePicture(image: HTMLImageElement | undefined): CanvasImage {\n\t\treturn new CanvasImage(this, image);\n\t}\n\n\tresizeLayer(layer: CanvasLayer) {\n\t\tlayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\n\t}\n\n\tresizeGhost() {\n\t\tthis._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);\n\t}\n\n\tresize(realWidth: number, realHeight: number, calculatedWidth: number, calculatedHeight: number): void {\n\t\tthis._realWidth = realWidth;\n\t\tthis._realHeight = realHeight;\n\n\t\tthis._calculatedWidth = calculatedWidth;\n\t\tthis._calculatedHeight = calculatedHeight;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tlayer.dirty = true;\n\t\t\t\tthis.resizeLayer(layer);\n\t\t\t}\n\t\t});\n\n\t\tthis.resizeGhost();\n\n\t\tthis.view.style.width = calculatedWidth + \"px\";\n\t\tthis.view.style.height = calculatedHeight + \"px\";\n\t}\n\n\tprivate createDetachedLayer(willReadFrequently: boolean = false): CanvasLayer {\n\t\tconst view = document.createElement(\"canvas\");\n\t\tconst context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently })! as CanvasRenderingContext2D;\n\n\t\tconst layer = new CanvasLayer(view, context);\n\n\t\tview.style.position = \"absolute\";\n\t\tview.style.top = \"0px\";\n\t\tview.style.left = \"0px\";\n\n\t\treturn layer;\n\t}\n\n\tgetLayerByOrder(order: number): CanvasLayer | undefined {\n\t\tconst layers = this.layers;\n\t\tconst length = layers.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst layer = layers[i];\n\t\t\tif (layer.order == order) {\n\t\t\t\treturn layer;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetLayer(order: number, visible: boolean = true): CanvasLayer {\n\t\tlet existingLayer = this.getLayerByOrder(order);\n\t\tif (existingLayer) {\n\t\t\treturn existingLayer;\n\t\t}\n\n\t\tconst layer = this.createDetachedLayer(order == 99);\n\t\tlayer.order = order;\n\t\tlayer.visible = visible;\n\n\t\tlayer.view.className = \"am5-layer-\" + order;\n\n\t\tif (layer.visible) {\n\t\t\tthis.resizeLayer(layer);\n\t\t}\n\n\t\tconst layers = this.layers;\n\n\t\tlayers.push(layer);\n\n\t\tlayers.sort((a, b) => {\n\t\t\tif (a.order > b.order) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (a.order < b.order) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tconst length = layers.length;\n\t\tconst layerIndex = $array.indexOf(layers, layer);\n\t\tlet next;\n\n\t\tfor (let i = layerIndex + 1; i < length; i++) {\n\t\t\tif (layers[i].visible) {\n\t\t\t\tnext = layers[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (layer.visible) {\n\t\t\tif (next === undefined) {\n\t\t\t\tthis._layerDom.appendChild(layer.view);\n\n\t\t\t} else {\n\t\t\t\tthis._layerDom.insertBefore(layer.view, next.view);\n\t\t\t}\n\t\t}\n\n\t\treturn layer;\n\t}\n\n\trender(root: CanvasDisplayObject): void {\n\n\t\tthis._dirtyLayers.length = 0;\n\t\tthis._deferredGhostLayers = [];\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tif (layer.dirty && layer.visible) {\n\t\t\t\t\tthis._dirtyLayers.push(layer);\n\t\t\t\t\tlayer.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._ghostLayer.clear();\n\n\t\troot.render({\n\t\t\tinactive: null,\n\t\t\tlayer: this.defaultLayer,\n\t\t});\n\n\t\tconst deferredGhostLayers = this._deferredGhostLayers;\n\t\tif (deferredGhostLayers.length) {\n\t\t\tdeferredGhostLayers.sort((a, b) => a - b);\n\t\t\t$array.each(deferredGhostLayers, (layerx) => {\n\t\t\t\troot.render({\n\t\t\t\t\tinactive: null,\n\t\t\t\t\tlayer: this.defaultLayer\n\t\t\t\t}, layerx);\n\t\t\t});\n\t\t}\n\n\t\tthis._ghostLayer.context.restore();\n\n\t\t//setTimeout(() => {\n\n\t\t// Remove this after the Chrome bug is fixed:\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tconst context = layer.context;\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(0, 0);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t});\n\n\t\t$array.each(this._dirtyLayers, (layer) => {\n\t\t\tlayer.context.restore();\n\t\t\tlayer.dirty = false;\n\t\t});\n\t\t//}, 100)\n\n\t\tif (this._hovering.size && this._lastPointerMoveEvent) {\n\t\t\tconst { events, target, native } = this._lastPointerMoveEvent;\n\n\t\t\t//this._mouseMoveThrottler.run();\n\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tthis._dispatchGlobalMousemove(event, target, native);\n\t\t\t});\n\t\t}\n\t}\n\n\tpaintId(obj: CanvasDisplayObject): string {\n\t\tconst id = distributeId(++this._colorId);\n\t\tconst color = Color.fromHex(id).toCSS();\n\t\tthis._colorMap[color] = obj;\n\t\treturn color;\n\t}\n\n\t_removeObject(obj: CanvasDisplayObject): void {\n\t\tif (obj._colorId !== undefined) {\n\t\t\tdelete this._colorMap[obj._colorId];\n\t\t}\n\t}\n\n\t// protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n\t// \treturn this._colorMap[colorId];\n\t// }\n\n\tprotected _adjustBoundingBox(bbox: DOMRect): DOMRect {\n\t\tconst margin = this._ghostLayer.margin;\n\n\t\treturn new DOMRect(\n\t\t\t-margin.left,\n\t\t\t-margin.top,\n\t\t\tbbox.width + margin.left + margin.right,\n\t\t\tbbox.height + margin.top + margin.bottom,\n\t\t);\n\t}\n\n\tpublic getEvent<A extends IPointerEvent>(originalEvent: A, adjustPoint: boolean = true): CanvasRendererEvent<A> {\n\t\tconst bbox = this.view.getBoundingClientRect();\n\n\t\tconst x = originalEvent.clientX || 0;\n\t\tconst y = originalEvent.clientY || 0;\n\n\t\tconst widthScale = this._calculatedWidth / this._realWidth;\n\t\tconst heightScale = this._calculatedHeight / this._realHeight;\n\n\t\tconst originalPoint: IPoint = {\n\t\t\tx: x - bbox.left,\n\t\t\ty: y - bbox.top,\n\t\t};\n\n\t\tconst point: IPoint = {\n\t\t\tx: (x - (adjustPoint ? bbox.left : 0)) * widthScale,\n\t\t\ty: (y - (adjustPoint ? bbox.top : 0)) * heightScale,\n\t\t};\n\n\t\treturn new CanvasRendererEvent(\n\t\t\toriginalEvent,\n\t\t\toriginalPoint,\n\t\t\tpoint,\n\t\t\tthis._adjustBoundingBox(bbox),\n\t\t);\n\t}\n\n\t_getHitTarget(point: IPoint, bbox: DOMRect, target: Node | null): CanvasDisplayObject | undefined | false {\n\t\tif (bbox.width === 0 || bbox.height === 0 || point.x < bbox.left || point.x > bbox.right || point.y < bbox.top || point.y > bbox.bottom) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target || !this._layerDom.contains(target)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst pixel = this._ghostLayer.getImageData(point, bbox);\n\n\t\tif (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tconst colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n\t\tconst hit = this._colorMap[colorId];\n\n\t\treturn hit;\n\t}\n\n\tgetObjectAtPoint(point: IPoint): CanvasDisplayObject | undefined {\n\t\tconst data = this._ghostLayer.getImageArray(point);\n\n\t\tif (data[0] === 0 && data[1] === 0 && data[2] === 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst colorId = Color.fromRGB(data[0], data[1], data[2]).toCSS();\n\t\tconst hit = this._colorMap[colorId];\n\n\t\treturn hit;\n\t}\n\n\t_withEvents<Key extends keyof IRendererEvents>(key: Key, f: (events: IEvents<Key>) => void): void {\n\t\tconst events = this._events[key] as IEvents<Key> | undefined;\n\n\t\tif (events !== undefined) {\n\t\t\tevents.dispatching = true;\n\n\t\t\ttry {\n\t\t\t\tf(events);\n\n\t\t\t} finally {\n\t\t\t\tevents.dispatching = false;\n\n\t\t\t\tif (events.cleanup) {\n\t\t\t\t\tevents.cleanup = false;\n\n\t\t\t\t\t$array.keepIf(events.callbacks, (callback) => {\n\t\t\t\t\t\treturn !callback.disposed;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (events.callbacks.length === 0) {\n\t\t\t\t\t\tevents.disposer.dispose();\n\t\t\t\t\t\tdelete this._events[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_dispatchEventAll<Key extends keyof IRendererEvents>(key: Key, event: IRendererEvents[Key]): void {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_dispatchEvent<Key extends keyof IRendererEvents>(key: Key, target: CanvasDisplayObject, event: IRendererEvents[Key]): boolean {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet dispatched = false;\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed && callback.object === target) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t\tdispatched = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn dispatched;\n\t}\n\n\t_dispatchMousedown(originalEvent: IPointerEvent, originalTarget: Node | null): void {\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tif (button != 0 && button != 2 && button != 1 && button !== undefined) {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n\n\n\t\tif (target) {\n\t\t\tconst id = event.id;\n\n\t\t\tlet dragged = false;\n\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tconst info = { id: id, value: obj };\n\n\t\t\t\tthis._mousedown.push(info);\n\n\t\t\t\tif (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\n\t\t\t\t\t// Only dispatch the first element which matches\n\t\t\t\t\tdragged = true;\n\n\t\t\t\t\tconst has = this._dragging.some((x) => {\n\t\t\t\t\t\treturn x.value === obj && x.id === id;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!has) {\n\t\t\t\t\t\tthis._dragging.push(info);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchGlobalMousemove(originalEvent: IPointerEvent, originalTarget: Node | null, native: boolean): void {\n\t\tconst event = this.getEvent(originalEvent);\n\n\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n\t\tevent.native = native;\n\n\t\tif (target) {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (!obj.contains(target)) {\n\t\t\t\t\tthis._hovering.delete(obj);\n\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t\t}\n\t\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (event.native) {\n\t\t\t\teachTargets(target, (obj) => {\n\t\t\t\t\tif (!this._hovering.has(obj)) {\n\t\t\t\t\t\tthis._hovering.add(obj);\n\t\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t\tobj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\n\t\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._dispatchEvent(\"pointerover\", obj, event);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//} else if (target === false) {\n\t\t} else {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t}\n\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t});\n\n\t\t\tthis._hovering.clear();\n\t\t}\n\t\tthis._dispatchEventAll(\"globalpointermove\", event);\n\t}\n\n\tremoveHovering(graphics: CanvasGraphics) {\n\t\tthis._hovering.delete(graphics);\n\t\tif (graphics.cursorOverStyle) {\n\t\t\t$utils.setStyle(document.body, \"cursor\", graphics._replacedCursorStyle!);\n\t\t}\n\t}\n\n\t_dispatchGlobalMouseup(originalEvent: IPointerEvent, native: boolean): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tevent.native = native;\n\t\t//const target = this._getHitTarget(event.originalPoint);\n\t\tthis._dispatchEventAll(\"globalpointerup\", event);\n\t}\n\n\t_dispatchDragMove(originalEvent: IPointerEvent): void {\n\t\tif (this._dragging.length !== 0) {\n\t\t\tconst event = this.getEvent(originalEvent);\n\t\t\tconst id = event.id;\n\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointermove\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchDragEnd(originalEvent: IPointerEvent, originalTarget: Node | null): void {\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tlet clickevent: \"click\" | \"rightclick\" | \"middleclick\";\n\t\tif (button == 0 || button === undefined) {\n\t\t\tclickevent = \"click\";\n\t\t}\n\t\telse if (button == 2) {\n\t\t\tclickevent = \"rightclick\";\n\t\t}\n\t\telse if (button == 1) {\n\t\t\tclickevent = \"middleclick\";\n\t\t}\n\t\telse {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst id = event.id;\n\n\t\tif (this._mousedown.length !== 0) {\n\t\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n\n\t\t\tif (target) {\n\t\t\t\tthis._mousedown.forEach((obj) => {\n\t\t\t\t\tif (obj.id === id && obj.value.contains(target)) {\n\t\t\t\t\t\tthis._dispatchEvent(clickevent, obj.value, event);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._mousedown.length = 0;\n\t\t}\n\n\t\tif (this._dragging.length !== 0) {\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointerup\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._dragging.length = 0;\n\t\t}\n\t}\n\n\t_dispatchDoubleClick(originalEvent: IPointerEvent, originalTarget: Node | null): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n\n\t\tif (target) {\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tif (this._dispatchEvent(\"dblclick\", obj, event)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchWheel(originalEvent: WheelEvent, originalTarget: Node | null): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.originalPoint, event.bbox, originalTarget);\n\n\t\tif (target) {\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tif (this._dispatchEvent(\"wheel\", obj, event)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_makeSharedEvent(key: string, f: () => IDisposer): IDisposer {\n\t\tif (this._listeners[key] === undefined) {\n\t\t\tconst listener = f();\n\n\t\t\tthis._listeners[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._listeners[key];\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn this._listeners[key].increment();\n\t}\n\n\t_onPointerEvent(name: string, f: (event: Array<IPointerEvent>, target: Node | null, native: boolean) => void): IDisposer {\n\t\tlet native = false;\n\t\tlet timer: number | null = null;\n\n\t\tfunction clear() {\n\t\t\ttimer = null;\n\t\t\tnative = false;\n\t\t}\n\n\t\treturn new MultiDisposer([\n\t\t\tnew Disposer(() => {\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t}\n\n\t\t\t\tclear();\n\t\t\t}),\n\n\t\t\t$utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\n\t\t\t\tnative = true;\n\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t}\n\n\t\t\t\ttimer = window.setTimeout(clear, 0);\n\t\t\t}),\n\n\t\t\tonPointerEvent(window, name, (ev, target) => {\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\ttimer = null;\n\t\t\t\t}\n\n\t\t\t\tf(ev, target, native);\n\n\t\t\t\tnative = false;\n\t\t\t}),\n\t\t]);\n\t}\n\n\t// This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n\t_initEvent(key: keyof IRendererEvents): IDisposer | undefined {\n\t\tswitch (key) {\n\t\t\tcase \"globalpointermove\":\n\t\t\tcase \"pointerover\":\n\t\t\tcase \"pointerout\":\n\t\t\t\treturn this._makeSharedEvent(\"pointermove\", () => {\n\t\t\t\t\tconst listener = (events: Array<IPointerEvent>, target: Node | null, native: boolean) => {\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, target, native };\n\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMousemove(event, target, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new MultiDisposer([\n\t\t\t\t\t\tthis._onPointerEvent(\"pointerdown\", listener),\n\t\t\t\t\t\tthis._onPointerEvent(\"pointermove\", listener),\n\t\t\t\t\t]);\n\t\t\t\t});\n\t\t\tcase \"globalpointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerup\", () => {\n\t\t\t\t\tconst mouseup = this._onPointerEvent(\"pointerup\", (events, target, native) => {\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMouseup(event, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, target, native };\n\t\t\t\t\t});\n\n\t\t\t\t\tconst pointercancel = this._onPointerEvent(\"pointercancel\", (events, target, native) => {\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMouseup(event, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, target, native };\n\t\t\t\t\t});\n\n\t\t\t\t\treturn new Disposer(() => {\n\t\t\t\t\t\tmouseup.dispose();\n\t\t\t\t\t\tpointercancel.dispose();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"click\":\n\t\t\tcase \"rightclick\":\n\t\t\tcase \"middleclick\":\n\t\t\tcase \"pointerdown\":\n\t\t\t/*\n\t\t\t\treturn this._makeSharedEvent(\"pointerdown\", () => {\n\t\t\t\t\treturn this._onPointerEvent(\"pointerdown\", (event, target, native) => {\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { event, target, native };\n\t\t\t\t\t\tthis._dispatchMousedown(event)\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t*/\n\t\t\tcase \"pointermove\":\n\t\t\tcase \"pointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerdown\", () => {\n\t\t\t\t\t//const throttler = new Throttler();\n\n\t\t\t\t\tconst mousedown = this._onPointerEvent(\"pointerdown\", (events, target) => {\n\t\t\t\t\t\t$array.each(events, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchMousedown(ev, target);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO handle throttling properly for multitouch\n\t\t\t\t\tconst mousemove = this._onPointerEvent(\"pointermove\", (ev: Array<IPointerEvent>) => {\n\t\t\t\t\t\t//throttler.throttle(() => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragMove(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst mouseup = this._onPointerEvent(\"pointerup\", (ev: Array<IPointerEvent>, target) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragEnd(ev, target);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst pointercancel = this._onPointerEvent(\"pointercancel\", (ev: Array<IPointerEvent>, target) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragEnd(ev, target);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\treturn new Disposer(() => {\n\t\t\t\t\t\tmousedown.dispose();\n\t\t\t\t\t\tmousemove.dispose();\n\t\t\t\t\t\tmouseup.dispose();\n\t\t\t\t\t\tpointercancel.dispose();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"dblclick\":\n\t\t\t\treturn this._makeSharedEvent(\"dblclick\", () => {\n\t\t\t\t\treturn this._onPointerEvent(\"dblclick\", (ev, target) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDoubleClick(ev, target);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"wheel\":\n\t\t\t\treturn this._makeSharedEvent(\"wheel\", () => {\n\t\t\t\t\treturn $utils.addEventListener(this.view, $utils.getRendererEvent(\"wheel\"), (event: WheelEvent) => {\n\t\t\t\t\t\tthis._dispatchWheel(event, $utils.getEventTarget(event));\n\t\t\t\t\t}, { passive: false });\n\t\t\t\t});\n\t\t}\n\t}\n\n\t_addEvent<C, Key extends keyof IRendererEvents>(object: CanvasDisplayObject, key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tlet events: IEvents<Key> | undefined = this._events[key] as any;\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._events[key] = {\n\t\t\t\tdisposer: this._initEvent(key)!,\n\t\t\t\tcallbacks: [],\n\t\t\t\tdispatching: false,\n\t\t\t\tcleanup: false,\n\t\t\t};\n\t\t}\n\n\t\tconst listener = { object, context, callback, disposed: false };\n\n\t\tevents!.callbacks.push(listener);\n\n\t\treturn new Disposer(() => {\n\t\t\tlistener.disposed = true;\n\n\t\t\tif (events!.dispatching) {\n\t\t\t\tevents!.cleanup = true;\n\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(events!.callbacks, listener);\n\n\t\t\t\tif (events!.callbacks.length === 0) {\n\t\t\t\t\tevents!.disposer.dispose();\n\t\t\t\t\tdelete this._events[key];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getCanvas(root: CanvasDisplayObject, options?: ICanvasOptions): HTMLCanvasElement {\n\n\t\t// Make sure everything is rendered\n\t\tthis.render(root);\n\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tlet scale: number = this.resolution;\n\n\t\tlet canvasWidth = Math.floor(this._calculatedWidth * this.resolution);\n\t\tlet canvasHeight = Math.floor(this._calculatedHeight * this.resolution);\n\n\t\t// Check if we need to scale\n\t\tif (options.minWidth && (options.minWidth > canvasWidth)) {\n\t\t\tlet minScale = options.minWidth / canvasWidth;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.minHeight && (options.minHeight > canvasHeight)) {\n\t\t\tlet minScale = options.minHeight / canvasHeight;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxWidth && (options.maxWidth < canvasWidth)) {\n\t\t\tlet maxScale = options.maxWidth / canvasWidth;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxHeight && (options.maxHeight > canvasHeight)) {\n\t\t\tlet maxScale = options.maxHeight / canvasHeight;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\t// Check if we need to compensate for pixel ratio\n\t\tif (options.maintainPixelRatio) {\n\t\t\tscale /= this.resolution;\n\t\t}\n\n\t\t// Init list canvases to remove from DOM after export\n\t\tconst canvases: HTMLCanvasElement[] = [];\n\n\t\t// Set up new canvas for export\n\t\tlet forceRender = false;\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tif (scale != this.resolution) {\n\t\t\tforceRender = true;\n\t\t\tcanvasWidth = canvasWidth * scale / this.resolution;\n\t\t\tcanvasHeight = canvasHeight * scale / this.resolution;\n\t\t}\n\n\t\tcanvas.width = canvasWidth;\n\t\tcanvas.height = canvasHeight;\n\n\t\t// Add to DOM so it inherits CSS\n\t\tcanvas.style.position = \"fixed\";\n\t\tcanvas.style.top = \"-10000px\";\n\t\tthis.view.appendChild(canvas);\n\t\tcanvases.push(canvas);\n\n\t\t// Context\n\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\tlet width = 0;\n\t\tlet height = 0;\n\t\tlet needRerender = false;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\t\t\t\tif (layer.tainted || forceRender) {\n\t\t\t\t\tneedRerender = true;\n\n\t\t\t\t\tlayer.exportableView = layer.view;\n\t\t\t\t\tlayer.exportableContext = layer.context;\n\n\t\t\t\t\tlayer.view = document.createElement(\"canvas\");\n\n\t\t\t\t\t// Add to DOM so it inherits CSS\n\t\t\t\t\tlayer.view.style.position = \"fixed\";\n\t\t\t\t\tlayer.view.style.top = \"-10000px\";\n\t\t\t\t\tthis.view.appendChild(layer.view);\n\t\t\t\t\tcanvases.push(layer.view);\n\n\t\t\t\t\tlet extraX = 0;\n\t\t\t\t\tlet extraY = 0;\n\t\t\t\t\tif (layer.margin) {\n\t\t\t\t\t\textraX += layer.margin.left || 0 + layer.margin.right || 0;\n\t\t\t\t\t\textraY += layer.margin.top || 0 + layer.margin.bottom || 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer.view.width = canvasWidth + extraX;\n\t\t\t\t\tlayer.view.height = canvasHeight + extraY;\n\n\t\t\t\t\tlayer.context = layer.view.getContext(\"2d\")!;\n\n\t\t\t\t\tlayer.dirty = true;\n\t\t\t\t\tlayer.scale = scale;\n\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (needRerender) {\n\t\t\tthis._omitTainted = true;\n\t\t\tthis.render(root);\n\t\t\tthis._omitTainted = false;\n\t\t}\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\n\t\t\t\t// Layer is fine. Just plop it into our target canvas\n\t\t\t\tlet x = 0;\n\t\t\t\tlet y = 0;\n\t\t\t\tif (layer.margin) {\n\t\t\t\t\tx = -(layer.margin.left || 0) * this.resolution;\n\t\t\t\t\ty = -(layer.margin.top || 0) * this.resolution;\n\t\t\t\t}\n\t\t\t\tcontext.drawImage(layer.view, x, y);\n\n\t\t\t\t// Restore layer original canvas\n\t\t\t\tif (layer.exportableView) {\n\t\t\t\t\tlayer.view = layer.exportableView;\n\t\t\t\t\tlayer.exportableView = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (layer.exportableContext) {\n\t\t\t\t\tlayer.context = layer.exportableContext;\n\t\t\t\t\tlayer.exportableContext = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (width < layer.view.clientWidth) {\n\t\t\t\t\twidth = layer.view.clientWidth;\n\t\t\t\t}\n\t\t\t\tif (height < layer.view.clientHeight) {\n\t\t\t\t\theight = layer.view.clientHeight;\n\t\t\t\t}\n\n\t\t\t\tlayer.scale = undefined;\n\t\t\t}\n\t\t});\n\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\n\t\t$array.each(canvases, (canvas) => {\n\t\t\tcanvas.style.position = \"\";\n\t\t\tcanvas.style.top = \"\";\n\t\t\tthis.view.removeChild(canvas);\n\t\t})\n\t\treturn canvas;\n\t}\n}\n\n\nclass GhostLayer {\n\tpublic view: HTMLCanvasElement;\n\tpublic context: CanvasRenderingContext2D;\n\tpublic margin: IMargin = {\n\t\tleft: 0,\n\t\tright: 0,\n\t\ttop: 0,\n\t\tbottom: 0,\n\t};\n\n\tprivate _resolution: number = 1;\n\tprivate _width: number = 0;\n\tprivate _height: number = 0;\n\n\tpublic imageArray?: Uint8ClampedArray;\n\n\tconstructor() {\n\t\tthis.view = document.createElement(\"canvas\");\n\t\tthis.context = this.view.getContext(\"2d\", { alpha: false, willReadFrequently: true })! as CanvasRenderingContext2D;\n\t\tthis.context.imageSmoothingEnabled = false;\n\n\t\tthis.view.style.position = \"absolute\";\n\t\tthis.view.style.top = \"0px\";\n\t\tthis.view.style.left = \"0px\";\n\t}\n\n\tresize(canvasWidth: number, canvasHeight: number, domWidth: number, domHeight: number, resolution: number) {\n\t\tthis._resolution = resolution;\n\n\t\tcanvasWidth += (this.margin.left + this.margin.right);\n\t\tcanvasHeight += (this.margin.top + this.margin.bottom);\n\n\t\t// TODO this should take into account calculateSize\n\t\tdomWidth += (this.margin.left + this.margin.right);\n\t\tdomHeight += (this.margin.top + this.margin.bottom);\n\n\t\tthis.view.style.left = -this.margin.left + \"px\";\n\t\tthis.view.style.top = -this.margin.top + \"px\";\n\n\t\tthis._width = Math.floor(canvasWidth * resolution);\n\t\tthis._height = Math.floor(canvasHeight * resolution);\n\n\t\tthis.view.width = this._width;\n\t\tthis.view.style.width = domWidth + \"px\";\n\n\t\tthis.view.height = this._height;\n\t\tthis.view.style.height = domHeight + \"px\";\n\t}\n\n\tgetImageData(point: IPoint, bbox: DOMRect): ImageData {\n\t\treturn this.context.getImageData(\n\t\t\t// TODO should this round ?\n\t\t\tMath.round(((point.x - bbox.left) / bbox.width) * this._width),\n\t\t\tMath.round(((point.y - bbox.top) / bbox.height) * this._height),\n\t\t\t1,\n\t\t\t1,\n\t\t);\n\t}\n\n\tgetImageArray(point: IPoint): Array<number> {\n\n\t\tif (!this.imageArray) {\n\t\t\tthis.imageArray = this.context.getImageData(0, 0, this._width, this._height).data;\n\t\t}\n\n\t\tconst data = this.imageArray;\n\n\t\tconst x = Math.round(point.x * this._resolution);\n\t\tconst y = Math.round(point.y * this._resolution);\n\n\t\tconst i = (y * this._width + x) * 4;\n\t\treturn [data[i], data[i + 1], data[i + 2], data[i + 3]];\n\t}\n\n\tsetMargin(layers: Array<CanvasLayer>): void {\n\t\tthis.margin.left = 0;\n\t\tthis.margin.right = 0;\n\t\tthis.margin.top = 0;\n\t\tthis.margin.bottom = 0;\n\n\t\t$array.each(layers, (layer) => {\n\t\t\tif (layer.margin) {\n\t\t\t\tthis.margin.left = Math.max(this.margin.left, layer.margin.left);\n\t\t\t\tthis.margin.right = Math.max(this.margin.right, layer.margin.right);\n\t\t\t\tthis.margin.top = Math.max(this.margin.top, layer.margin.top);\n\t\t\t\tthis.margin.bottom = Math.max(this.margin.bottom, layer.margin.bottom);\n\t\t\t}\n\t\t});\n\t}\n\n\tclear() {\n\t\tthis.context.save();\n\t\tthis.context.fillStyle = '#000';\n\t\tthis.context.fillRect(0, 0, this._width, this._height);\n\t}\n}\n\n\n/**\n * @ignore\n */\nexport class CanvasLayer implements ILayer {\n\tpublic view: HTMLCanvasElement;\n\tpublic context: CanvasRenderingContext2D;\n\tpublic tainted: boolean = true;\n\tpublic margin: IMargin | undefined;\n\tpublic order: number = 0;\n\tpublic visible: boolean = true;\n\tpublic width: number | undefined;\n\tpublic height: number | undefined;\n\tpublic scale: number | undefined;\n\tpublic dirty: boolean = true;\n\tpublic exportableView: HTMLCanvasElement | undefined;\n\tpublic exportableContext: CanvasRenderingContext2D | undefined;\n\n\tprivate _width: number = 0;\n\tprivate _height: number = 0;\n\n\tconstructor(view: HTMLCanvasElement, context: CanvasRenderingContext2D) {\n\t\tthis.view = view;\n\t\tthis.context = context;\n\t}\n\n\tresize(canvasWidth: number, canvasHeight: number, domWidth: number, domHeight: number, resolution: number) {\n\t\t// TODO should this take into account calculateSize ?\n\t\tif (this.width != null) {\n\t\t\tcanvasWidth = this.width;\n\t\t\tdomWidth = this.width;\n\t\t}\n\n\t\t// TODO should this take into account calculateSize ?\n\t\tif (this.height != null) {\n\t\t\tcanvasHeight = this.height;\n\t\t\tdomHeight = this.height;\n\t\t}\n\n\t\tif (this.margin) {\n\t\t\tcanvasWidth += (this.margin.left + this.margin.right);\n\t\t\tcanvasHeight += (this.margin.top + this.margin.bottom);\n\n\t\t\t// TODO this should take into account calculateSize\n\t\t\tdomWidth += (this.margin.left + this.margin.right);\n\t\t\tdomHeight += (this.margin.top + this.margin.bottom);\n\n\t\t\tthis.view.style.left = -this.margin.left + \"px\";\n\t\t\tthis.view.style.top = -this.margin.top + \"px\";\n\n\t\t} else {\n\t\t\tthis.view.style.left = \"0px\";\n\t\t\tthis.view.style.top = \"0px\";\n\t\t}\n\n\t\tthis._width = Math.floor(canvasWidth * resolution);\n\t\tthis._height = Math.floor(canvasHeight * resolution);\n\n\t\tthis.view.width = this._width;\n\t\tthis.view.style.width = domWidth + \"px\";\n\n\t\tthis.view.height = this._height;\n\t\tthis.view.style.height = domHeight + \"px\";\n\t}\n\n\tclear() {\n\t\tthis.context.save();\n\t\tthis.context.clearRect(0, 0, this._width, this._height);\n\t}\n}\n", "import type { IAnimation } from \"./util/Animation\";\nimport type { Entity } from \"./util/Entity\";\nimport type { Sprite } from \"./render/Sprite\";\nimport type { Theme } from \"./Theme\";\nimport type { IPoint } from \"./util/IPoint\";\nimport type { IRenderer, IPointerEvent } from \"./render/backend/Renderer\";\nimport type { Timezone } from \"./util/Timezone\";\n\nimport { AnimationState } from \"./util/Animation\";\nimport { Container } from \"./render/Container\";\nimport { Text } from \"./render/Text\";\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\nimport { VerticalLayout } from \"./render/VerticalLayout\";\nimport { GridLayout } from \"./render/GridLayout\";\nimport { IDisposer, Disposer } from \"./util/Disposer\";\nimport { ResizeSensor } from \"./util/ResizeSensor\";\nimport { InterfaceColors } from \"./util/InterfaceColors\";\nimport { Graphics } from \"./render/Graphics\";\nimport { Rectangle } from \"./render/Rectangle\";\nimport { Tooltip } from \"./render/Tooltip\";\nimport { NumberFormatter } from \"./util/NumberFormatter\";\nimport { DateFormatter } from \"./util/DateFormatter\";\nimport { DurationFormatter } from \"./util/DurationFormatter\";\nimport { ILocale, Language } from \"./util/Language\";\nimport { Events, EventDispatcher } from \"./util/EventDispatcher\";\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\nimport { p100, percent, isPercent, Percent } from \"./util/Percent\";\nimport { color } from \"./util/Color\";\nimport { populateString } from \"./util/PopulateString\";\nimport { registry } from \"./Registry\";\n\nimport * as $order from \"./util/Order\";\nimport * as $array from \"./util/Array\";\nimport * as $object from \"./util/Object\";\nimport * as $utils from \"./util/Utils\";\nimport * as $type from \"./util/Type\";\n\n\nimport en from \"../../locales/en\";\n\n\nfunction rAF(fps: number | undefined, callback: (currentTime: number) => void): void {\n\tif (fps == null) {\n\t\trequestAnimationFrame(callback);\n\n\t} else {\n\t\tsetTimeout(() => {\n\t\t\trequestAnimationFrame(callback);\n\t\t}, 1000 / fps);\n\t}\n}\n\n\n/**\n * @ignore\n */\ninterface IParent extends Entity {\n\t_prepareChildren(): void;\n\t_updateChildren(): void;\n}\n\ninterface IBounds extends Entity {\n\tdepth(): number;\n\t_updateBounds(): void;\n}\n\n\nexport interface ISize {\n\twidth: number,\n\theight: number,\n}\n\n\nexport interface IRootEvents {\n\tframestarted: {\n\t\ttimestamp: number;\n\t};\n\tframeended: {\n\t\ttimestamp: number;\n\t};\n}\n\n\nexport interface IRootSettings {\n\n\t/**\n\t * Indicates whether chart should use \"safe\" resolution on some memory-limiting\n\t * platforms such as Safari.\n\t *\n\t * @default true\n\t */\n\tuseSafeResolution?: boolean;\n\n\t/**\n\t * Allows defining margins around chart area for tooltips to go outside the\n\t * chart itself.\n\t *\n\t * @since 5.2.24\n\t */\n\ttooltipContainerBounds?: { top: number, left: number, right: number, bottom: number };\n\n\t/**\n\t * Set to `false` to disable all accessibility features.\n\t *\n\t * NOTE: once disabled, accessibility cannot be re-enabled on a live `Root` object.\n\t *\n\t * @default true\n\t * @since 5.3.0\n\t */\n\taccessible?: boolean;\n\n\t/**\n\t * If set to `true`, the parent inner `<div>` element will become a focusable\n\t * element.\n\t *\n\t * @since 5.3.17\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Accessibility_of_Root_element} for more info\n\t */\n\tfocusable?: boolean;\n\n\t/**\n\t * Distance between focused element and its highlight square in pixels.\n\t *\n\t * @since 5.6.0\n\t * @default 2\n\t */\n\tfocusPadding?: number;\n\n\t/**\n\t * If set to some string, it will be used as inner `<div>` ARIA-LABEL.\n\t *\n\t * Should be used in conjuction with `focusable`.\n\t *\n\t * @since 5.3.17\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Accessibility_of_Root_element} for more info\n\t */\n\tariaLabel?: string;\n\n\t/**\n\t * Allows setting a \"role\" for the inner `<div>`.\n\t *\n\t * @since 5.3.17\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Accessibility_of_Root_element} for more info\n\t */\n\trole?: string;\n\n\t/**\n\t * Allows for specifying a custom width / height for the chart.\n\t *\n\t * This function will be called automatically when the chart is resized.\n\t */\n\tcalculateSize?: (dimensions: DOMRect) => ISize;\n}\n\n\n// TODO implement Disposer\n/**\n * Root element of the chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\n */\nexport class Root implements IDisposer {\n\n\t/**\n\t * A reference to original chart container (div element).\n\t */\n\tpublic dom: HTMLElement;\n\tpublic _inner: HTMLElement;\n\n\tprotected _settings: IRootSettings;\n\tprotected _isDirty: boolean = false;\n\tprotected _isDirtyParents: boolean = false;\n\tprotected _isDirtyAnimation: boolean = false;\n\tprotected _dirty: { [id: number]: Entity } = {};\n\tprotected _dirtyParents: { [id: number]: IParent } = {};\n\tprotected _dirtyBounds: { [id: number]: IBounds } = {};\n\tprotected _dirtyPositions: { [id: number]: Sprite } = {};\n\n\tprotected _ticker: ((currentTime: number) => void) | null = null;\n\tprotected _tickers: Array<(currentTime: number) => void> = [];\n\n\tprotected _updateTick: boolean = true;\n\n\t/**\n\t * Root's event dispatcher.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n\t */\n\tpublic events: EventDispatcher<Events<this, IRootEvents>> = new EventDispatcher();\n\n\t/**\n\t * @ignore\n\t * @todo needs description\n\t */\n\tpublic animationTime: number | null = null;\n\n\tprivate _animations: Array<IAnimation> = [];\n\n\tpublic _renderer: IRenderer;\n\n\tpublic _rootContainer!: Container;\n\n\t/**\n\t * Main content container.\n\t */\n\tpublic container!: Container;\n\n\t/**\n\t * A [[Container]] used to display tooltips in.\n\t */\n\tpublic tooltipContainer!: Container\n\tprotected _tooltipContainerSettings!: { top: number, left: number, right: number, bottom: number };\n\n\tpublic _tooltip!: Tooltip;\n\n\t// Locale-related\n\n\t/**\n\t * @ignore\n\t */\n\tpublic language: Language = Language.new(this, {});\n\n\t/**\n\t * Locale used by the chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\n\t */\n\tpublic locale: ILocale = en;\n\n\t// Date-time related\n\n\t/**\n\t * Use UTC when formatting date/time.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#utc-and-time-zones} for more info\n\t */\n\tpublic utc: boolean = false;\n\n\t/**\n\t * If set, will format date/time in specific time zone.\n\t *\n\t * The value should be named time zone, e.g.:\n\t * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\n\t *\n\t * NOTE: Using time zone feature may noticeable affect performance of the\n\t * chart, especially with large data sets, since every single date will need\n\t * to be recalculated.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#time-zone} for more info\n\t * @since 5.1.0\n\t */\n\tpublic timezone?: Timezone;\n\n\t/**\n\t * The maximum FPS that the Root will run at.\n\t *\n\t * If `undefined` it will run at the highest FPS.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\n\t */\n\tpublic fps: number | undefined;\n\n\t/**\n\t * Number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\n\t */\n\tpublic numberFormatter: NumberFormatter = NumberFormatter.new(this, {});\n\n\t/**\n\t * Date/time formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\tpublic dateFormatter: DateFormatter = DateFormatter.new(this, {});\n\n\t/**\n\t * Duration formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\tpublic durationFormatter: DurationFormatter = DurationFormatter.new(this, {});\n\n\n\t// Accessibility\n\n\t/**\n\t * Global tab index for using for the whole chart\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\n\t */\n\tpublic tabindex: number = 0;\n\n\t//@todo maybe make this better\n\tprotected _tabindexes: Sprite[] = [];\n\n\tprotected _a11yD: boolean = false;\n\tprotected _focusElementDirty: boolean = false;\n\tprotected _focusElementContainer: HTMLDivElement | undefined;\n\tprotected _focusedSprite: Sprite | undefined;\n\tprotected _isShift: boolean | undefined;\n\tprotected _keyboardDragPoint: IPoint | undefined;\n\tprotected _tooltipElementContainer: HTMLDivElement | undefined;\n\tprotected _readerAlertElement: HTMLDivElement | undefined;\n\n\tpublic _logo?: Container;\n\n\tpublic _tooltipDiv: HTMLDivElement | undefined;\n\n\t/**\n\t * Used for dynamically-created CSS and JavaScript with strict source policies.\n\t */\n\tpublic nonce?: string;\n\n\t/**\n\t * Special color set to be used for various controls.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\n\t */\n\tpublic interfaceColors: InterfaceColors;\n\n\t/**\n\t * An instance of vertical layout object that can be used to set `layout` setting\n\t * of a [[Container]].\n\t *\n\t * @default VerticalLayout.new()\n\t */\n\tpublic verticalLayout: VerticalLayout = VerticalLayout.new(this, {});\n\n\t/**\n\t * An instance of horizontal layout object that can be used to set `layout` setting\n\t * of a [[Container]].\n\t *\n\t * @default HorizontalLayout.new()\n\t */\n\tpublic horizontalLayout: VerticalLayout = HorizontalLayout.new(this, {});\n\n\t/**\n\t * An instance of grid layout object that can be used to set `layout` setting\n\t * of a [[Container]].\n\t *\n\t * @default VerticalLayout.new()\n\t */\n\tpublic gridLayout: VerticalLayout = GridLayout.new(this, {});\n\n\tpublic _paused: boolean = false;\n\n\t/**\n\t * Indicates whether chart should resized automatically when parent container\n\t * width and/or height changes.\n\t *\n\t * If disabled (`autoResize = false`) you can make the chart resize manually\n\t * by calling root element's `resize()` method.\n\t */\n\tpublic autoResize: boolean = true;\n\n\tprotected _fontHash: string = \"\";\n\n\tprotected _isDisposed: boolean = false;\n\tprotected _disposers: Array<IDisposer> = [];\n\n\tprotected _resizeSensorDisposer?: IDisposer;\n\n\tpublic _tooltips: Array<Tooltip> = [];\n\n\tprotected _htmlElementContainer: HTMLDivElement | undefined;\n\tprotected _htmlEnabledContainers: Container[] = [];\n\n\t/**\n\t * Entities that have their `id` setting set.\n\t *\n\t * @since 5.11.0\n\t */\n\tpublic entitiesById: { [index: string]: any } = {};\n\n\tprotected constructor(id: string | HTMLElement, settings: IRootSettings = {}, isReal: boolean) {\n\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tthis._settings = settings;\n\n\t\tif (settings.accessible == false) {\n\t\t\tthis._a11yD = true;\n\t\t}\n\n\t\tif (settings.useSafeResolution == null) {\n\t\t\tsettings.useSafeResolution = true;\n\t\t}\n\n\t\tlet resolution;\n\n\t\tif (settings.useSafeResolution) {\n\t\t\tresolution = $utils.getSafeResolution();\n\t\t}\n\n\t\tthis._renderer = new CanvasRenderer(resolution);\n\n\t\tlet dom: HTMLElement | null;\n\n\t\tif (id instanceof HTMLElement) {\n\t\t\tdom = id;\n\t\t}\n\t\telse {\n\t\t\tdom = document.getElementById(id);\n\t\t}\n\n\t\t$array.each(registry.rootElements, (root) => {\n\t\t\tif (root.dom === dom) {\n\t\t\t\tthrow new Error(\"You cannot have multiple Roots on the same DOM node\");\n\t\t\t}\n\t\t});\n\n\t\tthis.interfaceColors = InterfaceColors.new(this, {});\n\n\t\tif (dom === null) {\n\t\t\tthrow new Error(\"Could not find HTML element with id `\" + id + \"`\");\n\t\t}\n\n\t\tthis.dom = dom;\n\n\t\tlet inner: HTMLDivElement = document.createElement(\"div\");\n\t\tinner.style.position = \"relative\";\n\t\tinner.style.width = \"100%\";\n\t\tinner.style.height = \"100%\";\n\t\tdom.appendChild(inner);\n\n\t\tconst tooltipContainerBounds = settings.tooltipContainerBounds;\n\t\tif (tooltipContainerBounds) {\n\t\t\tthis._tooltipContainerSettings = tooltipContainerBounds;\n\t\t}\n\n\t\tthis._inner = inner;\n\n\t\tthis._updateComputedStyles();\n\n\t\tregistry.rootElements.push(this);\n\t}\n\n\n\tpublic static new(id: string | HTMLElement, settings?: IRootSettings): Root {\n\t\tconst root = new Root(id, settings, true);\n\t\troot._init();\n\t\treturn root;\n\t}\n\n\tpublic moveDOM(id: string | HTMLElement): void {\n\t\tlet dom: HTMLElement | null;\n\n\t\tif (id instanceof HTMLElement) {\n\t\t\tdom = id;\n\t\t}\n\t\telse {\n\t\t\tdom = document.getElementById(id);\n\t\t}\n\n\t\tif (dom) {\n\t\t\twhile (this.dom.childNodes.length > 0) {\n\t\t\t\tdom.appendChild(this.dom.childNodes[0]);\n\t\t\t}\n\t\t\tthis.dom = dom;\n\t\t\tthis._initResizeSensor();\n\t\t\tthis.resize();\n\t\t}\n\n\t}\n\n\n\tprotected _handleLogo(): void {\n\t\tif (this._logo) {\n\t\t\tconst w = this.dom.offsetWidth;\n\t\t\tconst h = this.dom.offsetHeight;\n\t\t\tif ((w <= 150) || (h <= 60)) {\n\t\t\t\tthis._logo.hide();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._logo.show();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _showBranding(): void {\n\t\tif (!this._logo) {\n\t\t\tconst logo = this.tooltipContainer.children.push(Container.new(this, {\n\t\t\t\tinteractive: true,\n\t\t\t\tinteractiveChildren: false,\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tsetStateOnChildren: true,\n\t\t\t\tpaddingTop: 9,\n\t\t\t\tpaddingRight: 9,\n\t\t\t\tpaddingBottom: 9,\n\t\t\t\tpaddingLeft: 9,\n\t\t\t\tscale: .6,\n\t\t\t\ty: percent(100),\n\t\t\t\tcenterY: p100,\n\t\t\t\ttooltipText: \"Created using amCharts 5\",\n\t\t\t\ttooltipX: p100,\n\t\t\t\tcursorOverStyle: \"pointer\",\n\t\t\t\tbackground: Rectangle.new(this, {\n\t\t\t\t\tfill: color(0x474758),\n\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\ttooltipY: 5\n\t\t\t\t})\n\t\t\t}));\n\n\t\t\tconst tooltip = Tooltip.new(this, {\n\t\t\t\tpointerOrientation: \"horizontal\",\n\t\t\t\tpaddingTop: 4,\n\t\t\t\tpaddingRight: 7,\n\t\t\t\tpaddingBottom: 4,\n\t\t\t\tpaddingLeft: 7\n\t\t\t});\n\t\t\ttooltip.label.setAll({\n\t\t\t\tfontSize: 12\n\t\t\t});\n\t\t\ttooltip.get(\"background\")!.setAll({\n\t\t\t\tfill: this.interfaceColors.get(\"background\"),\n\t\t\t\tstroke: this.interfaceColors.get(\"grid\"),\n\t\t\t\tstrokeOpacity: 0.3\n\t\t\t})\n\t\t\tlogo.set(\"tooltip\", tooltip);\n\n\t\t\tlogo.events.on(\"click\", () => {\n\t\t\t\twindow.open(\"https://www.amcharts.com/\", \"_blank\");\n\t\t\t});\n\n\t\t\tlogo.states.create(\"hover\", {});\n\n\t\t\tconst m = logo.children.push(Graphics.new(this, {\n\t\t\t\tstroke: color(0xcccccc),\n\t\t\t\tstrokeWidth: 3,\n\t\t\t\tsvgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\n\t\t\t}));\n\n\t\t\tm.states.create(\"hover\", { stroke: color(0x3CABFF) });\n\n\t\t\tconst a = logo.children.push(Graphics.new(this, {\n\t\t\t\tstroke: color(0x888888),\n\t\t\t\tstrokeWidth: 3,\n\t\t\t\tsvgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\n\t\t\t}));\n\n\t\t\ta.states.create(\"hover\", { stroke: color(0x474758) });\n\n\t\t\t//logo.set(\"tooltip\", this._tooltip);\n\t\t\t//logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\n\t\t\tthis._logo = logo;\n\n\t\t\tthis._handleLogo();\n\t\t}\n\t}\n\n\tprotected _getRealSize(): DOMRect {\n\t\treturn this.dom.getBoundingClientRect();\n\t}\n\n\tprotected _getCalculatedSize(rect: DOMRect): ISize {\n\t\tif (this._settings.calculateSize) {\n\t\t\treturn this._settings.calculateSize(rect);\n\n\t\t} else {\n\t\t\treturn {\n\t\t\t\twidth: rect.width,\n\t\t\t\theight: rect.height,\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected _init(): void {\n\n\t\tconst settings = this._settings;\n\t\tif (settings.accessible !== false) {\n\t\t\tif (settings.focusable) {\n\t\t\t\tthis._inner.setAttribute(\"focusable\", \"true\");\n\t\t\t\tthis._inner.setAttribute(\"tabindex\", this.tabindex + \"\");\n\t\t\t}\n\n\t\t\tif (settings.ariaLabel) {\n\t\t\t\tthis._inner.setAttribute(\"aria-label\", settings.ariaLabel);\n\t\t\t}\n\n\t\t\tif (settings.role) {\n\t\t\t\tthis._inner.setAttribute(\"role\", settings.role);\n\t\t\t}\n\t\t}\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst rect = this._getRealSize();\n\t\tconst size = this._getCalculatedSize(rect);\n\n\t\tconst width = Math.floor(size.width);\n\t\tconst height = Math.floor(size.height);\n\n\t\tconst realWidth = Math.floor(rect.width);\n\t\tconst realHeight = Math.floor(rect.height);\n\n\t\tconst rootContainer = Container.new(this, {\n\t\t\tvisible: true,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t});\n\t\tthis._rootContainer = rootContainer;\n\t\tthis._rootContainer._defaultThemes.push(DefaultTheme.new(this));\n\n\t\tconst container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\n\t\tthis.container = container;\n\n\t\trenderer.resize(realWidth, realHeight, width, height);\n\n\t\t//@todo: better appendChild - refer\n\t\tthis._inner.appendChild(renderer.view);\n\n\t\t// TODO: TMP TMP TMP for testing only, remove\n\t\t//renderer.debugGhostView = true;\n\n\t\tthis._initResizeSensor();\n\n\t\t// HTML content holder\n\t\tconst htmlElementContainer = document.createElement(\"div\");\n\t\tthis._htmlElementContainer = htmlElementContainer;\n\t\thtmlElementContainer.className = \"am5-html-container\";\n\t\thtmlElementContainer.style.position = \"absolute\";\n\t\thtmlElementContainer.style.pointerEvents = \"none\";\n\t\tif (!this._tooltipContainerSettings) {\n\t\t\thtmlElementContainer.style.overflow = \"hidden\";\n\t\t}\n\t\tthis._inner.appendChild(htmlElementContainer);\n\n\t\tif (this._a11yD !== true) {\n\n\t\t\t// Create element which is used to make announcements to screen reader\n\t\t\tconst readerAlertElement = document.createElement(\"div\");\n\t\t\treaderAlertElement.className = \"am5-reader-container\";\n\t\t\treaderAlertElement.setAttribute(\"role\", \"alert\");\n\t\t\t// readerAlertElement.style.zIndex = \"-100000\";\n\t\t\t// readerAlertElement.style.opacity = \"0\";\n\t\t\t// readerAlertElement.style.top = \"0\";\n\t\t\treaderAlertElement.style.position = \"absolute\";\n\t\t\treaderAlertElement.style.width = \"1px\";\n\t\t\treaderAlertElement.style.height = \"1px\";\n\t\t\treaderAlertElement.style.overflow = \"hidden\";\n\t\t\treaderAlertElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\n\t\t\tthis._readerAlertElement = readerAlertElement;\n\t\t\tthis._inner.appendChild(this._readerAlertElement);\n\n\t\t\tconst focusElementContainer = document.createElement(\"div\");\n\t\t\tfocusElementContainer.className = \"am5-focus-container\";\n\t\t\tfocusElementContainer.style.position = \"absolute\";\n\t\t\tfocusElementContainer.style.pointerEvents = \"none\";\n\t\t\tfocusElementContainer.style.top = \"0px\";\n\t\t\tfocusElementContainer.style.left = \"0px\";\n\t\t\tfocusElementContainer.style.overflow = \"hidden\";\n\t\t\tfocusElementContainer.style.width = width + \"px\";\n\t\t\tfocusElementContainer.style.height = height + \"px\";\n\n\t\t\tfocusElementContainer.setAttribute(\"role\", \"graphics-document\");\n\n\t\t\t$utils.setInteractive(focusElementContainer, false);\n\t\t\tthis._focusElementContainer = focusElementContainer;\n\t\t\tthis._inner.appendChild(this._focusElementContainer);\n\n\t\t\tconst tooltipElementContainer = document.createElement(\"div\");\n\t\t\tthis._tooltipElementContainer = tooltipElementContainer;\n\t\t\ttooltipElementContainer.className = \"am5-tooltip-container\";\n\t\t\tthis._inner.appendChild(tooltipElementContainer);\n\n\t\t\t// Add keyboard events for accessibility, e.g. simulating drag with arrow\n\t\t\t// keys and click with ENTER\n\t\t\tif ($utils.supports(\"keyboardevents\")) {\n\n\t\t\t\tthis._disposers.push($utils.addEventListener(window, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\t\tconst eventKey = $utils.getEventKey(ev);\n\t\t\t\t\tif (eventKey == \"Shift\") {\n\t\t\t\t\t\tthis._isShift = true;\n\t\t\t\t\t}\n\t\t\t\t\telse if (eventKey == \"Tab\") {\n\t\t\t\t\t\tthis._isShift = ev.shiftKey;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis._disposers.push($utils.addEventListener(window, \"keyup\", (ev: KeyboardEvent) => {\n\t\t\t\t\tconst eventKey = $utils.getEventKey(ev);\n\t\t\t\t\tif (eventKey == \"Shift\") {\n\t\t\t\t\t\tthis._isShift = false;\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis._disposers.push($utils.addEventListener(focusElementContainer, \"click\", () => {\n\t\t\t\t\t// Some screen readers convert ENTER (and some SPACE) press whil on\n\t\t\t\t\t// focused element to a \"click\" event, preventing actual \"keydown\"\n\t\t\t\t\t// event from firing. We're using this \"click\" event to still\n\t\t\t\t\t// generate internal click events.\n\t\t\t\t\tconst focusedSprite = this._focusedSprite;\n\t\t\t\t\tif (focusedSprite) {\n\t\t\t\t\t\tconst announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\n\t\t\t\t\t\tif (announceText !== \"\") {\n\t\t\t\t\t\t\tthis.readerAlert(announceText);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst downEvent = renderer.getEvent(new MouseEvent(\"click\"));\n\t\t\t\t\t\tfocusedSprite.events.dispatch(\"click\", {\n\t\t\t\t\t\t\ttype: \"click\",\n\t\t\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\t\tconst focusedSprite = this._focusedSprite;\n\t\t\t\t\tif (focusedSprite) {\n\t\t\t\t\t\tif (ev.key == \"Escape\") {\n\t\t\t\t\t\t\t// ESC pressed - lose current focus\n\t\t\t\t\t\t\t$utils.blur();\n\t\t\t\t\t\t\tthis._focusedSprite = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet dragOffsetX = 0;\n\t\t\t\t\t\tlet dragOffsetY = 0;\n\t\t\t\t\t\t// TODO: figure out if using bogus MouseEvent is fine, or it will\n\t\t\t\t\t\t// fail on some platforms\n\t\t\t\t\t\tconst eventKey = $utils.getEventKey(ev);\n\t\t\t\t\t\tswitch (eventKey) {\n\t\t\t\t\t\t\tcase \"Enter\":\n\t\t\t\t\t\t\tcase \" \":\n\t\t\t\t\t\t\t\tconst announceText = focusedSprite.get(\"clickAnnounceText\", \"\");\n\t\t\t\t\t\t\t\tif (announceText !== \"\") {\n\t\t\t\t\t\t\t\t\tthis.readerAlert(announceText);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (eventKey == \" \" && focusedSprite.get(\"role\") != \"checkbox\") {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t\t\tconst downEvent = renderer.getEvent(new MouseEvent(\"mouse\"));\n\t\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"click\", {\n\t\t\t\t\t\t\t\t\ttype: \"click\",\n\t\t\t\t\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\t\t\t\tdragOffsetX = -6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\t\t\t\tdragOffsetX = 6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\t\t\t\tdragOffsetY = -6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\t\t\t\tdragOffsetY = 6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (dragOffsetX != 0 || dragOffsetY != 0) {\n\t\t\t\t\t\t\tev.preventDefault();\n\n\t\t\t\t\t\t\tif (!focusedSprite.isDragging()) {\n\t\t\t\t\t\t\t\t// Start dragging\n\t\t\t\t\t\t\t\tthis._keyboardDragPoint = {\n\t\t\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\t\t\ty: 0\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\n\t\t\t\t\t\t\t\t\tclientX: 0,\n\t\t\t\t\t\t\t\t\tclientY: 0\n\t\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t\t\tdownEvent.point = {\n\t\t\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\t\t\ty: 0\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tif (focusedSprite.events.isEnabled(\"pointerdown\")) {\n\t\t\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"pointerdown\", {\n\t\t\t\t\t\t\t\t\t\ttype: \"pointerdown\",\n\t\t\t\t\t\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\t\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Move focus marker\n\t\t\t\t\t\t\t\t//this._positionFocusElement(focusedSprite);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Move incrementally\n\t\t\t\t\t\t\tconst dragPoint = this._keyboardDragPoint!;\n\t\t\t\t\t\t\tdragPoint.x += dragOffsetX;\n\t\t\t\t\t\t\tdragPoint.y += dragOffsetY;\n\t\t\t\t\t\t\tconst moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\n\t\t\t\t\t\t\t\tclientX: dragPoint.x,\n\t\t\t\t\t\t\t\tclientY: dragPoint.y\n\t\t\t\t\t\t\t}), false);\n\n\t\t\t\t\t\t\tif (focusedSprite.events.isEnabled(\"globalpointermove\")) {\n\t\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"globalpointermove\", {\n\t\t\t\t\t\t\t\t\ttype: \"globalpointermove\",\n\t\t\t\t\t\t\t\t\toriginalEvent: moveEvent.event,\n\t\t\t\t\t\t\t\t\tpoint: moveEvent.point,\n\t\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\tthis._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev: KeyboardEvent) => {\n\t\t\t\t\tif (this._focusedSprite) {\n\t\t\t\t\t\tconst focusedSprite = this._focusedSprite;\n\t\t\t\t\t\tconst eventKey = $utils.getEventKey(ev);\n\t\t\t\t\t\tswitch (eventKey) {\n\t\t\t\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\t\t\tcase \"ArrowUp\":\n\t\t\t\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\t\t\t\tif (focusedSprite.isDragging()) {\n\t\t\t\t\t\t\t\t\t// Simulate drag stop\n\t\t\t\t\t\t\t\t\tconst dragPoint = this._keyboardDragPoint!;\n\t\t\t\t\t\t\t\t\tconst upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\n\t\t\t\t\t\t\t\t\t\tclientX: dragPoint.x,\n\t\t\t\t\t\t\t\t\t\tclientY: dragPoint.y\n\t\t\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t\t\t\tif (focusedSprite.events.isEnabled(\"globalpointerup\")) {\n\t\t\t\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"globalpointerup\", {\n\t\t\t\t\t\t\t\t\t\t\ttype: \"globalpointerup\",\n\t\t\t\t\t\t\t\t\t\t\toriginalEvent: upEvent.event,\n\t\t\t\t\t\t\t\t\t\t\tpoint: upEvent.point,\n\t\t\t\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t//this._positionFocusElement(focusedSprite);\n\t\t\t\t\t\t\t\t\tthis._keyboardDragPoint = undefined;\n\t\t\t\t\t\t\t\t\t// @todo dispatch mouseup event instead of calling dragStop?\n\t\t\t\t\t\t\t\t\t// this._dispatchEvent(\"globalpointerup\", target, upEvent);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (focusedSprite.get(\"focusableGroup\")) {\n\t\t\t\t\t\t\t\t\t// Find next item in focusable group\n\t\t\t\t\t\t\t\t\tconst group = focusedSprite.get(\"focusableGroup\");\n\t\t\t\t\t\t\t\t\tconst items = this._tabindexes.filter((item) => {\n\t\t\t\t\t\t\t\t\t\treturn item.get(\"focusableGroup\") == group && item.getPrivate(\"focusable\") !== false && item.isVisibleDeep() ? true : false;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tlet index = items.indexOf(focusedSprite);\n\t\t\t\t\t\t\t\t\tconst lastIndex = items.length - 1;\n\t\t\t\t\t\t\t\t\tindex += (eventKey == \"ArrowRight\" || eventKey == \"ArrowDown\") ? 1 : -1;\n\t\t\t\t\t\t\t\t\tif (index < 0) {\n\t\t\t\t\t\t\t\t\t\tindex = lastIndex;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (index > lastIndex) {\n\t\t\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$utils.focus(items[index].getPrivate(\"focusElement\")!.dom);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"Tab\":\n\t\t\t\t\t\t\t\tconst group = focusedSprite.get(\"focusableGroup\");\n\t\t\t\t\t\t\t\tif (group && this._isShift) {\n\t\t\t\t\t\t\t\t\tthis._focusNext(focusedSprite.getPrivate(\"focusElement\")!.dom, -1, group);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tthis._startTicker();\n\t\tthis.setThemes([]);\n\n\t\tthis._addTooltip();\n\n\t\tif (!this._hasLicense()) {\n\t\t\tthis._showBranding();\n\t\t}\n\t}\n\n\tprivate _initResizeSensor(): void {\n\t\tif (this._resizeSensorDisposer) {\n\t\t\tthis._resizeSensorDisposer.dispose();\n\t\t}\n\t\tthis._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\n\t\t\tif (this.autoResize) {\n\t\t\t\tthis.resize();\n\t\t\t}\n\t\t});\n\t\tthis._disposers.push(this._resizeSensorDisposer);\n\t}\n\n\t/**\n\t * If automatic resizing of char is disabled (`root.autoResize = false`), it\n\t * can be resized manually by calling this method.\n\t */\n\tpublic resize(): void {\n\t\tconst rect = this._getRealSize();\n\t\tconst size = this._getCalculatedSize(rect);\n\t\tconst w = Math.floor(size.width);\n\t\tconst h = Math.floor(size.height);\n\n\t\tif (w > 0 && h > 0) {\n\t\t\tconst realWidth = Math.floor(rect.width);\n\t\t\tconst realHeight = Math.floor(rect.height);\n\n\t\t\tconst htmlElementContainer = this._htmlElementContainer!;\n\t\t\thtmlElementContainer.style.width = w + \"px\";\n\t\t\thtmlElementContainer.style.height = h + \"px\";\n\n\t\t\tif (this._a11yD !== true) {\n\t\t\t\tconst focusElementContainer = this._focusElementContainer!;\n\t\t\t\tfocusElementContainer.style.width = w + \"px\";\n\t\t\t\tfocusElementContainer.style.height = h + \"px\";\n\t\t\t}\n\n\t\t\tthis._renderer.resize(realWidth, realHeight, w, h);\n\n\t\t\tconst rootContainer = this._rootContainer;\n\n\t\t\trootContainer.setPrivate(\"width\", w);\n\t\t\trootContainer.setPrivate(\"height\", h);\n\t\t\tthis._render();\n\t\t\tthis._handleLogo();\n\t\t}\n\t}\n\n\tprivate _render() {\n\t\tthis._renderer.render(this._rootContainer._display);\n\n\t\tif (this._focusElementDirty) {\n\t\t\tthis._updateCurrentFocus();\n\t\t\tthis._focusElementDirty = false;\n\t\t}\n\t}\n\n\tprivate _runTickers(currentTime: number) {\n\t\t$array.each(this._tickers, (f) => {\n\t\t\tf(currentTime);\n\t\t});\n\t}\n\n\tprivate _runAnimations(currentTime: number): boolean {\n\t\tlet running = 0;\n\n\t\t$array.keepIf(this._animations, (animation) => {\n\t\t\tconst state = animation._runAnimation(currentTime);\n\n\t\t\tif (state === AnimationState.Stopped) {\n\t\t\t\treturn false;\n\n\t\t\t} else if (state === AnimationState.Playing) {\n\t\t\t\t++running;\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\tthis._isDirtyAnimation = false;\n\n\t\treturn running === 0;\n\t}\n\n\tprivate _runDirties() {\n\t\t//console.log(\"tick **************************************************************\");\n\t\tlet allParents: { [id: number]: IParent } = {};\n\n\t\twhile (this._isDirtyParents) {\n\t\t\t// This must be before calling _prepareChildren\n\t\t\tthis._isDirtyParents = false;\n\n\t\t\t$object.keys(this._dirtyParents).forEach((key) => {\n\t\t\t\tconst parent = this._dirtyParents[key];\n\n\t\t\t\tdelete this._dirtyParents[key];\n\n\t\t\t\tif (!parent.isDisposed()) {\n\t\t\t\t\tallParents[parent.uid] = parent;\n\t\t\t\t\tparent._prepareChildren();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$object.keys(allParents).forEach((key) => {\n\t\t\tallParents[key]._updateChildren();\n\t\t});\n\n\n\t\tconst objects: Array<Entity> = [];\n\n\t\t//\t\tconsole.log(\"_beforeChanged\")\n\t\t$object.keys(this._dirty).forEach((key) => {\n\t\t\tconst entity = this._dirty[key];\n\n\t\t\tif (entity.isDisposed()) {\n\t\t\t\tdelete this._dirty[entity.uid];\n\n\t\t\t} else {\n\t\t\t\tobjects.push(entity);\n\t\t\t\tentity._beforeChanged();\n\t\t\t}\n\t\t});\n\n\t\t//\t\tconsole.log(\"_changed\")\n\t\tobjects.forEach((entity) => {\n\t\t\tentity._changed();\n\t\t\tdelete this._dirty[entity.uid];\n\t\t\tentity._clearDirty();\n\t\t});\n\n\t\tthis._isDirty = false;\n\n\t\tconst depths: { [id: number]: number } = {};\n\t\tconst bounds: Array<IBounds> = [];\n\n\t\t$object.keys(this._dirtyBounds).forEach((key) => {\n\t\t\tconst entity = this._dirtyBounds[key];\n\n\t\t\tdelete this._dirtyBounds[key];\n\n\t\t\tif (!entity.isDisposed()) {\n\t\t\t\tdepths[entity.uid] = entity.depth();\n\t\t\t\tbounds.push(entity);\n\t\t\t}\n\t\t});\n\n\t\tthis._positionHTMLElements();\n\n\t\t// High depth -> low depth\n\t\tbounds.sort((x, y) => {\n\t\t\treturn $order.compare(depths[y.uid], depths[x.uid]);\n\t\t});\n\n\t\t//\t\tconsole.log(\"_updateBounds\")\n\t\tbounds.forEach((entity) => {\n\t\t\tentity._updateBounds();\n\t\t});\n\n\t\t//\t\tconsole.log(\"_updatePosition\")\n\t\tconst dirtyPositions = this._dirtyPositions;\n\t\t$object.keys(dirtyPositions).forEach((key) => {\n\t\t\tconst sprite = dirtyPositions[key];\n\n\t\t\tdelete dirtyPositions[key];\n\n\t\t\tif (!sprite.isDisposed()) {\n\t\t\t\tsprite._updatePosition();\n\t\t\t}\n\t\t});\n\n\t\t//\t\tconsole.log(\"_afterChanged\")\n\t\tobjects.forEach((entity) => {\n\t\t\tentity._afterChanged();\n\t\t});\n\t}\n\n\tprivate _renderFrame(currentTime: number): boolean {\n\t\tif (this._updateTick) {\n\t\t\tif (this.events.isEnabled(\"framestarted\")) {\n\t\t\t\tthis.events.dispatch(\"framestarted\", {\n\t\t\t\t\ttype: \"framestarted\",\n\t\t\t\t\ttarget: this,\n\t\t\t\t\ttimestamp: currentTime,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._checkComputedStyles();\n\t\t\tthis._runTickers(currentTime);\n\n\t\t\tconst animationDone = this._runAnimations(currentTime);\n\n\t\t\tthis._runDirties();\n\t\t\tthis._render();\n\t\t\tthis._renderer.resetImageArray();\n\t\t\tthis._positionHTMLElements();\n\n\t\t\tif (this.events.isEnabled(\"frameended\")) {\n\t\t\t\tthis.events.dispatch(\"frameended\", {\n\t\t\t\t\ttype: \"frameended\",\n\t\t\t\t\ttarget: this,\n\t\t\t\t\ttimestamp: currentTime,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn this._tickers.length === 0 &&\n\t\t\t\tanimationDone &&\n\t\t\t\t!this._isDirtyAnimation &&\n\t\t\t\t!this._isDirty;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic _runTicker(currentTime: number, now?: boolean) {\n\t\tif (!this.isDisposed()) {\n\t\t\tthis.animationTime = currentTime;\n\n\t\t\tconst done = this._renderFrame(currentTime);\n\n\t\t\t// No more work to do\n\t\t\tif (done) {\n\t\t\t\tthis._ticker = null;\n\t\t\t\tthis.animationTime = null;\n\n\t\t\t} else {\n\t\t\t\tif (!this._paused) {\n\t\t\t\t\tif (now) {\n\t\t\t\t\t\tthis._ticker!\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trAF(this.fps, this._ticker!);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _runTickerNow(timeout: number = 10000) {\n\t\tif (!this.isDisposed()) {\n\t\t\tconst endTime = performance.now() + timeout;\n\n\t\t\tfor (; ;) {\n\t\t\t\tconst currentTime = performance.now();\n\n\t\t\t\tif (currentTime >= endTime) {\n\t\t\t\t\tthis.animationTime = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis.animationTime = currentTime;\n\n\t\t\t\tconst done = this._renderFrame(currentTime);\n\n\t\t\t\tif (done) {\n\t\t\t\t\tthis.animationTime = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _startTicker() {\n\t\tif (this._ticker === null) {\n\t\t\tthis.animationTime = null;\n\n\t\t\tthis._ticker = (currentTime) => {\n\t\t\t\tthis._runTicker(currentTime);\n\t\t\t};\n\n\t\t\trAF(this.fps, this._ticker!);\n\t\t}\n\t}\n\n\t/**\n\t * Returns whether the root is updating or not.\n\t */\n\tpublic get updateTick(): boolean {\n\t\treturn this._updateTick;\n\t}\n\n\t/**\n\t * Enables or disables the root updating.\n\t */\n\tpublic set updateTick(value: boolean) {\n\t\tthis._updateTick = value;\n\n\t\tif (value) {\n\t\t\tthis._startTicker();\n\t\t}\n\t}\n\n\tpublic _addDirtyEntity(entity: Entity) {\n\t\tthis._isDirty = true;\n\n\t\tif (this._dirty[entity.uid] === undefined) {\n\t\t\tthis._dirty[entity.uid] = entity;\n\t\t}\n\n\t\tthis._startTicker();\n\t}\n\n\tpublic _addDirtyParent(parent: IParent) {\n\t\tthis._isDirty = true;\n\t\tthis._isDirtyParents = true;\n\n\t\tif (this._dirtyParents[parent.uid] === undefined) {\n\t\t\tthis._dirtyParents[parent.uid] = parent;\n\t\t}\n\n\t\tthis._startTicker();\n\t}\n\n\tpublic _addDirtyBounds(entity: IBounds) {\n\t\tthis._isDirty = true;\n\n\t\tif (this._dirtyBounds[entity.uid] === undefined) {\n\t\t\tthis._dirtyBounds[entity.uid] = entity;\n\t\t}\n\n\t\tthis._startTicker();\n\t}\n\n\tpublic _addDirtyPosition(sprite: Sprite) {\n\t\tthis._isDirty = true;\n\n\t\tif (this._dirtyPositions[sprite.uid] === undefined) {\n\t\t\tthis._dirtyPositions[sprite.uid] = sprite;\n\t\t}\n\n\t\tthis._startTicker();\n\t}\n\n\tpublic _addAnimation(animation: IAnimation) {\n\t\tthis._isDirtyAnimation = true;\n\n\t\t// TODO use numeric id instead\n\t\tif (this._animations.indexOf(animation) === -1) {\n\t\t\tthis._animations.push(animation);\n\t\t}\n\n\t\tthis._startTicker();\n\t}\n\n\tpublic _markDirty() {\n\t\tthis._isDirty = true;\n\t}\n\n\tpublic _markDirtyRedraw() {\n\t\tthis.events.once(\"frameended\", () => {\n\t\t\tthis._isDirty = true;\n\t\t\tthis._startTicker();\n\t\t})\n\t}\n\n\tpublic eachFrame(f: (currentTime: number) => void): IDisposer {\n\t\tthis._tickers.push(f);\n\t\tthis._startTicker();\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(this._tickers, f);\n\t\t});\n\t}\n\n\tpublic markDirtyGlobal(container?: Container): void {\n\t\tif (!container) {\n\t\t\tcontainer = this.container;\n\t\t}\n\t\tcontainer.walkChildren((child) => {\n\t\t\tif (child instanceof Container) {\n\t\t\t\tthis.markDirtyGlobal(child);\n\t\t\t}\n\t\t\tchild.markDirty();\n\t\t\tchild.markDirtyBounds();\n\t\t});\n\t}\n\n\t/**\n\t * Returns width of the target container, in pixels.\n\t *\n\t * @return Width\n\t */\n\tpublic width(): number {\n\t\t// TODO make this more efficient, maybe just return the renderer's width ?\n\t\treturn Math.floor(this._getCalculatedSize(this._getRealSize()).width);\n\t}\n\n\t/**\n\t * Returns height of the target container, in pixels.\n\t *\n\t * @return Height\n\t */\n\tpublic height(): number {\n\t\t// TODO make this more efficient, maybe just return the renderer's height ?\n\t\treturn Math.floor(this._getCalculatedSize(this._getRealSize()).height);\n\t}\n\n\t/**\n\t * Disposes root and all the content in it.\n\t */\n\tpublic dispose(): void {\n\t\tif (!this._isDisposed) {\n\t\t\tthis._isDisposed = true;\n\n\t\t\tthis._rootContainer.dispose();\n\t\t\tthis._renderer.dispose();\n\t\t\tthis.horizontalLayout.dispose();\n\t\t\tthis.verticalLayout.dispose();\n\t\t\tthis.interfaceColors.dispose();\n\n\t\t\t$array.each(this._disposers, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\n\t\t\tif (this._inner) {\n\t\t\t\t$utils.removeElement(this._inner);\n\t\t\t}\n\n\t\t\t$array.remove(registry.rootElements, this);\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if root element is disposed.\n\t *\n\t * @return Disposed?\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\t/**\n\t * Triggers screen reader read out a message.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\n\t * @param  text  Alert text\n\t */\n\tpublic readerAlert(text: string): void {\n\t\tif (this._a11yD !== true) {\n\t\t\tconst element = this._readerAlertElement!;\n\t\t\ttext = $utils.stripTags(text);\n\t\t\tif (element.innerHTML == text) {\n\t\t\t\telement.innerHTML = \"\";\n\t\t\t}\n\t\t\telement.innerHTML = text;\n\t\t}\n\t}\n\n\t/**\n\t * Sets themes to be used for the chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t * @param  themes  A list of themes\n\t */\n\tpublic setThemes(themes: Array<Theme>): void {\n\t\tthis._rootContainer.set(\"themes\", themes);\n\n\t\t// otherwise new themes are not applied\n\t\tconst tooltipContainer = this.tooltipContainer;\n\t\tif (tooltipContainer) {\n\t\t\ttooltipContainer._applyThemes();\n\t\t}\n\n\t\t// @todo review this\n\t\tconst interfaceColors = this.interfaceColors;\n\t\tif (interfaceColors) {\n\t\t\tinterfaceColors._applyThemes();\n\t\t}\n\n\n\t}\n\n\tprotected _addTooltip() {\n\t\tif (!this.tooltipContainer) {\n\t\t\tconst tooltipContainerSettings = this._tooltipContainerSettings;\n\t\t\tconst tooltipContainer = this._rootContainer.children.push(Container.new(this, {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tisMeasured: false,\n\t\t\t\twidth: p100,\n\t\t\t\theight: p100,\n\t\t\t\tlayer: tooltipContainerSettings ? 35 : 30,\n\t\t\t\tlayerMargin: tooltipContainerSettings ? tooltipContainerSettings : undefined\n\t\t\t}));\n\t\t\tthis.tooltipContainer = tooltipContainer;\n\n\t\t\tconst tooltip = Tooltip.new(this, {});\n\t\t\tthis.container.set(\"tooltip\", tooltip);\n\t\t\ttooltip.hide(0);\n\t\t\tthis._tooltip = tooltip;\n\t\t}\n\t}\n\n\t/**\n\t * Accesibility\n\t */\n\n\tpublic _registerTabindexOrder(target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (target.get(\"focusable\")) {\n\t\t\t$array.pushOne(this._tabindexes, target);\n\t\t}\n\t\telse {\n\t\t\t$array.remove(this._tabindexes, target);\n\t\t}\n\t\tthis._invalidateTabindexes();\n\t}\n\n\tpublic _unregisterTabindexOrder(target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t$array.remove(this._tabindexes, target);\n\t\tthis._invalidateTabindexes();\n\t}\n\n\tpublic _invalidateTabindexes(): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tabindexes.sort((a: Sprite, b: Sprite) => {\n\t\t\tconst aindex = a.get(\"tabindexOrder\", 0);\n\t\t\tconst bindex = b.get(\"tabindexOrder\", 0);\n\t\t\tif (aindex == bindex) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse if (aindex > bindex) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t});\n\n\t\tconst groups: Array<string | number> = [];\n\t\t$array.each(this._tabindexes, (item, index) => {\n\t\t\tif (!item.getPrivate(\"focusElement\")) {\n\t\t\t\tthis._makeFocusElement(index, item);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._moveFocusElement(index, item);\n\t\t\t}\n\t\t\tconst group = item.get(\"focusableGroup\");\n\t\t\tif (group && item.getPrivate(\"focusable\") !== false) {\n\t\t\t\tif (groups.indexOf(group) !== -1) {\n\t\t\t\t\t// Non-first element in the group, make it not directly focusable\n\t\t\t\t\titem.getPrivate(\"focusElement\")!.dom.setAttribute(\"tabindex\", \"-1\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tgroups.push(group);\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\n\t}\n\n\tpublic _updateCurrentFocus(): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._focusedSprite) {\n\t\t\tthis._decorateFocusElement(this._focusedSprite);\n\t\t\tthis._positionFocusElement(this._focusedSprite);\n\t\t}\n\t}\n\n\tpublic _decorateFocusElement(target: Sprite, focusElement?: HTMLDivElement): void {\n\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Decorate with proper accessibility attributes\n\t\tif (!focusElement) {\n\t\t\tfocusElement = target.getPrivate(\"focusElement\")!.dom;\n\t\t}\n\n\t\tif (!focusElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst role = target.get(\"role\");\n\t\tif (role) {\n\t\t\tfocusElement.setAttribute(\"role\", role);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"role\");\n\t\t}\n\n\t\tconst ariaLabel = target.get(\"ariaLabel\");\n\t\tif (ariaLabel) {\n\t\t\tconst label = populateString(target, ariaLabel);\n\t\t\tfocusElement.setAttribute(\"aria-label\", label);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-label\");\n\t\t}\n\n\t\tconst ariaLive = target.get(\"ariaLive\");\n\t\tif (ariaLive) {\n\t\t\tfocusElement.setAttribute(\"aria-live\", ariaLive);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-live\");\n\t\t}\n\n\t\tconst ariaChecked = target.get(\"ariaChecked\");\n\t\tif (ariaChecked != null && role && [\"checkbox\", \"option\", \"radio\", \"menuitemcheckbox\", \"menuitemradio\", \"treeitem\"].indexOf(role) !== -1) {\n\t\t\tfocusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-checked\");\n\t\t}\n\n\t\tconst ariaCurrent = target.get(\"ariaCurrent\");\n\t\tif (ariaCurrent != null) {\n\t\t\tfocusElement.setAttribute(\"aria-current\", ariaCurrent);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-current\");\n\t\t}\n\n\t\tconst ariaSelected = target.get(\"ariaSelected\");\n\t\tif (ariaSelected != null && role && [\"gridcell\", \"option\", \"row\", \"tab\", \"columnheader\", \"rowheader\", \"treeitem\"].indexOf(role) !== -1) {\n\t\t\tfocusElement.setAttribute(\"aria-selected\", ariaSelected ? \"true\" : \"false\");\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-selected\");\n\t\t}\n\n\t\tif (target.get(\"ariaHidden\")) {\n\t\t\tfocusElement.setAttribute(\"aria-hidden\", \"true\");\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-hidden\");\n\t\t}\n\n\t\tconst ariaOrientation = target.get(\"ariaOrientation\");\n\t\tif (ariaOrientation) {\n\t\t\tfocusElement.setAttribute(\"aria-orientation\", ariaOrientation);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-orientation\");\n\t\t}\n\n\t\tconst ariaValueNow = target.get(\"ariaValueNow\");\n\t\tif (ariaValueNow) {\n\t\t\tfocusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuenow\");\n\t\t}\n\n\t\tconst ariaValueMin = target.get(\"ariaValueMin\");\n\t\tif (ariaValueMin) {\n\t\t\tfocusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuemin\");\n\t\t}\n\n\t\tconst ariaValueMax = target.get(\"ariaValueMax\");\n\t\tif (ariaValueMax) {\n\t\t\tfocusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuemax\");\n\t\t}\n\n\t\tconst ariaValueText = target.get(\"ariaValueText\");\n\t\tif (ariaValueText) {\n\t\t\tfocusElement.setAttribute(\"aria-valuetext\", ariaValueText);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuetext\");\n\t\t}\n\n\t\tconst ariaControls = target.get(\"ariaControls\");\n\t\tif (ariaControls) {\n\t\t\tfocusElement.setAttribute(\"aria-controls\", ariaControls);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-controls\");\n\t\t}\n\n\t\tif (target.get(\"visible\") && target.get(\"opacity\") !== 0 && target.get(\"role\") != \"tooltip\" && !target.isHidden() && target.getPrivate(\"focusable\") !== false && (target.height() || target.width())) {\n\t\t\tif (focusElement.getAttribute(\"tabindex\") != \"-1\") {\n\t\t\t\tfocusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\n\t\t\t}\n\t\t\tfocusElement.removeAttribute(\"aria-hidden\");\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"tabindex\");\n\t\t\tfocusElement.setAttribute(\"aria-hidden\", \"true\");\n\t\t}\n\t}\n\n\tpublic _makeFocusElement(index: number, target: Sprite): void {\n\n\t\tif (target.getPrivate(\"focusElement\") || this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Init\n\t\tconst focusElement = document.createElement(\"div\");\n\t\tif (target.get(\"role\") != \"tooltip\") {\n\t\t\tfocusElement.tabIndex = this.tabindex;\n\t\t}\n\t\tfocusElement.style.position = \"absolute\";\n\t\t$utils.setInteractive(focusElement, false);\n\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\ttarget.setPrivate(\"focusElement\", {\n\t\t\tdom: focusElement,\n\t\t\tdisposers,\n\t\t});\n\n\t\tthis._decorateFocusElement(target);\n\n\t\tdisposers.push($utils.addEventListener(focusElement, \"focus\", (ev: FocusEvent) => {\n\t\t\tthis._handleFocus(ev);\n\t\t}));\n\n\t\tdisposers.push($utils.addEventListener(focusElement, \"blur\", (ev: FocusEvent) => {\n\t\t\tthis._handleBlur(ev);\n\t\t}));\n\n\t\tthis._moveFocusElement(index, target);\n\n\t}\n\n\tpublic _removeFocusElement(target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t$array.remove(this._tabindexes, target);\n\t\tconst focusElement = target.getPrivate(\"focusElement\");\n\t\tif (focusElement) {\n\t\t\tconst container = this._focusElementContainer!;\n\t\t\tcontainer.removeChild(focusElement.dom);\n\t\t\t$array.each(focusElement.disposers, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _hideFocusElement(target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focusElement = target.getPrivate(\"focusElement\")!;\n\t\tfocusElement.dom.style.display = \"none\";\n\t}\n\n\tprotected _moveFocusElement(index: number, target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get container\n\t\tconst container = this._focusElementContainer!;\n\t\tconst focusElement = target.getPrivate(\"focusElement\")!.dom;\n\n\t\tif (focusElement === this._focusElementContainer!.children[index]) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tconst next = this._focusElementContainer!.children[index + 1];\n\t\tif (next) {\n\t\t\tcontainer.insertBefore(focusElement, next);\n\t\t}\n\t\telse {\n\t\t\tcontainer.append(focusElement);\n\t\t}\n\t}\n\n\tprotected _positionFocusElement(target: Sprite): void {\n\t\tif (this._a11yD == true || target == undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst bounds = target.globalBounds();\n\n\t\tlet width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\n\t\tlet height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\n\n\t\tconst padding = this._settings.focusPadding !== undefined ? this._settings.focusPadding : 2;\n\n\t\tlet x = bounds.left - padding;\n\t\tlet y = bounds.top - padding;\n\n\t\tif (width < 0) {\n\t\t\tx += width;\n\t\t\twidth = Math.abs(width);\n\t\t}\n\n\t\tif (height < 0) {\n\t\t\ty += height;\n\t\t\theight = Math.abs(height);\n\t\t}\n\n\t\tconst focusElement = target.getPrivate(\"focusElement\")!.dom;\n\t\tfocusElement.style.top = y + \"px\";\n\t\tfocusElement.style.left = x + \"px\";\n\t\tfocusElement.style.width = (width + padding * 2) + \"px\";\n\t\tfocusElement.style.height = (height + padding * 2) + \"px\";\n\n\t}\n\n\tprotected _getSpriteByFocusElement(target: any): Sprite | undefined {\n\t\tlet found: Sprite | undefined;\n\t\t$array.eachContinue(this._tabindexes, (item, _index) => {\n\t\t\tif (item.getPrivate(\"focusElement\")!.dom === target) {\n\t\t\t\tfound = item;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\treturn found;\n\t}\n\n\tprotected _handleFocus(ev: FocusEvent): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get element\n\t\t//const focused = this._tabindexes[index];\n\t\tconst focused = this._getSpriteByFocusElement(ev.target);\n\n\t\tif (!focused) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Jump over hidden elements\n\t\tif (!focused.isVisibleDeep()) {\n\t\t\tthis._focusNext(<HTMLDivElement>ev.target, this._isShift ? -1 : 1);\n\t\t\treturn;\n\t\t}\n\n\t\t// Size and position\n\t\tthis._positionFocusElement(focused);\n\t\t//this._decorateFocusElement(focused);\n\n\t\tthis._focusedSprite = focused;\n\n\t\tif (focused.events.isEnabled(\"focus\")) {\n\t\t\tfocused.events.dispatch(\"focus\", {\n\t\t\t\ttype: \"focus\",\n\t\t\t\toriginalEvent: ev,\n\t\t\t\ttarget: focused\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _focusNext(el: HTMLDivElement, direction: 1 | -1, group?: string | number): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focusableElements = Array.from(document.querySelectorAll([\n\t\t\t'a[href]',\n\t\t\t'area[href]',\n\t\t\t'button:not([disabled])',\n\t\t\t'details',\n\t\t\t'input:not([disabled])',\n\t\t\t'iframe:not([disabled])',\n\t\t\t'select:not([disabled])',\n\t\t\t'textarea:not([disabled])',\n\t\t\t'[contentEditable=\"\"]',\n\t\t\t'[contentEditable=\"true\"]',\n\t\t\t'[contentEditable=\"TRUE\"]',\n\t\t\t'[tabindex]:not([tabindex^=\"-\"])',\n\t\t\t//':not([disabled])'\n\t\t].join(',')));\n\n\t\tlet index = focusableElements.indexOf(el) + direction;\n\n\t\tif (index < 0) {\n\t\t\tindex = focusableElements.length - 1;\n\t\t}\n\t\telse if (index >= focusableElements.length) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst targetElement = (<HTMLDivElement>focusableElements[index]);\n\n\t\tif (group && direction == -1) {\n\t\t\tconst target = this._getSpriteByFocusElement(targetElement);\n\t\t\tif (target && target.get(\"focusableGroup\") == group) {\n\t\t\t\tthis._focusNext(targetElement, direction);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\ttargetElement.focus();\n\t}\n\n\tprotected _handleBlur(ev: FocusEvent): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst focused = this._focusedSprite;\n\t\tif (focused && !focused.isDisposed() && focused.events.isEnabled(\"blur\")) {\n\t\t\tfocused.events.dispatch(\"blur\", {\n\t\t\t\ttype: \"blur\",\n\t\t\t\toriginalEvent: ev,\n\t\t\t\ttarget: focused\n\t\t\t});\n\t\t}\n\t\tthis._focusedSprite = undefined;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltip(target: Text): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst text = $utils.stripTags(target._getText());\n\t\tlet tooltipElement = target.getPrivate(\"tooltipElement\");\n\t\tif (target.get(\"role\") == \"tooltip\" && text != \"\") {\n\t\t\tif (!tooltipElement) {\n\t\t\t\ttooltipElement = this._makeTooltipElement(target);\n\t\t\t}\n\t\t\tif (tooltipElement.innerHTML != text) {\n\t\t\t\ttooltipElement.innerHTML = text!;\n\t\t\t}\n\t\t\ttooltipElement.setAttribute(\"aria-hidden\", target.isVisibleDeep() ? \"false\" : \"true\");\n\t\t}\n\t\telse if (tooltipElement) {\n\t\t\ttooltipElement.remove();\n\t\t\ttarget.removePrivate(\"tooltipElement\");\n\t\t}\n\t}\n\n\tpublic _makeTooltipElement(target: Text): HTMLDivElement {\n\t\tconst container = this._tooltipElementContainer!;\n\t\tconst tooltipElement = document.createElement(\"div\");\n\t\ttooltipElement.style.position = \"absolute\";\n\t\ttooltipElement.style.width = \"1px\";\n\t\ttooltipElement.style.height = \"1px\";\n\t\ttooltipElement.style.overflow = \"hidden\";\n\t\ttooltipElement.style.clip = \"rect(1px, 1px, 1px, 1px)\";\n\n\t\t$utils.setInteractive(tooltipElement, false);\n\n\t\tthis._decorateFocusElement(target, tooltipElement);\n\t\tcontainer.append(tooltipElement);\n\t\ttarget.setPrivate(\"tooltipElement\", tooltipElement);\n\n\t\treturn tooltipElement;\n\t}\n\n\tpublic _removeTooltipElement(target: Text): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\t\tconst tooltipElement = target.getPrivate(\"tooltipElement\");\n\t\tif (tooltipElement) {\n\t\t\tconst parent = tooltipElement.parentElement;\n\t\t\tif (parent) {\n\t\t\t\tparent.removeChild(tooltipElement);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _invalidateAccessibility(target: Sprite): void {\n\t\tif (this._a11yD == true) {\n\t\t\treturn;\n\t\t}\n\t\tthis._focusElementDirty = true;\n\t\tconst focusElement = target.getPrivate(\"focusElement\");\n\t\tif (target.get(\"focusable\")) {\n\t\t\tif (focusElement) {\n\t\t\t\tthis._decorateFocusElement(target);\n\t\t\t\tthis._positionFocusElement(target);\n\t\t\t}\n\t\t\t// else {\n\t\t\t// \tthis._renderer._makeFocusElement(0, this);\n\t\t\t// }\n\t\t}\n\t\telse if (focusElement) {\n\t\t\tthis._removeFocusElement(target);\n\t\t}\n\t\t//this.updateCurrentFocus();\n\t}\n\n\t/**\n\t * Returns `true` if `target` is currently focused.\n\t *\n\t * @param   target  Target\n\t * @return          Focused?\n\t */\n\tpublic focused(target: Sprite): boolean {\n\t\treturn this._focusedSprite === target;\n\t}\n\n\t/**\n\t * Converts document coordinates to coordinates withing root element.\n\t *\n\t * @param   point  Document point\n\t * @return         Root point\n\t */\n\tpublic documentPointToRoot(point: IPoint): IPoint {\n\t\tconst rect = this._getRealSize();\n\t\tconst size = this._getCalculatedSize(rect);\n\n\t\tconst scaleWidth = size.width / rect.width;\n\t\tconst scaleHeight = size.height / rect.height;\n\n\t\treturn {\n\t\t\tx: (point.x - rect.left) * scaleWidth,\n\t\t\ty: (point.y - rect.top) * scaleHeight,\n\t\t};\n\t}\n\n\t/**\n\t * Converts root coordinates to document\n\t *\n\t * @param   point  Document point\n\t * @return         Root point\n\t */\n\tpublic rootPointToDocument(point: IPoint): IPoint {\n\t\tconst rect = this._getRealSize();\n\t\tconst size = this._getCalculatedSize(rect);\n\n\t\tconst scaleWidth = size.width / rect.width;\n\t\tconst scaleHeight = size.height / rect.height;\n\n\t\treturn {\n\t\t\tx: (point.x / scaleWidth) + rect.left,\n\t\t\ty: (point.y / scaleHeight) + rect.top\n\t\t};\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addDisposer<T extends IDisposer>(disposer: T): T {\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\tprotected _updateComputedStyles(): boolean {\n\t\tconst styles = window.getComputedStyle(this.dom);\n\t\tlet fontHash = \"\";\n\t\t$object.each(styles, (key, val) => {\n\t\t\tif ($type.isString(key) && key.match(/^font/)) {\n\t\t\t\tfontHash += val;\n\t\t\t}\n\t\t})\n\t\tconst changed = fontHash != this._fontHash;\n\t\tif (changed) {\n\t\t\tthis._fontHash = fontHash;\n\t\t}\n\t\treturn changed;\n\t}\n\n\tprotected _checkComputedStyles(): void {\n\t\tif (this._updateComputedStyles()) {\n\t\t\tthis._invalidateLabelBounds(this.container);\n\t\t}\n\t}\n\n\tprotected _invalidateLabelBounds(target: Sprite): void {\n\t\tif (target instanceof Container) {\n\t\t\ttarget.children.each((child) => {\n\t\t\t\tthis._invalidateLabelBounds(child);\n\t\t\t});\n\t\t}\n\t\telse if (target instanceof Text) {\n\t\t\ttarget.markDirtyBounds();\n\t\t}\n\t}\n\n\t/**\n\t * To all the clever heads out there. Yes, we did not make any attempts to\n\t * scramble this.\n\t *\n\t * This is a part of a tool meant for our users to manage their commercial\n\t * licenses for removal of amCharts branding from charts.\n\t *\n\t * The only legit way to do so is to purchase a commercial license for amCharts:\n\t * https://www.amcharts.com/online-store/\n\t *\n\t * Removing or altering this code, or disabling amCharts branding in any other\n\t * way is against the license and thus illegal.\n\t */\n\tprotected _hasLicense(): boolean {\n\t\tfor (let i = 0; i < registry.licenses.length; i++) {\n\t\t\tif (registry.licenses[i].match(/^AM5C.{5,}/i)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic _licenseApplied(): void {\n\t\tif (this._logo) {\n\t\t\tthis._logo.set(\"forceHidden\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get debugGhostView(): boolean {\n\t\treturn this._renderer.debugGhostView;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic set debugGhostView(value: boolean) {\n\t\tthis._renderer.debugGhostView = value;\n\t}\n\n\t/**\n\t * Set this to `true` if you need chart to require first a tap onto it before\n\t * touch gesture related functionality like zoom/pan is turned on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\n\t * @default false\n\t * @since 5.2.9\n\t * @param  value  Needs a tap to activate touch functions\n\t */\n\tpublic set tapToActivate(value: boolean) {\n\t\tthis._renderer.tapToActivate = value;\n\t}\n\n\t/**\n\t * @return Needs a tap to activate touch functions\n\t */\n\tpublic get tapToActivate(): boolean {\n\t\treturn this._renderer.tapToActivate;\n\t}\n\n\t/**\n\t * If `tapToActivate` is set to `true`, this setting will determine number\n\t * of milliseconds the chart will stay \"active\", before releasing the\n\t * controls back to the page.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\n\t * @default 3000\n\t * @since 5.2.9\n\t * @param  value  Timeout\n\t */\n\tpublic set tapToActivateTimeout(value: number) {\n\t\tthis._renderer.tapToActivateTimeout = value;\n\t}\n\n\t/**\n\t * @return Timeout\n\t */\n\tpublic get tapToActivateTimeout(): number {\n\t\treturn this._renderer.tapToActivateTimeout;\n\t}\n\n\tpublic _makeHTMLElement(target: Container): HTMLDivElement {\n\n\t\t// Get container\n\t\tconst container = this._htmlElementContainer!;\n\n\t\t// Init\n\t\tconst htmlElement = document.createElement(\"div\");\n\t\ttarget.setPrivate(\"htmlElement\", htmlElement);\n\n\t\t// Should we put this into a wrapper?\n\t\tlet needWrapper: Boolean = false;\n\t\tlet wrapperTarget: Container;\n\t\ttarget._walkParents((parent) => {\n\t\t\tif ((parent as Container).get(\"verticalScrollbar\")) {\n\t\t\t\tneedWrapper = true;\n\t\t\t\twrapperTarget = parent as Container;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\tlet htmlElementWrapper: HTMLDivElement;\n\n\t\tif (needWrapper) {\n\t\t\thtmlElementWrapper = document.createElement(\"div\");\n\t\t\ttarget.setPrivate(\"htmlElementWrapper\", htmlElementWrapper);\n\t\t\ttarget.setPrivate(\"wrapperContainer\", wrapperTarget!);\n\n\t\t\thtmlElementWrapper.style.position = \"absolute\";\n\t\t\thtmlElementWrapper.style.overflow = \"hidden\";\n\t\t\thtmlElementWrapper.style.boxSizing = \"border-box\";\n\t\t\thtmlElementWrapper.style.top = \"0px\";\n\t\t\thtmlElementWrapper.style.left = \"0px\";\n\t\t\thtmlElementWrapper.style.width = \"100%\";\n\t\t\thtmlElementWrapper.style.height = \"100%\";\n\n\t\t\twrapperTarget!.events.on(\"boundschanged\", () => {\n\t\t\t\tthis._positionHTMLElement(target);\n\t\t\t});\n\t\t}\n\n\t\t//htmlElement.tabIndex = this.tabindex;\n\t\thtmlElement.style.position = \"absolute\";\n\t\thtmlElement.style.overflow = \"auto\";\n\t\thtmlElement.style.boxSizing = \"border-box\";\n\t\t$utils.setInteractive(htmlElement, target.get(\"interactive\", false));\n\n\t\t// Translate events\n\t\tif (target.events.isEnabled(\"click\")) {\n\t\t\t$utils.setInteractive(htmlElement, true);\n\t\t\tthis._disposers.push($utils.addEventListener<PointerEvent | MouseEvent>(htmlElement, \"click\", (ev: IPointerEvent) => {\n\t\t\t\tconst downEvent = this._renderer.getEvent(ev);\n\t\t\t\ttarget.events.dispatch(\"click\", {\n\t\t\t\t\ttype: \"click\",\n\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\tsimulated: false,\n\t\t\t\t\ttarget: target\n\t\t\t\t});\n\t\t\t}));\n\t\t}\n\n\t\tthis._positionHTMLElement(target);\n\n\t\tif (needWrapper) {\n\t\t\thtmlElementWrapper!.append(htmlElement);\n\t\t\tcontainer.append(htmlElementWrapper!);\n\t\t}\n\t\telse {\n\t\t\tcontainer.append(htmlElement);\n\t\t}\n\n\t\t$array.pushOne(this._htmlEnabledContainers, target);\n\n\t\treturn htmlElement;\n\t}\n\n\tpublic _positionHTMLElements(): void {\n\t\t$array.each(this._htmlEnabledContainers, (target) => {\n\t\t\tthis._positionHTMLElement(target);\n\t\t});\n\t}\n\n\tpublic _positionHTMLElement(target: Container): void {\n\t\tconst htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\n\t\tif (htmlElementWrapper) {\n\t\t\tconst wrapperTarget = target.getPrivate(\"wrapperContainer\");\n\t\t\tif (wrapperTarget) {\n\t\t\t\tconst bounds = wrapperTarget.globalBounds();\n\t\t\t\thtmlElementWrapper.style.clipPath = \"rect(\" + bounds.top + \"px \" + bounds.right + \"px \" + bounds.bottom + \"px \" + bounds.left + \"px)\";\n\t\t\t}\n\t\t}\n\n\t\tconst htmlElement = target.getPrivate(\"htmlElement\");\n\t\tif (htmlElement) {\n\n\t\t\t// Translate settings\n\t\t\tconst visualSettings = [\n\t\t\t\t\"paddingTop\",\n\t\t\t\t\"paddingRight\",\n\t\t\t\t\"paddingBottom\",\n\t\t\t\t\"paddingLeft\",\n\t\t\t\t\"minWidth\",\n\t\t\t\t\"minHeight\",\n\t\t\t\t\"maxWidth\",\n\t\t\t\t\"maxHeight\"\n\t\t\t];\n\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\tconst value = target.get(setting);\n\t\t\t\tif (value) {\n\t\t\t\t\thtmlElement.style[setting] = value + \"px\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thtmlElement.style[setting] = \"\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst strtingSettings = [\n\t\t\t\t\"fontFamily\",\n\t\t\t\t\"fontSize\",\n\t\t\t\t\"fontStyle\",\n\t\t\t\t\"fontWeight\",\n\t\t\t\t\"fontStyle\",\n\t\t\t\t\"fontVariant\",\n\t\t\t\t\"textDecoration\"\n\t\t\t];\n\t\t\t$array.each(strtingSettings, (setting: any) => {\n\t\t\t\tconst value = target.get(setting);\n\t\t\t\tif (value) {\n\t\t\t\t\tif (setting == \"fontSize\" && !$type.isString(value)) {\n\t\t\t\t\t\thtmlElement.style[setting] = value + \"px\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thtmlElement.style[setting] = value + \"\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thtmlElement.style[setting] = \"\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Init and reset scale / rotation\n\t\t\tconst scale = target.compositeScale() || 1;\n\t\t\tconst rotation = target.compositeRotation() || 0;\n\t\t\thtmlElement.style.transform = \"\";\n\t\t\thtmlElement.style.transformOrigin = \"\";\n\n\t\t\t// Deal with opacity\n\t\t\tconst opacity = target.compositeOpacity();\n\t\t\tsetTimeout(() => {\n\t\t\t\thtmlElement.style.opacity = opacity + \"\";\n\t\t\t}, 10);\n\n\t\t\tconst visible = target.isVisibleDeep();\n\t\t\tif (visible) {\n\t\t\t\thtmlElement.style.display = \"block\";\n\t\t\t}\n\n\t\t\t// Deal with position\n\t\t\t// const bounds = target.globalBounds();\n\t\t\t// htmlElement.style.top = (bounds.top) + \"px\";\n\t\t\t// htmlElement.style.left = (bounds.left) + \"px\";\n\t\t\tlet pos = {\n\t\t\t\tx: target.x() + target.get(\"dx\", 0),\n\t\t\t\ty: target.y() + target.get(\"dy\", 0)\n\t\t\t}\n\t\t\tif (target.parent) {\n\t\t\t\tpos = target.parent.toGlobal(pos)\n\t\t\t}\n\t\t\thtmlElement.style.top = pos.y + \"px\";\n\t\t\thtmlElement.style.left = pos.x + \"px\";\n\n\t\t\t// Use width/height if those are set\n\t\t\tconst width = target.get(\"width\");\n\t\t\tconst height = target.get(\"height\");\n\n\t\t\tlet w: number = 0;\n\t\t\tlet h: number = 0;\n\n\t\t\tif (width) {\n\t\t\t\tw = target.width();\n\t\t\t}\n\n\t\t\tif (height) {\n\t\t\t\th = target.height();\n\t\t\t}\n\n\n\t\t\tif (!width || !height) {\n\t\t\t\thtmlElement.style.position = \"fixed\";\n\t\t\t\thtmlElement.style.width = \"\";\n\t\t\t\thtmlElement.style.height = \"\";\n\t\t\t\tconst bbox = htmlElement.getBoundingClientRect();\n\t\t\t\thtmlElement.style.position = \"absolute\";\n\t\t\t\tif (!width) w = bbox.width;\n\t\t\t\tif (!height) h = bbox.height;\n\n\t\t\t\tlet lw = w / scale;\n\t\t\t\tlet lh = h / scale;\n\n\t\t\t\tlet cx = target.get(\"centerX\", 0);\n\t\t\t\tlet cy = target.get(\"centerY\", 0);\n\n\t\t\t\tlet ll = 0;\n\t\t\t\tlet lr = 0;\n\t\t\t\tlet lt = 0;\n\t\t\t\tlet lb = 0;\n\n\t\t\t\tif (cx instanceof Percent) {\n\t\t\t\t\tll = -cx.value * lw;\n\t\t\t\t\tlr = (1 - cx.value) * lw;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tll = -cx;\n\t\t\t\t\tlr = lw - cx;\n\t\t\t\t}\n\n\t\t\t\tif (cy instanceof Percent) {\n\t\t\t\t\tlt = -cy.value * lh;\n\t\t\t\t\tlb = (1 - cy.value) * lh;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlt = -cy;\n\t\t\t\t\tlb = lh - cy;\n\t\t\t\t}\n\n\t\t\t\ttarget._localBounds = { left: ll, right: lr, top: lt, bottom: lb };\n\n\t\t\t\tlet previousBounds = target._adjustedLocalBounds;\n\t\t\t\tlet newBounds = target._display.getAdjustedBounds(target._localBounds);\n\t\t\t\ttarget._adjustedLocalBounds = newBounds;\n\n\t\t\t\t// compare each value of the bounds\n\t\t\t\tif (previousBounds.left !== newBounds.left || previousBounds.right !== newBounds.right || previousBounds.top !== newBounds.top || previousBounds.bottom !== newBounds.bottom) {\n\t\t\t\t\ttarget.markDirtyBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (w > 0) {\n\t\t\t\thtmlElement.style.minWidth = (w) + \"px\";\n\t\t\t}\n\t\t\tif (h > 0) {\n\t\t\t\thtmlElement.style.minHeight = (h) + \"px\";\n\t\t\t}\n\n\t\t\t// Hide or show\n\t\t\tif (!visible || opacity == 0) {\n\t\t\t\thtmlElement.style.display = \"none\";\n\t\t\t}\n\n\t\t\t// Center position\n\t\t\tconst x = target.get(\"centerX\", 0);\n\t\t\tconst originX = isPercent(x) ? (x as Percent).percent + \"%\" : x + \"px\";\n\t\t\tconst y = target.get(\"centerY\", 0);\n\t\t\tconst originY = isPercent(y) ? (y as Percent).percent + \"%\" : y + \"px\";\n\n\t\t\tif (x || y) {\n\t\t\t\thtmlElement.style.transform = \"translate(-\" + originX + \", -\" + originY + \")\" + htmlElement.style.transform;\n\t\t\t}\n\n\t\t\t// Deal with scale\n\t\t\tif (scale != 1) {\n\t\t\t\thtmlElement.style.transform += \"scale(\" + scale + \")\";\n\t\t\t}\n\n\t\t\tif (rotation != 0) {\n\t\t\t\thtmlElement.style.transform += \" rotate(\" + rotation + \"deg)\";\n\t\t\t}\n\n\t\t\tif (htmlElement.style.transform != \"\") {\n\t\t\t\thtmlElement.style.transformOrigin = originX + \" \" + originY;\n\t\t\t\t//htmlElement.style.transformOrigin = \"0% 0%\";\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tpublic _setHTMLContent(target: Container, html: string): void {\n\t\tlet htmlElement = target.getPrivate(\"htmlElement\");\n\t\tif (!htmlElement) {\n\t\t\thtmlElement = this._makeHTMLElement(target);\n\t\t}\n\t\tif (htmlElement.innerHTML != html) {\n\t\t\thtmlElement.innerHTML = html;\n\t\t}\n\t}\n\n\tpublic _removeHTMLContent(target: Container): void {\n\t\tconst htmlElementWrapper = target.getPrivate(\"htmlElementWrapper\");\n\t\tconst htmlElement = target.getPrivate(\"htmlElement\");\n\t\tif (htmlElementWrapper) {\n\t\t\tthis._htmlElementContainer!.removeChild(htmlElementWrapper);\n\t\t\ttarget.removePrivate(\"htmlElement\");\n\t\t\ttarget.removePrivate(\"htmlElementWrapper\");\n\t\t\ttarget.removePrivate(\"wrapperContainer\");\n\t\t}\n\t\telse if (htmlElement) {\n\t\t\tthis._htmlElementContainer!.removeChild(htmlElement);\n\t\t\ttarget.removePrivate(\"htmlElement\");\n\t\t\ttarget.removePrivate(\"wrapperContainer\");\n\t\t}\n\t\t$array.remove(this._htmlEnabledContainers, target);\n\t}\n}\n", "import type { Root } from \"../Root\"\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"./Entity\";\nimport { StyleRule } from \"./Utils\"\nimport { MultiDisposer, IDisposer, CounterDisposer } from \"../../core/util/Disposer\";\n\nimport * as $utils from \"./Utils\"\n\n\n/**\n * @ignore\n */\nlet rules: CounterDisposer | undefined;\n\n/**\n * @ignore\n */\nfunction modalCSS(element: ShadowRoot | null, root: Root, _prefix?: string): IDisposer {\n\tconst ic = root.interfaceColors;\n\tconst active = ic.get(\"secondaryButton\")!.toCSS();\n\tconst text = ic.get(\"text\")!.toCSS();\n\tconst shadow = ic.get(\"alternativeBackground\")!.toCSS(0.45);\n\t//const altbg = ic.get(\"alternativeBackground\")!.toCSS();\n\n\tif (!rules) {\n\t\tconst disposer = new MultiDisposer([\n\n\t\t\tnew StyleRule(element, \".am5-modal\", {\n\t\t\t\t\"width\": \"100%\",\n\t\t\t\t\"height\": \"100%\",\n\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\"z-index\": \"100000\",\n\t\t\t\t\"top\": \"0\",\n\t\t\t\t\"left\": \"0\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-curtain\", {\n\t\t\t\t\"top\": \"0\",\n\t\t\t\t\"left\": \"0\",\n\t\t\t\t\"width\": \"100%\",\n\t\t\t\t\"height\": \"100%\",\n\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\"background\": ic.get(\"background\")!.toCSS(0.5),\n\t\t\t\t\"z-index\": \"100\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-wrapper\", {\n\t\t\t\t\"top\": \"0\",\n\t\t\t\t\"left\": \"0\",\n\t\t\t\t\"width\": \"100%\",\n\t\t\t\t\"height\": \"100%\",\n\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\"text-align\": \"center\",\n\t\t\t\t\"white-space\": \"nowrap\",\n\t\t\t\t\"background\": ic.get(\"background\")!.toCSS(0.5),\n\t\t\t\t\"z-index\": \"101\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-wrapper:before\", {\n\t\t\t\t\"content\": \"''\",\n\t\t\t\t\"display\": \"inline-block\",\n\t\t\t\t\"height\": \"100%\",\n\t\t\t\t\"vertical-align\": \"middle\",\n\t\t\t\t\"margin-right\": \"-0.25em\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-content\", {\n\t\t\t\t\"display\": \"inline-block\",\n\t\t\t\t\"padding\": \"1.2em\",\n\t\t\t\t\"vertical-align\": \"middle\",\n\t\t\t\t\"text-align\": \"start\",\n\t\t\t\t\"white-space\": \"normal\",\n\t\t\t\t\"background\": ic.get(\"background\")!.toCSS(),\n\t\t\t\t//\"border\": \"1px solid \" + ic.get(\"alternativeBackground\")!.toCSS(),\n\t\t\t\t\"border-radius\": \"4px\",\n\t\t\t\t\"-webkit-box-shadow\": \"0px 0px 36px 0px \" + shadow,\n\t\t\t\t\"box-shadow\": \"0px 0px 36px 0px \" + shadow,\n\t\t\t\t\"color\": text\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-content h1\", {\n\t\t\t\t\"font-size\": \"1em\",\n\t\t\t\t\"margin\": \"0 0 0.5em 0\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-table\", {\n\t\t\t\t\"display\": \"table\",\n\t\t\t\t\"margin\": \"1em 0\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-table-row\", {\n\t\t\t\t\"display\": \"table-row\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-table-heading\", {\n\t\t\t\t\"display\": \"table-heading\",\n\t\t\t\t\"padding\": \"3px 10px 3px 0\",\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-table-cell\", {\n\t\t\t\t\"display\": \"table-cell\",\n\t\t\t\t\"padding\": \"3px 0 3px 0\",\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-table-cell > *\", {\n\t\t\t\t\"vertical-align\": \"middle\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-content input[type=text], .am5-modal-content input[type=number], .am5-modal-content select\", {\n\t\t\t\t\"border\": \"1px solid \" + active,\n\t\t\t\t\"border-radius\": \"4px\",\n\t\t\t\t\"padding\": \"3px 5px\",\n\t\t\t\t\"margin\": \"2px\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-input-narrow\", {\n\t\t\t\t\"width\": \"50px\"\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-button\", {\n\t\t\t\t\"font-weight\": \"400\",\n\t\t\t\t\"color\": ic.get(\"secondaryButtonText\")!.toCSS(),\n\t\t\t\t\"line-height\": \"1.5\",\n\t\t\t\t\"text-align\": \"center\",\n\t\t\t\t\"text-decoration\": \"none\",\n\t\t\t\t\"vertical-align\": \"middle\",\n\t\t\t\t\"cursor\": \"pointer\",\n\t\t\t\t\"padding\": \"0.2em 0.8em\",\n\t\t\t\t\"font-size\": \"1em\",\n\t\t\t\t\"border-radius\": \"0.25em\",\n\t\t\t\t\"margin\": \"0 0.25em 0 0\",\n\t\t\t\t\"border\": \"1px solid \" + ic.get(\"secondaryButtonStroke\")!.toCSS(),\n\t\t\t\t\"background\": ic.get(\"secondaryButton\")!.toCSS()\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-button:hover\", {\n\t\t\t\t\"background\": ic.get(\"secondaryButtonHover\")!.toCSS()\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-button.am5-modal-primary\", {\n\t\t\t\t\"color\": ic.get(\"primaryButtonText\")!.toCSS(),\n\t\t\t\t\"border\": \"1px solid \" + ic.get(\"primaryButtonStroke\")!.toCSS(),\n\t\t\t\t\"background\": ic.get(\"primaryButton\")!.toCSS()\n\t\t\t}, root.nonce),\n\n\t\t\tnew StyleRule(element, \".am5-modal-button.am5-modal-primary:hover\", {\n\t\t\t\t\"background\": ic.get(\"primaryButtonHover\")!.toCSS()\n\t\t\t}, root.nonce),\n\n\t\t]);\n\n\t\trules = new CounterDisposer(() => {\n\t\t\trules = undefined;\n\t\t\tdisposer.dispose();\n\t\t});\n\t}\n\n\treturn rules.increment();\n}\n\n\nexport interface IModalSettings extends IEntitySettings {\n\n\t/**\n\t * HTML content of the modal.\n\t */\n\tcontent?: string;\n\n\t/**\n\t * When modal is open, all interactions for the underlying chart will be\n\t * disabled.\n\t *\n\t * @default true\n\t * @since 5.2.11\n\t */\n\tdeactivateRoot?: boolean;\n\n}\n\nexport interface IModalPrivate extends IEntityPrivate {\n\tcontainer: HTMLDivElement;\n\tcurtain: HTMLDivElement;\n\twrapper: HTMLDivElement;\n\tcontent: HTMLDivElement;\n}\n\nexport interface IModalEvents extends IEntityEvents {\n\t\"opened\": {}\n\t\"closed\": {}\n\t\"cancelled\": {}\n}\n\n/**\n * Used to display a modal dialog with HTML content.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/modal-popups/} for more info\n */\nexport class Modal extends Entity {\n\tpublic static className: string = \"Modal\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Modal.className]);\n\n\tdeclare public _settings: IModalSettings;\n\tdeclare public _privateSettings: IModalPrivate;\n\tdeclare public _events: IModalEvents;\n\n\t//protected _currentPass: number = 0;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because this will not have parents\n\t\tsuper._afterNewApplyThemes();\n\n\t\t// Defaults\n\t\tthis._setRawDefault(\"deactivateRoot\", true);\n\n\t\t// Load CSS\n\t\tmodalCSS($utils.getShadowRoot(this._root.dom), this._root);\n\n\t\t// Create elements\n\t\tconst container = document.createElement(\"div\");\n\t\tcontainer.className = \"am5-modal\";\n\t\tcontainer.style.display = \"none\";\n\t\tthis.root._inner.appendChild(container);\n\t\tthis.setPrivate(\"container\", container);\n\n\t\tconst curtain = document.createElement(\"div\");\n\t\tcurtain.className = \"am5-modal-curtain\";\n\t\tcontainer.appendChild(curtain);\n\t\tthis.setPrivate(\"curtain\", curtain);\n\n\t\tthis._disposers.push($utils.addEventListener(curtain, \"click\", () => {\n\t\t\tthis.cancel();\n\t\t}));\n\n\t\tconst wrapper = document.createElement(\"div\");\n\t\twrapper.className = \"am5-modal-wrapper\";\n\t\tcontainer.appendChild(wrapper);\n\t\tthis.setPrivate(\"wrapper\", wrapper);\n\n\t\tconst content = document.createElement(\"div\");\n\t\tcontent.className = \"am5-modal-content\";\n\t\twrapper.appendChild(content);\n\t\tthis.setPrivate(\"content\", content);\n\n\t\tconst html = this.get(\"content\");\n\t\tif (html) {\n\t\t\tcontent.innerHTML = html;\n\t\t}\n\n\t\t// Close on ESC\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tif (this.isOpen() && $utils.getEventKey(ev) == \"Escape\") {\n\t\t\t\t\tthis.cancel();\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"content\")) {\n\t\t\tthis.getPrivate(\"content\").innerHTML = this.get(\"content\", \"\");\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if modal is currently open.\n\t *\n\t * @return  Modal open?\n\t */\n\tpublic isOpen(): boolean {\n\t\treturn this.getPrivate(\"container\").style.display != \"none\";\n\t}\n\n\t/**\n\t * Opens modal.\n\t */\n\tpublic open(): void {\n\t\tthis.getPrivate(\"container\").style.display = \"block\";\n\t\tif (this.get(\"deactivateRoot\")) {\n\t\t\tthis.setTimeout(() => {\n\t\t\t\tthis._root._renderer.interactionsEnabled = false;\n\t\t\t}, 10);\n\t\t}\n\t\tthis.events.dispatch(\"opened\", {\n\t\t\ttype: \"opened\",\n\t\t\ttarget: this\n\t\t});\n\t}\n\n\t/**\n\t * Closes modal.\n\t */\n\tpublic close(): void {\n\t\tthis.getPrivate(\"container\").style.display = \"none\";\n\t\tif (this.get(\"deactivateRoot\")) {\n\t\t\tthis._root._renderer.interactionsEnabled = true;\n\t\t}\n\t\tthis.events.dispatch(\"closed\", {\n\t\t\ttype: \"closed\",\n\t\t\ttarget: this\n\t\t});\n\t}\n\n\t/**\n\t * Closes modal and invokes `cancelled` event.\n\t */\n\tpublic cancel(): void {\n\t\tthis.getPrivate(\"container\").style.display = \"none\";\n\t\tif (this.get(\"deactivateRoot\")) {\n\t\t\tthis._root._renderer.interactionsEnabled = true;\n\t\t}\n\t\tthis.events.dispatch(\"cancelled\", {\n\t\t\ttype: \"cancelled\",\n\t\t\ttarget: this\n\t\t});\n\t}\n\n\t/**\n\t * Disposes modal.\n\t */\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst container = this.getPrivate(\"container\");\n\t\tif (container.parentElement) {\n\t\t\tcontainer.parentElement.removeChild(container);\n\t\t}\n\t}\n}\n", "import { Entity, IEntitySettings, IEntityPrivate } from \"../../core/util/Entity\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport type { Series } from \"../../core/render/Series\";\n\nexport interface IBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Horizontal location within target element.\n\t *\n\t * 0 - left, 1 - right, or anything inbetweeen.\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location within target element.\n\t *\n\t * 0 - top, 1 - bottom, or anything inbetweeen.\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * If set to `true`, the bullet will redraw its `sprite` element whenever\n\t * anything in its parent series changes.\n\t *\n\t * @default false\n\t */\n\tdynamic?: boolean;\n\n\t/**\n\t * If set to `true`, the bullet will be automatically rotated to face\n\t * direction of line it is attached to.\n\t *\n\t * NOTE: Works only in  [[Flow]] and [[MapPointSeries]] (when [[MapPoint]] is\n\t * attached to a [[MapLine]]).\n\t *\n\t * @default false\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * If `autoRotate` is set to `true`, value of `autoRotateAngle` will be added\n\t * to the automatically-calculated angle.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * If a field will be set, the bullet will be located at exact value of that field, not paying atention to locationY/locationX. Works with XYSeries\tonly.\n\t * If `field` is set, bullet will be placed at the specific data value, ignoring\n\t * any `locationX` and `locationY` settings.\n\t *\n\t * **IMPORTANT: this setting works with [[XYSeries]] only.**\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#By_data_field} for more info\n\t * @since 5.6.0\n\t */\n\tfield?: \"open\" | \"high\" | \"low\" | \"value\";\n\n\t/**\n\t * If set, will stack bullets instead of overlapping them.\n\t *\n\t * * `\"up` - stacks bullets upwards.\n\t * * `\"down` - stacks bullets downwards.\n\t * * `\"auto` - stacks bullets in the direction that offers more space.\n\t * \n\t * **IMPORTANT: this setting works with [[XYSeries]] only.**\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Stacked_bullets} for more info\n\t * @since 5.6.0\n\t */\n\tstacked?: \"up\" | \"down\" | \"auto\";\n}\n\nexport interface IBulletPrivate extends IEntityPrivate {\n\thidden?: boolean;\n}\n\n/**\n * A universal placeholder for bullet elements.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n */\nexport class Bullet extends Entity {\n\tpublic static className: string = \"Bullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Bullet.className]);\n\n\tdeclare public _settings: IBulletSettings;\n\tdeclare public _privateSettings: IBulletPrivate;\n\n\t// used by MapPolygons where one data item can have multiple bullets of the same kind\n\tpublic _index?: number;\n\n\t/**\n\t * Target series object if it's a bullet for series.\n\t */\n\tpublic series: Series | undefined;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because bullet will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tconst sprite = this.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\n\t\t\tif (this.series) {\n\t\t\t\tthis.series._positionBullet(this);\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\n\nexport interface ICircleSettings extends IGraphicsSettings {\n\n\t/**\n\t * Circle radius in pixels.\n\t */\n\tradius?: number;\n\n}\n\nexport interface ICirclePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a circle.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Circle extends Graphics {\n\n\tdeclare public _settings: ICircleSettings;\n\tdeclare public _privateSettings: ICirclePrivate;\n\n\tpublic static className: string = \"Circle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Circle.className]);\n\n\tpublic _afterNew(){\n\t\tsuper._afterNew();\n\t\tthis._display.isMeasured = true;\n\t\tthis.setPrivateRaw(\"trustBounds\", true);\n\t}\t\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tthis._display.drawCircle(0, 0, Math.abs(this.get(\"radius\", 10)));\n\t\t}\n\t}\n}\n", "import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\r\nimport type { IPoint } from \"../util/IPoint\";\r\nimport * as $array from \"../util/Array\";\r\n\r\nimport type { Time } from \"../util/Animation\";\r\nimport type { Animation } from \"../util/Entity\";\r\n\r\nexport interface IPolygonSettings extends IGraphicsSettings {\r\n\r\n\t/**\r\n\t * An array of polygon corner coordinates.\r\n\t */\r\n\tpoints?: Array<IPoint>;\r\n\r\n\t/**\r\n\t * Corodinates.\r\n\t */\r\n\tcoordinates?: Array<Array<number>>;\r\n\r\n\t/**\r\n\t * Number of milliseconds to play morph animation.\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * Easing function to use for animations.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\r\n\t */\r\n\tanimationEasing?: (t: Time) => Time;\r\n\r\n}\r\n\r\nexport interface IPolygonPrivate extends IGraphicsPrivate {\r\n\tpoints?: Array<IPoint>;\r\n\r\n\tpreviousPoints?: Array<IPoint>;\r\n\r\n\tmorphProgress?: number;\r\n\r\n\tminX?: number;\r\n\r\n\tmaxX?: number;\r\n\r\n\tminY?: number;\r\n\r\n\tmaxY?: number;\r\n}\r\n\r\n/**\r\n * Draws a polygon.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/polygon/} for more info\r\n * @important\r\n * @since 5.4.0\r\n */\r\nexport class Polygon extends Graphics {\r\n\r\n\tdeclare public _settings: IPolygonSettings;\r\n\tdeclare public _privateSettings: IPolygonPrivate;\r\n\r\n\tpublic static className: string = \"Polygon\";\r\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Polygon.className]);\r\n\r\n\tpublic morphAnimation?: Animation<this[\"_privateSettings\"][\"morphProgress\"]>;\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\t\tif (this.isDirty(\"coordinates\")) {\r\n\t\t\tconst points: Array<IPoint> = [];\r\n\t\t\tconst coordinates = this.get(\"coordinates\");\r\n\t\t\tif (coordinates) {\r\n\t\t\t\t$array.each(coordinates, (coord) => {\r\n\t\t\t\t\tpoints.push({ x: coord[0], y: coord[1] });\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tthis.set(\"points\", points);\r\n\t\t}\r\n\t\tif (this.isPrivateDirty(\"points\")) {\r\n\t\t\tthis._clear = true;\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"points\")) {\r\n\t\t\tthis._clear = true;\r\n\r\n\t\t\tconst points = this.get(\"points\");\r\n\t\t\tconst prevPoints = this._prevSettings.points;\r\n\t\t\tif (prevPoints) {\r\n\t\t\t\tif (points) {\r\n\t\t\t\t\tlet copy = $array.copy(points);\r\n\t\t\t\t\tlet prevCopy = $array.copy(prevPoints);\r\n\t\t\t\t\tlet cl = copy.length;\r\n\t\t\t\t\tlet pl = prevCopy.length;\r\n\r\n\t\t\t\t\tif (cl > pl) {\r\n\t\t\t\t\t\tlet newCopy = $array.copy(copy);\r\n\t\t\t\t\t\tfor (let i = 0; i < cl; i++) {\r\n\t\t\t\t\t\t\tlet index = Math.floor(i / cl * pl);\r\n\t\t\t\t\t\t\tnewCopy[i] = { x: prevCopy[index].x, y: prevCopy[index].y };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tprevCopy = newCopy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pl > cl) {\r\n\t\t\t\t\t\tlet newCopy = $array.copy(prevCopy);\r\n\t\t\t\t\t\tfor (let i = 0; i < pl; i++) {\r\n\t\t\t\t\t\t\tlet index = Math.floor(i / pl * cl);\r\n\t\t\t\t\t\t\tnewCopy[i] = { x: copy[index].x, y: copy[index].y };\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcopy = newCopy;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setPrivateRaw(\"previousPoints\", prevCopy);\r\n\t\t\t\t\tthis.setPrivateRaw(\"points\", copy);\r\n\t\t\t\t\tthis.morphAnimation = this.animatePrivate({ key: \"morphProgress\", from: 0, to: 1, duration: this.get(\"animationDuration\", 0), easing: this.get(\"animationEasing\") });\r\n\t\t\t\t\t// solves no animated theme\r\n\t\t\t\t\tthis._root.events.once(\"frameended\", ()=>{\r\n\t\t\t\t\t\tthis._markDirtyPrivateKey(\"morphProgress\");\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.setPrivateRaw(\"previousPoints\", points);\r\n\t\t\t\tthis.setPrivateRaw(\"points\", points);\r\n\t\t\t}\r\n\t\t\tlet minX = Infinity;\r\n\t\t\tlet maxX = -Infinity;\r\n\t\t\tlet minY = Infinity;\r\n\t\t\tlet maxY = -Infinity;\r\n\r\n\t\t\tif (points) {\r\n\t\t\t\tfor (let i = 1, len = points.length; i < len; i++) {\r\n\t\t\t\t\tconst point = points[i];\r\n\t\t\t\t\tminX = Math.min(minX, point.x);\r\n\t\t\t\t\tmaxX = Math.max(maxX, point.x);\r\n\r\n\t\t\t\t\tminY = Math.min(minY, point.y);\r\n\t\t\t\t\tmaxY = Math.max(maxY, point.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setPrivate(\"minX\", minX);\r\n\t\t\tthis.setPrivate(\"maxX\", maxX);\r\n\t\t\tthis.setPrivate(\"minY\", minY);\r\n\t\t\tthis.setPrivate(\"maxY\", minY);\r\n\t\t}\r\n\r\n\r\n\r\n\t\tif (this.isPrivateDirty(\"morphProgress\")) {\r\n\t\t\tthis._clear = true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clear) {\r\n\t\t\tthis._draw();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _draw() {\r\n\t\tconst previousPoints = this.getPrivate(\"previousPoints\");\r\n\t\tconst points = this.getPrivate(\"points\");\r\n\t\tconst morphProgress = this.getPrivate(\"morphProgress\", 1);\r\n\r\n\t\tif (points && previousPoints) {\r\n\t\t\tconst first = points[0];\r\n\t\t\tconst prevFirst = previousPoints[0];\r\n\t\t\tif (first) {\r\n\t\t\t\tthis._display.moveTo(prevFirst.x + (first.x - prevFirst.x) * morphProgress, prevFirst.y + (first.y - prevFirst.y) * morphProgress);\r\n\t\t\t}\r\n\t\t\tfor (let i = 1, len = points.length; i < len; i++) {\r\n\t\t\t\tconst point = points[i];\r\n\t\t\t\tconst prevPoint = previousPoints[i];\r\n\t\t\t\tthis._display.lineTo(prevPoint.x + (point.x - prevPoint.x) * morphProgress, prevPoint.y + (point.y - prevPoint.y) * morphProgress);\r\n\t\t\t}\r\n\t\t\tthis._display.closePath();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateSize() {\r\n\t\tthis.markDirty()\r\n\t\tthis._clear = true;\r\n\t}\r\n}\r\n", "import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\r\n\r\nexport interface IEllipseSettings extends IGraphicsSettings {\r\n\r\n\t/**\r\n\t * The ellipse's major-axis radius. Must be non-negative.\r\n\t */\r\n\r\n\tradiusX: number\r\n\r\n\t/**\r\n\t * The ellipse's minor-axis radius. Must be non-negative.\r\n\t */\r\n\tradiusY: number\r\n}\r\n\r\nexport interface IEllipsePrivate extends IGraphicsPrivate {\r\n}\r\n\r\n/**\r\n * Draws a Ellipse.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Ellipse extends Graphics {\r\n\r\n\tdeclare public _settings: IEllipseSettings;\r\n\tdeclare public _privateSettings: IEllipsePrivate;\r\n\r\n\tpublic static className: string = \"Ellipse\";\r\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Ellipse.className]);\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"radiusX\") || this.isDirty(\"radiusY\") || this.isDirty(\"rotation\")) {\r\n\t\t\tthis._clear = true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clear) {\r\n\t\t\tthis._display.drawEllipse(0, 0, Math.abs(this.get(\"radiusX\")), Math.abs(this.get(\"radiusY\")));\r\n\t\t}\r\n\t}\r\n}\r\n", "import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\r\nimport type { Percent } from \"../../core/util/Percent\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\n\r\nexport interface IStarSettings extends IGraphicsSettings {\r\n\r\n\t/**\r\n\t * Star's radius in pixels.\r\n\t */\r\n\tradius?: number;\r\n\r\n\t/**\r\n\t * Star's inner radius in pixels.\r\n\t */\r\n\tinnerRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * Number of spikes\r\n\t */\r\n\tspikes?: number;\r\n\r\n}\r\n\r\nexport interface IStarPrivate extends IGraphicsPrivate {\r\n}\r\n\r\n/**\r\n * Draws a Star.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Star extends Graphics {\r\n\r\n\tdeclare public _settings: IStarSettings;\r\n\tdeclare public _privateSettings: IStarPrivate;\r\n\r\n\tpublic static className: string = \"Star\";\r\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Star.className]);\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"spikes\")) {\r\n\t\t\tthis._clear = true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clear) {\r\n\t\t\tconst display = this._display;\r\n\t\t\tconst r = this.get(\"radius\", 0);\r\n\t\t\tconst ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\r\n\t\t\tconst spikes = this.get(\"spikes\", 0);\r\n\t\t\tconst step = Math.PI / spikes;\r\n\t\t\tlet angle = Math.PI / 2 * 3;\r\n\r\n\t\t\tdisplay.moveTo(0, - r)\r\n\r\n\t\t\tfor (let i = 0; i < spikes; i++) {\r\n\t\t\t\tdisplay.lineTo(Math.cos(angle) * r, Math.sin(angle) * r)\r\n\t\t\t\tangle += step\r\n\r\n\t\t\t\tdisplay.lineTo(Math.cos(angle) * ir, Math.sin(angle) * ir)\r\n\t\t\t\tangle += step\r\n\t\t\t}\r\n\t\t\tdisplay.lineTo(0, -r)\r\n\t\t\tdisplay.closePath();\r\n\t\t}\r\n\t}\r\n}\r\n", "import type { IBounds } from \"../../util/IBounds\"\nimport type { IGradient, IGradientStop } from \"../backend/Renderer\";\nimport type { Sprite } from \"../Sprite\";\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../../util/Entity\"\n\n\nexport interface IGradientSettings extends IEntitySettings {\n\n\t/**\n\t * A list of color steps for the gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n\t */\n\tstops?: Array<IGradientStop>;\n\n\t/**\n\t * Gradient target.\n\t */\n\ttarget?: Sprite;\n\n}\n\nexport interface IGradientPrivate extends IEntityPrivate {\n}\n\n/**\n * Base class for gradients.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport abstract class Gradient extends Entity {\n\n\tdeclare public _settings: IGradientSettings;\n\tdeclare public _privateSettings: IGradientPrivate;\n\n\tpublic static className: string = \"Gradient\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Gradient.className]);\n\n\tprotected _afterNew() {\n\t\t// Applying themes because gradient will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getFill(_target: Sprite): IGradient {\n\t\treturn {\n\t\t\taddColorStop: (_offset: number, _color: string) => { }\n\t\t};\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\t//if (this.isDirty(\"target\") && this.get(\"target\")) {\n\t\t//\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\n\n\t\t//\t});\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getBounds(target: Sprite): IBounds {\n\t\tconst gradientTarget = this.get(\"target\");\n\t\tif (gradientTarget) {\n\t\t\tlet bounds = gradientTarget.globalBounds();\n\n\t\t\tconst p0 = target.toLocal({ x: bounds.left, y: bounds.top });\n\t\t\tconst p1 = target.toLocal({ x: bounds.right, y: bounds.top });\n\t\t\tconst p2 = target.toLocal({ x: bounds.right, y: bounds.bottom });\n\t\t\tconst p3 = target.toLocal({ x: bounds.left, y: bounds.bottom });\n\n\t\t\treturn {\n\t\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t\t}\n\t\t}\n\t\treturn target._display.getLocalBounds();\n\t}\n\n}\n", "import type { IGradient } from \"../backend/Renderer\";\nimport type { Sprite } from \"../Sprite\";\n\nimport { Gradient, IGradientSettings, IGradientPrivate } from \"./Gradient\";\nimport { Color } from \"../../util/Color\";\n\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\n\n\nexport interface ILinearGradientSettings extends IGradientSettings {\n\n\t/**\n\t * Gradient rotation, in degrees.\n\t *\n\t * @default 90\n\t */\n\trotation?: number;\n\n}\n\nexport interface ILinearGradientPrivate extends IGradientPrivate {\n}\n\n/**\n * Linear gradient.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport class LinearGradient extends Gradient {\n\n\tdeclare public _settings: ILinearGradientSettings;\n\tdeclare public _privateSettings: ILinearGradientPrivate;\n\n\tpublic static className: string = \"LinearGradient\";\n\tpublic static classNames: Array<string> = Gradient.classNames.concat([LinearGradient.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getFill(target: Sprite): IGradient {\n\t\tconst rotation = this.get(\"rotation\", 0);\n\t\tlet bounds = this.getBounds(target);\n\n\t\tlet l = bounds.left || 0;\n\t\tlet r = bounds.right || 0;\n\t\tlet t = bounds.top || 0;\n\t\tlet b = bounds.bottom || 0;\n\n\t\tlet cos = $math.cos(rotation);\n\t\tlet sin = $math.sin(rotation);\n\n\t\tlet w = cos * (r - l);\n\t\tlet h = sin * (b - t);\n\n\t\tif (w == 0) {\n\t\t\tw = 1;\n\t\t}\n\n\t\tif (h == 0) {\n\t\t\th = 1;\n\t\t}\n\n\t\tlet longer = Math.max(w, h);\n\n\t\tconst gradient = this._root._renderer.createLinearGradient(\n\t\t\tl,\n\t\t\tt,\n\t\t\tl + longer * cos,\n\t\t\tt + longer * sin\n\t\t);\n\n\t\tconst stops = this.get(\"stops\")!;\n\t\tif (stops) {\n\t\t\tlet i = 0;\n\t\t\t$array.each(stops, (stop) => {\n\n\t\t\t\tlet offset = stop.offset;\n\n\t\t\t\tif (!$type.isNumber(offset)) {\n\t\t\t\t\toffset = i / (stops.length - 1);\n\t\t\t\t}\n\n\t\t\t\tlet opacity = stop.opacity;\n\n\t\t\t\tif (!$type.isNumber(opacity)) {\n\t\t\t\t\topacity = 1;\n\t\t\t\t}\n\n\t\t\t\tlet color = stop.color;\n\n\t\t\t\tif (color) {\n\n\t\t\t\t\tconst lighten = stop.lighten;\n\t\t\t\t\tif (lighten) {\n\t\t\t\t\t\tcolor = Color.lighten(color, lighten)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst brighten = stop.brighten;\n\t\t\t\t\tif (brighten) {\n\t\t\t\t\t\tcolor = Color.brighten(color, brighten)\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t})\n\t\t}\n\t\treturn gradient;\n\t}\n}\n", "import type { IPoint } from \"../../core/util/IPoint\";\n\nimport { Container, IContainerSettings, IContainerPrivate } from \"./Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { Tooltip } from \"../../core/render/Tooltip\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\n\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IHeatLegendSettings extends IContainerSettings {\n\n\t/**\n\t * Starting (lowest value) color.\n\t */\n\tstartColor: Color;\n\n\t/**\n\t * Ending (highest value) color.\n\t */\n\tendColor: Color;\n\n\t/**\n\t * Start (lowest) value.\n\t */\n\tstartValue?: number;\n\n\t/**\n\t * End (highest) value.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * Text for start label.\n\t */\n\tstartText?: string;\n\n\t/**\n\t * Text for end label.\n\t */\n\tendText?: string;\n\n\t/**\n\t * Number of steps\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/#Gradient_or_steps} for more info\n\t */\n\tstepCount?: number;\n\n\t/**\n\t * Orientation of the heat legend.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/#Orientation} for more info\n\t */\n\torientation: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IHeatLegendPrivate extends IContainerPrivate {\n}\n\n/**\n * Heat legend.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\n */\nexport class HeatLegend extends Container {\n\n\t/**\n\t * A [[Container]] that all labels are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that all markers are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly markerContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A start [[Label]].\n\t *\n\t * @default Label.new()\n\t */\n\tpublic readonly startLabel: Label = this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"start\"] }));\n\n\t/**\n\t * An end [[Label]].\n\t *\n\t * @default Label.new()\n\t */\n\tpublic readonly endLabel: Label = this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"end\"] }));\n\n\tpublic static className: string = \"HeatLegend\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HeatLegend.className]);\n\n\tdeclare public _settings: IHeatLegendSettings;\n\tdeclare public _privateSettings: IHeatLegendPrivate;\n\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\n\t\tsuper._afterNew();\n\t\tthis.set(\"tooltip\", Tooltip.new(this._root, {\n\t\t\tthemeTags: [\"heatlegend\"]\n\t\t}));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarker(): RoundedRectangle {\n\t\tconst marker = this.markers.make();\n\t\tmarker.states.create(\"disabled\", {});\n\t\treturn marker;\n\t}\n\n\t/**\n\t * List of rectangle elements used for default legend markers.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly markers: ListTemplate<RoundedRectangle> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [this.get(\"orientation\"), \"heatlegend\", \"marker\"])\n\t\t}, [this.markers.template])\n\t));\n\n\n\t/**\n\t * Moves and shows tooltip at specific value.\n\t *\n\t * Can also specify optional text to show in tooltip, as well as the color.\n\t *\n\t * @param  value  Value\n\t * @param  text   Text\n\t * @param  color  Color\n\t */\n\tpublic showValue(value: number, text?: string, color?: Color) {\n\t\tconst tooltip = this.getTooltip();\n\t\tif (tooltip && $type.isNumber(value)) {\n\n\t\t\tconst startValue = this.get(\"startValue\", 0);\n\t\t\tconst endValue = this.get(\"endValue\", 1);\n\n\t\t\tlet c = (value - startValue) / (endValue - startValue);\n\n\t\t\tif(c == Infinity || c == -Infinity || isNaN(c)) {\n\t\t\t\tc = 0.5;\n\t\t\t}\n\n\t\t\tconst startColor = this.get(\"startColor\")!;\n\t\t\tconst endColor = this.get(\"endColor\")!;\n\n\t\t\tif (!text) {\n\t\t\t\ttext = this.getNumberFormatter().format(value);\n\t\t\t}\n\n\t\t\tif (!color) {\n\t\t\t\tcolor = Color.interpolate(c, startColor, endColor);\n\t\t\t}\n\n\t\t\ttooltip.label.set(\"text\", text);\n\t\t\tlet p:IPoint;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tp = this.markerContainer.toGlobal({ x: 0, y: this.innerHeight() * (1 - c) });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp = this.markerContainer.toGlobal({ x: this.innerWidth() * c, y: 0 });\n\t\t\t}\n\n\t\t\tlet background = tooltip.get(\"background\");\n\t\t\tif (background) {\n\t\t\t\tbackground.set(\"fill\", color)\n\t\t\t}\n\t\t\ttooltip.set(\"pointTo\", p);\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst labelContainer = this.labelContainer;\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst startLabel = this.startLabel;\n\t\tconst endLabel = this.endLabel;\n\t\tconst tooltip = this.getTooltip();\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tif (orientation == \"vertical\") {\n\t\t\t\tthis.markerContainer.setAll({ layout: this._root.verticalLayout, height: p100 });\n\t\t\t\tthis.set(\"layout\", this._root.horizontalLayout);\n\t\t\t\tstartLabel.setAll({ y: p100, x: undefined, centerY: p100, centerX: p100 });\n\t\t\t\tendLabel.setAll({ y: 0, x: undefined, centerY: 0, centerX: p100 });\n\t\t\t\tlabelContainer.setAll({ height: p100, width: undefined });\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip.set(\"pointerOrientation\", \"horizontal\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.markerContainer.setAll({ layout: this._root.horizontalLayout, width: p100 });\n\t\t\t\tthis.set(\"layout\", this._root.verticalLayout);\n\t\t\t\tstartLabel.setAll({ x: 0, y: undefined, centerX: 0, centerY: 0 });\n\t\t\t\tendLabel.setAll({ x: p100, y: undefined, centerX: p100, centerY: 0 });\n\t\t\t\tlabelContainer.setAll({ width: p100, height: undefined });\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip.set(\"pointerOrientation\", \"vertical\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stepCount\")) {\n\t\t\tconst stepCount = this.get(\"stepCount\", 1);\n\t\t\tconst startColor = this.get(\"startColor\")!;\n\t\t\tconst endColor = this.get(\"endColor\")!;\n\t\t\tthis.markerContainer.children.clear();\n\t\t\tif (stepCount > 1) {\n\t\t\t\tfor (let i = 0; i < stepCount; i++) {\n\t\t\t\t\tconst marker = this.makeMarker();\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tthis.markerContainer.children.moveValue(marker, 0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.markerContainer.children.push(marker);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (startColor && endColor) {\n\t\t\t\t\t\tmarker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (stepCount == 1) {\n\t\t\t\tconst marker = this.makeMarker();\n\t\t\t\tthis.markerContainer.children.push(marker);\n\t\t\t\tconst gradient = LinearGradient.new(this._root, { stops: [{ color: startColor }, { color: endColor }] });\n\n\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\tgradient.set(\"rotation\", 90);\n\t\t\t\t\tlet stops = gradient.get(\"stops\");\n\t\t\t\t\tif (stops) {\n\t\t\t\t\t\tstops.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tgradient.set(\"rotation\", 0);\n\t\t\t\t}\n\t\t\t\tif (startColor && endColor) {\n\t\t\t\t\tmarker.set(\"fillGradient\", gradient);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\n\t\t\tstartLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\n\t\t}\n\n\t\tif (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\n\t\t\tendLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))))\n\t\t}\n\t}\n}\n", "import { Label, ILabelPrivate, ILabelSettings, ILabelEvents } from \"./Label\";\nimport { Container } from \"./Container\";\nimport { RoundedRectangle } from \"./RoundedRectangle\";\nimport { Percent } from \"../util/Percent\"\nimport { color } from \"../util/Color\";\n\n\nimport * as $utils from \"../util/Utils\"\nimport * as $type from \"../util/Type\"\nimport * as $array from \"../util/Array\"\n\nexport interface IEditableLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Start editing on click (`\"click\"`; default) or double-click ('\"dblclick\"').\n\t *\n\t * All available options:\n\t *\n\t * *`\"click\"` (default)\n\t * *`\"dblclick\"`\n\t * *`\"rightclick\"`\n\t * *`\"middleclick\"`\n\t * *`\"none\"`\n\t *\n\t * @default \"click\"\n\t */\n\teditOn?: \"click\" | \"dblclick\" | \"rightclick\" | \"middleclick\" | \"none\";\n\n\t/**\n\t * Allow multiple lines (`true` - dfault) or no (`false`).\n\t *\n\t * @default true\n\t * @since 5.9.6\n\t */\n\tmultiLine?: boolean;\n\n}\n\nexport interface IEditableLabelPrivate extends ILabelPrivate {\n\tinput: Container;\n\ttextarea: HTMLTextAreaElement;\n}\n\nexport interface IEditableLabelEvents extends ILabelEvents {\n\tinited: {};\n}\n\n/**\n * Editable label.\n *\n * @since 5.9.5\n */\nexport class EditableLabel extends Label {\n\n\tdeclare public _settings: IEditableLabelSettings;\n\tdeclare public _privateSettings: IEditableLabelPrivate;\n\tdeclare public _events: IEditableLabelEvents;\n\n\tpublic static className: string = \"EditableLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([EditableLabel.className]);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tconst input = this.children.push(Container.new(this._root, {\n\t\t\thtml: \"<textarea class=\\\"am5-editable-label\\\"></textarea>\",\n\t\t\tisMeasured: false\n\t\t}));\n\n\t\tinput.hide();\n\n\t\tconst editOn: any = this.get(\"editOn\", \"click\");\n\n\t\tif (editOn != \"none\") {\n\t\t\tinput.events.on(editOn, (_ev) => {\n\t\t\t\t// this is here just to make it interactive\n\t\t\t});\n\n\t\t\tthis.events.on(editOn, (_ev) => {\n\t\t\t\tthis.set(\"active\", true);\n\t\t\t});\n\t\t}\n\n\t\tthis.setPrivate(\"input\", input);\n\n\t\t// Set background\n\t\tlet background = this.get(\"background\");\n\n\t\tif (!background) {\n\t\t\tbackground = this.set(\"background\", RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: [\"editablelabel\", \"background\"]\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tbackground.set(\"themeTags\", [\"editablelabel\", \"background\"]);\n\t\t}\n\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tthis._maybeInitTextarea();\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"active\")) {\n\n\t\t\tconst editing = this.get(\"active\", false);\n\t\t\tif (editing) {\n\t\t\t\tthis._startEditing();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._stopEditing();\n\t\t\t}\n\n\t\t\tconst bg = this.get(\"background\");\n\t\t\tif (bg) {\n\t\t\t\tbg.set(\"active\", editing);\n\t\t\t}\n\t\t};\n\n\t\tthis._syncText();\n\t\tthis._syncStyle();\n\t}\n\n\tprotected _maybeInitTextarea() {\n\t\tif (!this._isInited()) {\n\t\t\tconst input = this.getPrivate(\"input\");\n\t\t\tif (input && input.getPrivate(\"htmlElement\")) {\n\t\t\t\tconst el = input.getPrivate(\"htmlElement\")!;\n\t\t\t\tconst textarea = el.querySelector(\".am5-editable-label\") as HTMLTextAreaElement;\n\t\t\t\tif (textarea) {\n\t\t\t\t\tthis.setPrivate(\"textarea\", textarea as HTMLTextAreaElement);\n\n\t\t\t\t\t// Resize textarea on keypress\n\t\t\t\t\ttextarea.addEventListener(\"input\", _ev => {\n\t\t\t\t\t\tif (this.get(\"multiLine\") === false) {\n\t\t\t\t\t\t\t// replace line breaks with spaces for single-line labels\n\t\t\t\t\t\t\ttextarea.value = textarea.value.replace(/\\n/g, \" \");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.set(\"text\", textarea.value);\n\t\t\t\t\t\tthis._syncStyle();\n\t\t\t\t\t});\n\n\t\t\t\t\t// Finish editing on blur\n\t\t\t\t\ttextarea.addEventListener(\"blur\", _ev => this.set(\"active\", false));\n\n\t\t\t\t\t// Finish editing on ESC press\n\t\t\t\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\t\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\t\t\t\tif ($utils.getEventKey(ev) == \"Escape\") {\n\t\t\t\t\t\t\t\tthis.set(\"active\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t}\n\n\t\t\t\t\t// Intercept ENTER if necessary\n\t\t\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\t\t\tif ($utils.getEventKey(ev) == \"Enter\" && this.get(\"multiLine\") === false) {\n\t\t\t\t\t\t\t// Single-line label, save instead of breaking into new line\n\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t\tthis.set(\"active\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\n\t\t\t\t\tthis.events.dispatch(\"inited\", {\n\t\t\t\t\t\ttype: \"inited\",\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _isInited(): boolean {\n\t\treturn this.getPrivate(\"textarea\") ? true : false;\n\t}\n\n\tprotected _startEditing() {\n\t\tif (!this._isInited()) {\n\t\t\tthis.events.once(\"inited\", () => {\n\t\t\t\tthis._startEditing();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis._text.set(\"opacity\", 0);\n\t\tconst input = this.getPrivate(\"input\");\n\t\tconst textarea = this.getPrivate(\"textarea\");\n\t\tif (textarea) {\n\t\t\tif (this.get(\"text\", \"\") == \"\") {\n\t\t\t\tthis.set(\"text\", \" \");\n\t\t\t}\n\t\t\tinput.show(0);\n\t\t\tthis.setTimeout(() => {\n\t\t\t\t// size textarea to fit its actual content\n\t\t\t\tthis._syncStyle();\n\t\t\t\ttextarea.focus();\n\t\t\t}, 100);\n\t\t}\n\t}\n\n\tprotected _stopEditing() {\n\t\tif (!this._isInited()) {\n\t\t\tthis.events.once(\"inited\", () => {\n\t\t\t\tthis._stopEditing();\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst input = this.getPrivate(\"input\");\n\t\tconst textarea = this.getPrivate(\"textarea\");\n\t\tif (textarea) {\n\t\t\tthis.set(\"text\", textarea.value);\n\t\t\tinput.hide(0);\n\t\t\tthis._text.set(\"opacity\", 1);\n\t\t}\n\t}\n\n\tprotected _syncStyle() {\n\t\tconst input = this.getPrivate(\"input\");\n\t\tconst textarea = this.getPrivate(\"textarea\");\n\t\tif (textarea) {\n\t\t\t// Set up HTML\n\t\t\tconst el = input.getPrivate(\"htmlElement\")!;\n\n\t\t\t// Reset all styles\n\t\t\tconst computedStyles = window.getComputedStyle(textarea);\n\t\t\t$array.each(computedStyles, (style: any) => {\n\t\t\t\ttextarea.style[style] = \"initial\";\n\t\t\t});\n\n\t\t\t// Remove textarea attributes\n\t\t\ttextarea.style.color = this.get(\"fill\", color(0x000000)).toCSS(this.get(\"fillOpacity\", 1));\n\t\t\ttextarea.style.backgroundColor = \"rgba(0, 0, 0, 0)\";\n\t\t\ttextarea.style.border = \"none\";\n\t\t\ttextarea.style.outline = \"none\";\n\t\t\ttextarea.style.padding = \"0\";\n\n\t\t\t// Wrapping\n\t\t\ttextarea.wrap = \"off\";\n\t\t\ttextarea.style.resize = \"none\";\n\n\t\t\t// Place carret under mouse cursor\n\t\t\t// @todo\n\n\t\t\t// Size\n\t\t\ttextarea.style.overflow = \"hidden\";\n\t\t\tconst maxWidth = this.get(\"maxWidth\", 0) - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0);\n\t\t\tif (maxWidth > 0) {\n\t\t\t\ttextarea.style.maxWidth = maxWidth + \"px\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// The actual minWidth will be set on frameend\n\t\t\t\ttextarea.style.minWidth = \"\";\n\t\t\t}\n\n\t\t\ttextarea.style.height = \"auto\";\n\t\t\ttextarea.style.minHeight = textarea.scrollHeight + \"px\";\n\n\t\t\t// If width is explicitly set on a label, use it for textarea\n\t\t\tif (this.get(\"width\")) {\n\t\t\t\ttextarea.style.width = (this.width()  - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0)) + \"px\";\n\t\t\t\ttextarea.style.minWidth = \"\";\n\t\t\t}\n\n\t\t\t// Line height\n\t\t\tconst lineHeight = this.get(\"lineHeight\");\n\t\t\tif (!lineHeight) {\n\t\t\t\ttextarea.style.lineHeight = \"1.2\";\n\t\t\t}\n\t\t\telse if (lineHeight instanceof Percent) {\n\t\t\t\ttextarea.style.lineHeight = lineHeight.value + \"\";\n\t\t\t}\n\t\t\telse if ($type.isNumber(lineHeight)) {\n\t\t\t\ttextarea.style.lineHeight = lineHeight + \"\";\n\t\t\t}\n\n\t\t\t// Font stuff\n\t\t\tlet fontFamily: any = this.get(\"fontFamily\");\n\t\t\tif (!fontFamily) {\n\t\t\t\tfontFamily = getComputedStyle(input.getPrivate(\"htmlElement\")!, \"font-family\").getPropertyValue(\"font-family\");\n\t\t\t}\n\t\t\ttextarea.style.fontFamily = fontFamily;\n\n\t\t\tlet fontSize: any = this.get(\"fontSize\");\n\t\t\tif (!fontSize) {\n\t\t\t\tfontSize = getComputedStyle(input.getPrivate(\"htmlElement\")!, \"font-size\").getPropertyValue(\"font-size\");\n\t\t\t}\n\t\t\telse if ($type.isNumber(fontSize)) {\n\t\t\t\tfontSize = fontSize + \"px\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfontSize = fontSize;\n\t\t\t}\n\t\t\ttextarea.style.fontSize = fontSize;\n\n\t\t\tlet fontWeight: any = this.get(\"fontWeight\");\n\t\t\tif (!fontWeight) {\n\t\t\t\tfontWeight = getComputedStyle(input.getPrivate(\"htmlElement\")!, \"font-weight\").getPropertyValue(\"font-weight\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfontWeight = fontWeight;\n\t\t\t}\n\t\t\ttextarea.style.fontWeight = fontWeight;\n\n\t\t\tlet fontStyle: any = this.get(\"fontStyle\");\n\t\t\tif (!fontStyle) {\n\t\t\t\tfontStyle = getComputedStyle(input.getPrivate(\"htmlElement\")!, \"font-style\").getPropertyValue(\"font-style\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfontStyle = fontStyle;\n\t\t\t}\n\t\t\ttextarea.style.fontStyle = fontStyle;\n\n\t\t\tconst oversizeBehavior = this.get(\"oversizedBehavior\");\n\t\t\tif (oversizeBehavior == \"wrap\") {\n\t\t\t\ttextarea.style.whiteSpace = \"pre-wrap\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttextarea.style.whiteSpace = \"nowrap\";\n\t\t\t}\n\n\t\t\t// Adjust textarea postion based on textAlign setting\n\t\t\tthis._root.events.on(\"frameended\", () => {\n\n\t\t\t\tif (textarea.style.minWidth == \"\") {\n\t\t\t\t\ttextarea.style.minWidth = (textarea.scrollWidth + 20) + \"px\";\n\t\t\t\t}\n\n\t\t\t\tconst textAlign = this.get(\"textAlign\", \"start\");\n\t\t\t\tif (textAlign == \"center\") {\n\t\t\t\t\ttextarea.style.textAlign = \"center\";\n\t\t\t\t\tif (!el.style.transform.match(/translateX/) && !this.get(\"width\")) {\n\t\t\t\t\t\tel.style.transform += \" translateX(-50%)\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (textAlign == \"end\") {\n\t\t\t\t\ttextarea.style.textAlign = \"right\";\n\t\t\t\t\tif (!el.style.transform.match(/translateX/) && !this.get(\"width\")) {\n\t\t\t\t\t\tel.style.transform += \" translateX(-100%)\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttextarea.style.textAlign = textAlign;\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\tprotected _syncText() {\n\t\tconst textarea = this.getPrivate(\"textarea\");\n\t\tlet text = this.get(\"text\", \"\");\n\t\tif (text == \" \") {\n\t\t\ttext = \"\";\n\t\t}\n\t\tif (textarea) {\n\t\t\ttextarea.value = text;\n\t\t}\n\t}\n\n}", "import type { DataItem } from \"../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"./Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { Entity, IEntitySettings } from \"../../core/util/Entity\";\nimport type { Color } from \"../../core/util/Color\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface ILegendDataItem extends ISeriesDataItem {\n\n\t/**\n\t * [[Container]] element holding all other legend item elements, labels,\n\t * markers, etc.\n\t */\n\titemContainer: Container;\n\n\t/**\n\t * Marker element.\n\t */\n\tmarker: Container;\n\n\t/**\n\t * Marker rectangle element.\n\t */\n\tmarkerRectangle: RoundedRectangle;\n\n\t/**\n\t * Label element.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Value label element.\n\t */\n\tvalueLabel: Label;\n\n\t/**\n\t * Marker fill color.\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Marker stroke (outline) color.\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Name of the legend item.\n\t */\n\tname?: string;\n\n}\n\nexport interface ILegendItemSettings extends IEntitySettings {\n\tvisible?: boolean;\n}\n\n/**\n * @ignore\n */\nexport interface ILegendItem extends Entity {\n\t_settings: ILegendItemSettings;\n\tisHidden?: () => boolean;\n\tshow?: () => void;\n\thide?: () => void;\n\tcreateLegendMarker?: () => {}\n\tcomponent?: Series;\n\tupdateLegendValue?: () => {}\n\t// how to define that properties of dataItem should have legendDataItem?\n}\n\n//type ILegendDataItemSettings = { [K in keyof ILegendDataItem]?: string; };\n\nexport interface ILegendSettings extends ISeriesSettings {\n\n\t/**\n\t * If set to `true` the legend will not try to mimic appearance of the actual\n\t * item but rather show default square marker.\n\t *\n\t * @default false\n\t */\n\tuseDefaultMarker?: boolean;\n\n\t/**\n\t * A key to look up in data for a name of the data item.\n\t *\n\t */\n\tnameField?: string;\n\n\t/**\n\t * A key to look up in data for a fill of the data item.\n\t *\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A key to look up in data for a stroke of the data item.\n\t *\n\t */\n\tstrokeField?: string;\n\n\t/**\n\t * Which legend item element will be clickable to toggle related chart item:\n\t * * `\"itemContainer\"` - the whole legend item (default).\n\t * * `\"marker\"` - legend item marker.\n\t * * `\"none\"` - disables toggling of legend item.\n\t *\n\t * @default \"itemContainer\"\n\t * @since 5.0.13\n\t */\n\tclickTarget?: \"itemContainer\" | \"marker\" | \"none\"\n\n}\n\nexport interface ILegendPrivate extends ISeriesPrivate {\n}\n\nexport interface ILegendEvents extends ISeriesEvents {\n\n}\n\n/**\n * A universal legend control.\n *\n * @important\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\n */\nexport class Legend extends Series {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\n\t\tthis.fields.push(\"name\", \"stroke\", \"fill\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"Legend\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Legend.className]);\n\n\tdeclare public _settings: ILegendSettings;\n\tdeclare public _privateSettings: ILegendPrivate;\n\tdeclare public _dataItemSettings: ILegendDataItem;\n\tdeclare public _events: ILegendEvents;\n\n\t/**\n\t * List of all [[Container]] elements for legend items.\n\t *\n\t * @default new ListTemplate<Container>\n\t */\n\tpublic readonly itemContainers: ListTemplate<Container> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Container._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\n\t\t\tthemeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\n\t\t\t\tthemeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\n\t\t\t})\n\t\t}, [this.itemContainers.template])\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeItemContainer(dataItem: DataItem<this[\"_dataItemSettings\"]>): Container {\n\t\tconst itemContainer = this.children.push(this.itemContainers.make());\n\t\titemContainer._setDataItem(dataItem);\n\t\tthis.itemContainers.push(itemContainer);\n\t\titemContainer.states.create(\"disabled\", {});\n\t\treturn itemContainer;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarker(): Container {\n\t\tconst marker = this.markers.make();\n\t\tthis.markers.push(marker);\n\t\tmarker.states.create(\"disabled\", {});\n\t\treturn marker;\n\t}\n\n\t/**\n\t * List of legend marker elements.\n\t *\n\t * @default new ListTemplate<Container>\n\t */\n\tpublic readonly markers: ListTemplate<Container> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Container._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\n\t\t}, [this.markers.template])\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel.states.create(\"disabled\", {});\n\t\treturn label;\n\t}\n\n\t/**\n\t * List of legend label elements.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\n\t\t}, [this.labels.template])\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeValueLabel(): Label {\n\t\tconst valueLabel = this.valueLabels.make();\n\t\tvalueLabel.states.create(\"disabled\", {});\n\t\treturn valueLabel;\n\t}\n\n\t/**\n\t * List of legend value label elements.\n\t *\n\t * @default new ListTemplate<label>\n\t */\n\tpublic readonly valueLabels: ListTemplate<Label> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\n\t\t}, [this.valueLabels.template])\n\t));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarkerRectangle(): RoundedRectangle {\n\t\tconst markerRectangle = this.markerRectangles.make();\n\t\tmarkerRectangle.states.create(\"disabled\", {});\n\t\treturn markerRectangle;\n\t}\n\n\t/**\n\t * List of rectangle elements used for default legend markers.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly markerRectangles: ListTemplate<RoundedRectangle> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\n\t\t}, [this.markerRectangles.template])\n\t));\n\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst itemContainer = this.makeItemContainer(dataItem);\n\n\t\tconst nameField = this.get(\"nameField\");\n\t\tconst fillField = this.get(\"fillField\");\n\t\tconst strokeField = this.get(\"strokeField\");\n\n\t\tif (itemContainer) {\n\t\t\tconst clickTarget = this.get(\"clickTarget\", \"itemContainer\");\n\n\t\t\tconst item = dataItem.dataContext as ILegendItem;\n\n\t\t\tif (item && item.set) {\n\t\t\t\titem.set(<any>\"legendDataItem\", dataItem);\n\t\t\t}\n\n\t\t\titemContainer._setDataItem(dataItem);\n\t\t\tdataItem.set(\"itemContainer\", itemContainer);\n\n\t\t\tconst marker = this.makeMarker();\n\t\t\tif (marker) {\n\t\t\t\titemContainer.children.push(marker);\n\t\t\t\tmarker._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"marker\", marker);\n\n\t\t\t\tconst useDefaultMarker = this.get(\"useDefaultMarker\");\n\n\t\t\t\tconst markerRectangle = marker.children.push(this.makeMarkerRectangle());\n\n\t\t\t\tlet fill = dataItem.get(\"fill\");\n\t\t\t\tlet stroke = dataItem.get(\"stroke\");\n\n\t\t\t\tdataItem.set(\"markerRectangle\", markerRectangle);\n\n\t\t\t\tif (item && item.get) {\n\t\t\t\t\tfill = item.get(fillField as any, fill);\n\t\t\t\t\tstroke = item.get(strokeField as any, stroke);\n\t\t\t\t}\n\n\t\t\t\tif (!stroke) {\n\t\t\t\t\tstroke = fill;\n\t\t\t\t}\n\n\t\t\t\tif (!useDefaultMarker) {\n\t\t\t\t\tif (item && item.createLegendMarker) {\n\t\t\t\t\t\titem.createLegendMarker();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (item.on) {\n\t\t\t\t\t\titem.on(fillField as any, () => {\n\t\t\t\t\t\t\tmarkerRectangle.set(\"fill\", item.get(fillField as any));\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\titem.on(strokeField as any, () => {\n\t\t\t\t\t\t\tmarkerRectangle.set(\"stroke\", item.get(strokeField as any));\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmarkerRectangle.setAll({ fill, stroke });\n\n\t\t\t\t// this solves if template field is set on slice\n\t\t\t\tconst component = item.component;\n\t\t\t\tif (component && component.updateLegendMarker) {\n\t\t\t\t\tcomponent.updateLegendMarker(item as any);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst label = this.makeLabel();\n\n\t\t\tif (label) {\n\t\t\t\titemContainer.children.push(label);\n\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"label\", label);\n\n\t\t\t\tlabel.text.on(\"text\", () => {\n\t\t\t\t\titemContainer.setRaw(\"ariaLabel\", label.text._getText() + (this.get(\"clickTarget\") !== \"none\" ? \"; \" + this._t(\"Press ENTER to toggle\") : \"\"));\n\t\t\t\t\titemContainer.markDirtyAccessibility();\n\t\t\t\t});\n\n\t\t\t\tif (item && item.get) {\n\t\t\t\t\tdataItem.set(\"name\", item.get(nameField as any) as string);\n\t\t\t\t}\n\n\t\t\t\tlet name = dataItem.get(\"name\");\n\n\t\t\t\tif (name) {\n\t\t\t\t\tlabel.set(\"text\", name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst valueLabel = this.makeValueLabel();\n\t\t\tif (valueLabel) {\n\t\t\t\titemContainer.children.push(valueLabel);\n\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"valueLabel\", valueLabel);\n\t\t\t}\n\n\t\t\tif (item && item.show) {\n\n\t\t\t\titem.on(\"visible\", (visible) => {\n\t\t\t\t\titemContainer.set(\"disabled\", !visible);\n\t\t\t\t})\n\n\t\t\t\tif (!item.get(\"visible\")) {\n\t\t\t\t\titemContainer.set(\"disabled\", true);\n\t\t\t\t}\n\n\t\t\t\tif (clickTarget != \"none\") {\n\t\t\t\t\tlet clickContainer = itemContainer;\n\t\t\t\t\tif (clickTarget == \"marker\") {\n\t\t\t\t\t\tclickContainer = marker;\n\t\t\t\t\t}\n\t\t\t\t\tthis._addClickEvents(clickContainer, item, dataItem)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Sort children\n\t\t\tthis.children.values.sort((a, b) => {\n\t\t\t\tconst targetA = a.dataItem!.dataContext;\n\t\t\t\tconst targetB = b.dataItem!.dataContext;\n\t\t\t\tif (targetA && targetB) {\n\t\t\t\t\tconst indexA = this.data.indexOf(targetA);\n\t\t\t\t\tconst indexB = this.data.indexOf(targetB);\n\t\t\t\t\tif (indexA > indexB) {\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\telse if (indexA < indexB) {\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\tif (item && item.updateLegendValue) {\n\t\t\t\titem.updateLegendValue();\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\tprotected _addClickEvents(container: Container, item: ILegendItem, dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tcontainer.set(\"cursorOverStyle\", \"pointer\");\n\t\tcontainer.events.on(\"pointerover\", () => {\n\t\t\tconst component = item.component;\n\t\t\tif (component && component.hoverDataItem) {\n\t\t\t\tcomponent.hoverDataItem(item as any)\n\t\t\t}\n\t\t})\n\n\t\tcontainer.events.on(\"pointerout\", () => {\n\t\t\tconst component = item.component;\n\t\t\tif (component && component.hoverDataItem) {\n\t\t\t\tcomponent.unhoverDataItem(item as any)\n\t\t\t}\n\t\t})\n\n\t\tcontainer.events.on(\"click\", () => {\n\t\t\tconst labelText = dataItem.get(\"label\").text._getText();\n\n\t\t\tif (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\n\t\t\t\titem.show();\n\t\t\t\tcontainer.set(\"disabled\", false);\n\t\t\t\tthis._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\n\t\t\t}\n\t\t\telse if (item.hide) {\n\t\t\t\titem.hide();\n\t\t\t\tcontainer.set(\"disabled\", true);\n\t\t\t\tthis._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\n\t\t\t}\n\t\t})\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tsuper.disposeDataItem(dataItem);\n\n\t\tconst dataContext = dataItem.dataContext as any;\n\t\tif (dataContext && dataContext.get) {\n\t\t\tconst di = dataContext.get(\"legendDataItem\");\n\t\t\tif (di == dataItem) {\n\t\t\t\tdataContext.set(\"legendDataItem\", undefined);\n\t\t\t}\n\t\t}\n\n\t\tlet itemContainer = dataItem.get(\"itemContainer\");\n\t\tif (itemContainer) {\n\t\t\tthis.itemContainers.removeValue(itemContainer);\n\t\t\titemContainer.dispose();\n\t\t}\n\n\t\tlet marker = dataItem.get(\"marker\");\n\t\tif (marker) {\n\t\t\tthis.markers.removeValue(marker);\n\t\t\tmarker.dispose();\n\t\t}\n\n\t\tlet markerRectangle = dataItem.get(\"markerRectangle\");\n\t\tif (markerRectangle) {\n\t\t\tthis.markerRectangles.removeValue(markerRectangle);\n\t\t\tmarkerRectangle.dispose();\n\t\t}\n\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tlet valueLabel = dataItem.get(\"valueLabel\");\n\t\tif (valueLabel) {\n\t\t\tthis.valueLabels.removeValue(valueLabel);\n\t\t\tvalueLabel.dispose();\n\t\t}\n\n\t}\n}\n", "/** @ignore *//** */\n\nimport type { IPoint } from \"./IPoint\"\nimport * as $math from \"./Math\";\nimport type { IGraphics } from \"../render/backend/Renderer\";\n\n/**\n * @ignore\n */\nexport function segmentedLine(display: IGraphics, segments: Array<Array<Array<IPoint>>>) {\n\tfor (let s = 0, len = segments.length; s < len; s++) {\n\t\tconst groups = segments[s];\n\t\tif (groups.length > 0) {\n\t\t\tlet firstGroup = groups[0];\n\t\t\tif (firstGroup.length > 0) {\n\t\t\t\tlet firstPoint = firstGroup[0];\n\t\t\t\tdisplay.moveTo(firstPoint.x, firstPoint.y);\n\t\t\t\tfor (let g = 0, len = groups.length; g < len; g++) {\n\t\t\t\t\tline(display, groups[g]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nexport function line(display: IGraphics, points: Array<IPoint>) {\n\tfor (let p = 0, len = points.length; p < len; p++) {\n\t\tconst point = points[p];\n\t\tdisplay.lineTo(point.x, point.y);\n\t}\n}\n\n/**\n * @ignore\n */\nexport function moveTo(display: IGraphics, point: IPoint) {\n\tdisplay.moveTo(point.x, point.y);\n}\n\n/**\n * @ignore\n */\nexport function clear(display: IGraphics) {\n\tdisplay.clear();\n}\n\n/**\n * @ignore\n */\nexport function smoothedSegmentedline(display: IGraphics, segments: Array<Array<Array<IPoint>>>, tensionX: number, tensionY: number) {\n\tfor (let s = 0, len = segments.length; s < len; s++) {\n\t\tconst groups = segments[s];\n\t\tif (groups.length > 0) {\n\t\t\tlet firstGroup = groups[0];\n\t\t\tif (firstGroup.length > 0) {\n\t\t\t\tlet firstPoint = firstGroup[0];\n\t\t\t\tdisplay.moveTo(firstPoint.x, firstPoint.y);\n\t\t\t\tfor (let g = 0, len = groups.length; g < len; g++) {\n\t\t\t\t\tconst points = groups[g];\n\t\t\t\t\tif (points.length > 0) {\n\t\t\t\t\t\tdisplay.lineTo(points[0].x, points[0].y)\n\t\t\t\t\t}\n\t\t\t\t\tsmoothedLine(display, points, tensionX, tensionY);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nexport function smoothedLine(display: IGraphics, points: Array<IPoint>, tensionX: number, tensionY: number) {\n\n\tfor (let i = points.length - 1; i > 0; i--) {\n\t\tlet p0 = points[i];\n\t\tlet p1 = points[i - 1];\n\n\t\tif (Math.abs(p0.x - p1.x) < 0.1 && Math.abs(p0.y - p1.y) < 0.1) {\n\t\t\tpoints.splice(i - 1, 1);\n\t\t}\n\t}\n\n\tif (points.length < 3 || (tensionX >= 1 && tensionY >= 1)) {\n\t\tline(display, points);\n\t\treturn;\n\t}\n\n\ttensionX = 1 - tensionX + 0.00001;\n\ttensionY = 1 - tensionY + 0.00001;\n\n\tlet first = points[0];\n\tlet last = points[points.length - 1];\n\n\tlet closed: boolean = false;\n\n\tif ($math.round(first.x, 3) == $math.round(last.x) && $math.round(first.y) == $math.round(last.y)) {\n\t\tclosed = true;\n\t}\n\n\t// Can't moveTo here, as it wont be possible to have fill then.\n\tlet path: string = \"\";\n\n\tfor (let i = 0, len = points.length - 1; i < len; i++) {\n\t\tlet p0: IPoint = points[i - 1];\n\n\t\tlet p1: IPoint = points[i];\n\n\t\tlet p2: IPoint = points[i + 1];\n\n\t\tlet p3: IPoint = points[i + 2];\n\n\t\tif (i === 0) {\n\t\t\tif (closed) {\n\t\t\t\tp0 = points[len - 2];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp0 = points[0];\n\t\t\t}\n\t\t} else if (i == len - 1) {\n\t\t\tif (closed) {\n\t\t\t\tp3 = points[1];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp3 = p2;\n\t\t\t}\n\t\t}\n\n\n\t\tlet controlPointA = $math.getCubicControlPointA(p0, p1, p2, tensionX, tensionY);\n\t\tlet controlPointB = $math.getCubicControlPointB(p1, p2, p3, tensionX, tensionY);\n\n\t\tdisplay.bezierCurveTo(controlPointA.x, controlPointA.y, controlPointB.x, controlPointB.y, p2.x, p2.y);\n\t}\n\n\treturn path;\n}\n", "import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\nimport type { IPoint } from \"../util/IPoint\";\nimport * as $draw from \"../util/Draw\";\n\nexport interface ILineSettings extends IGraphicsSettings {\n\n\t/**\n\t * A list of [[IPoint]] (x/y coordinates) points for the line.\n\t */\n\tpoints?: Array<IPoint>;\n\n\t/**\n\t * A list of [[IPoint]] arrays for different segments of the line.\n\t * \n\t * @since 5.1.4\n\t */\n\tsegments?: Array<Array<Array<IPoint>>>;\n}\n\nexport interface ILinePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Line extends Graphics {\n\n\tdeclare public _settings: ILineSettings;\n\tdeclare public _privateSettings: ILinePrivate;\n\n\tpublic static className: string = \"Line\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Line.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"points\") || this.isDirty(\"segments\") || this._sizeDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\n\t\t\tconst points = this.get(\"points\");\n\t\t\tconst segments = this.get(\"segments\");\n\n\t\t\tif (points && points.length > 0) {\n\t\t\t\tlet point = points[0];\n\n\t\t\t\tthis._display.moveTo(point.x, point.y);\n\t\t\t\t$draw.segmentedLine(this._display, [[points]]);\n\t\t\t}\n\t\t\telse if (segments) {\n\t\t\t\t$draw.segmentedLine(this._display, segments);\n\t\t\t}\n\t\t\telse if (!this.get(\"draw\")) {\n\t\t\t\tlet w = this.width();\n\t\t\t\tlet h = this.height();\n\n\t\t\t\tthis._display.moveTo(0, 0);\n\t\t\t\tthis._display.lineTo(w, h);\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { IPicture } from \"./backend/Renderer\";\nimport type { Color } from \"../util/Color\";\n\nimport { Sprite, ISpriteEvents, ISpriteSettings, ISpritePrivate } from \"./Sprite\";\n\nimport * as $type from \"../util/Type\";\n\nexport interface IPictureSettings extends ISpriteSettings {\n\n\t/**\n\t * A source URI of the image.\n\t *\n\t * Can be relative or absolute URL, or data-uri.\n\t */\n\tsrc?: string;\n\n\t/**\n\t * CORS settings for loading the image. Defaults to \"anonymous\".\n\t *\n\t * @since 5.3.6\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/crossOrigin} for more info\n\t */\n\tcors?: string | null;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n}\n\nexport interface IPicturePrivate extends ISpritePrivate {\n}\n\nexport interface IPictureEvents extends ISpriteEvents {\n\n\t/**\n\t * Invoked when picture is loaded.\n\t */\n\tloaded: {};\n\n\t/**\n\t * Invoked when picture load error happens.\n\t */\n\tloaderror: {};\n}\n\n/**\n * Displays an image.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/images/} for more info\n * @important\n */\nexport class Picture extends Sprite {\n\n\tdeclare public _settings: IPictureSettings;\n\tdeclare public _privateSettings: IPicturePrivate;\n\n\tpublic _display: IPicture = this._root._renderer.makePicture(undefined);\n\n\tpublic static className: string = \"Picture\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Picture.className]);\n\tdeclare public _events: IPictureEvents;\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"width\")) {\n\t\t\tconst width = this.get(\"width\");\n\t\t\tthis._display.width = $type.isNumber(width) ? width : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"height\")) {\n\t\t\tconst height = this.get(\"height\");\n\t\t\tthis._display.height = $type.isNumber(height) ? height : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowColor\")) {\n\t\t\tthis._display.clear();\n\t\t\tconst shadowColor = this.get(\"shadowColor\");\n\t\t\tthis._display.shadowColor = shadowColor == null ? undefined : shadowColor;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowBlur\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowBlur = this.get(\"shadowBlur\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetX\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetX = this.get(\"shadowOffsetX\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetY\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetY = this.get(\"shadowOffsetY\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOpacity\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOpacity = this.get(\"shadowOpacity\");\n\t\t}\n\n\t\tif (this.isDirty(\"src\") || this.isDirty(\"cors\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._load();\n\t\t}\n\t}\n\n\tprotected _load() {\n\t\tconst src = this.get(\"src\");\n\t\tif (src) {\n\t\t\tconst image = new Image();\n\t\t\timage.crossOrigin = this.get(\"cors\", \"anonymous\");\n\t\t\timage.src = src!;\n\t\t\tconst events = this.events;\n\t\t\t\n\t\t\timage.decode().then(() => {\n\t\t\t\tthis._display.image = image;\n\t\t\t\tthis._updateSize();\n\t\t\t\tif (!events.isDisposed() && events.isEnabled(\"loaded\")) {\n\t\t\t\t\tevents.dispatch(\"loaded\", { type: \"loaded\", target: this });\n\t\t\t\t}\n\t\t\t}).catch((_error: any) => {\n\t\t\t\tif (!events.isDisposed() && events.isEnabled(\"loaderror\")) {\n\t\t\t\t\tevents.dispatch(\"loaderror\", { type: \"loaderror\", target: this });\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\tconst image = this._display.image;\n\t\tif (image) {\n\t\t\tlet w = this.getPrivate(\"width\", this.get(\"width\"));\n\t\t\tlet h = this.getPrivate(\"height\", this.get(\"height\"));\n\t\t\tconst r = image.width && image.height ? image.width / image.height : 0;\n\n\t\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\telse if ($type.isNumber(w) && r) {\n\t\t\t\th = w / r;\n\t\t\t}\n\t\t\telse if ($type.isNumber(h) && r) {\n\t\t\t\tw = h * r;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tw = image.width;\n\t\t\t\th = image.height;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(w)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t}\n\t\t\tif ($type.isNumber(h)) {\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.markDirty();\n\t\t}\n\t}\n}\n", "import { Text, ITextSettings, ITextPrivate } from \"./Text\";\nimport * as $math from \"../util/Math\";\nimport type { IRadialText } from \"./backend/Renderer\";\n\n/**\n * @ignore\n */\nexport interface IRadialTextSettings extends ITextSettings {\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\tradius?: number;\n\tstartAngle?: number;\n\tinside?: boolean;\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\tkerning?: number;\n}\n\n/**\n * @ignore\n */\nexport interface IRadialTextPrivate extends ITextPrivate {\n}\n\n/**\n * @ignore\n */\nexport class RadialText extends Text {\n\n\tdeclare public _settings: IRadialTextSettings;\n\tdeclare public _privateSettings: IRadialTextPrivate;\n\n\tpublic _display: IRadialText = this._root._renderer.makeRadialText(\"\", this.textStyle);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"RadialText\";\n\tpublic static classNames: Array<string> = Text.classNames.concat([RadialText.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tthis._display.clear();\n\n\t\tif (this.isDirty(\"textType\")) {\n\t\t\tthis._display.textType = this.get(\"textType\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._display.radius = this.get(\"radius\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"startAngle\")) {\n\t\t\tthis._display.startAngle = (this.get(\"startAngle\", 0)! + 90) * $math.RADIANS;\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\tthis._display.inside = this.get(\"inside\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._display.orientation = this.get(\"orientation\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"kerning\")) {\n\t\t\tthis._display.kerning = this.get(\"kerning\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n}\n", "// import * as $object from \"../util/Object\";\nimport { p50, Percent } from \"../util/Percent\";\nimport { Label, ILabelPrivate, ILabelSettings } from \"./Label\";\nimport { RadialText } from \"./RadialText\";\n\nimport * as $math from \"../util/Math\";\nimport * as $utils from \"../util/Utils\";\n\n\nexport interface IRadialLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Pixel value to adjust radius with.\n\t *\n\t * Will add to (or subtract from if negative) whatever value `baseRadius` evaluates\n\t * to.\n\t */\n\tradius?: number;\n\n\t/**\n\t * Radius of the label's position.\n\t *\n\t * Can be either set in absolute pixel value, or percent.\n\t *\n\t * Relative value, depending on the situation, will most often mean its\n\t * position within certain circular object, like a slice: 0% meaning inner\n\t * edge, and 100% - the outer edge.\n\t *\n\t * @default 100%\n\t */\n\tbaseRadius?: number | Percent;\n\n\t/**\n\t * Label anngle in degrees.\n\t *\n\t * In most cases it will be set by the chart/series and does not need to\n\t * be set manually.\n\t */\n\tlabelAngle?: number;\n\n\t/**\n\t * Should the text \"face\" inward or outward from the arc the text is\n\t * following.\n\t *\n\t * `\"auto\"` means that facing will be chosen automatically based on the angle\n\t * to enhance readbility.\n\t *\n\t * Only applies if `type = \"circluar\"`.\n\t * \n\t * @default \"auto\"\n\t */\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\n\t/**\n\t * Should label be drawn inside (`true`) or outside (`false`) the arc.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n\n\t/**\n\t * Label type.\n\t *\n\t * * `\"regular\"` (default) - normal horizontal label.\n\t * * `\"circular\"` - arched label.\n\t * * `\"radial\"` - label radiating from the center of the arc.\n\t * * `\"aligned\"` - horizontal label aligned with other labels horizontally.\n\t * * `\"adjusted\"` - horizontal label adjusted in postion.\n\t *\n\t * **IMPORTANT!** If the label is used in a [[PieSeries]], its `alignLabels` setting\n\t * (default: `true`) takes precedence over `textType`. If you need to set this\n\t * to anything else than `regular`, make sure you also set `alignLabels: falese` on\n\t * `PieSeries`.\n\t *\n\t * @default \"regular\"\n\t */\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\n\t/**\n\t * Extra spacing between characters, in pixels.\n\t *\n\t * @default 0\n\t */\n\tkerning?: number;\n\n}\n\nexport interface IRadialLabelPrivate extends ILabelPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tleft?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tradius?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius?: number;\n\n}\n\nexport class RadialLabel extends Label {\n\n\tdeclare public _settings: IRadialLabelSettings;\n\tdeclare public _privateSettings: IRadialLabelPrivate;\n\n\tdeclare protected _text: RadialText;\n\n\tpublic static className: string = \"RadialLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([RadialLabel.className]);\n\n\tprotected _flipped: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis._textKeys.push(\"textType\", \"kerning\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tpublic _makeText() {\n\t\tthis._text = this.children.push(RadialText.new(this._root, {}));\n\t}\n\n\t/**\n\t * Returns base radius in pixels.\n\t * \n\t * @return Base radius\n\t */\n\tpublic baseRadius(): number {\n\t\tconst radiusPrivate = this.getPrivate(\"radius\", 0);\n\t\tconst innerRadiusPrivate = this.getPrivate(\"innerRadius\", 0);\n\t\tconst baseRadius = this.get(\"baseRadius\", 0);\n\t\treturn innerRadiusPrivate + $utils.relativeToValue(baseRadius, radiusPrivate - innerRadiusPrivate);\n\t}\n\n\t/**\n\t * Returns radius adjustment in pixels.\n\t * \n\t * @return Radius\n\t */\n\tpublic radius(): number {\n\t\tconst inside = this.get(\"inside\", false);\n\t\treturn this.baseRadius() + this.get(\"radius\", 0) * (inside ? -1 : 1);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"baseRadius\") || this.isPrivateDirty(\"radius\") || this.isPrivateDirty(\"innerRadius\") || this.isDirty(\"labelAngle\") || this.isDirty(\"radius\") || this.isDirty(\"inside\") || this.isDirty(\"orientation\") || this.isDirty(\"textType\")) {\n\n\t\t\tconst textType = this.get(\"textType\", \"adjusted\");\n\n\t\t\tconst inside = this.get(\"inside\", false);\n\n\t\t\tconst orientation = this.get(\"orientation\");\n\t\t\tlet labelAngle = $math.normalizeAngle(this.get(\"labelAngle\", 0));\n\n\t\t\tthis._text.set(\"startAngle\", this.get(\"labelAngle\", 0));\n\t\t\tthis._text.set(\"inside\", inside);\n\n\t\t\tconst sin = $math.sin(labelAngle);\n\t\t\tconst cos = $math.cos(labelAngle);\n\n\t\t\tlet baseRadius = this.baseRadius();\n\t\t\tlet radius = this.radius();\n\n\t\t\tthis._display.angle = 0;\n\n\t\t\tif (textType == \"circular\") {\n\n\t\t\t\tthis.setAll({\n\t\t\t\t\tpaddingTop: 0,\n\t\t\t\t\tpaddingBottom: 0,\n\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\tpaddingRight: 0\n\t\t\t\t});\n\n\t\t\t\tthis.setRaw(\"x\", undefined);\n\t\t\t\tthis.setRaw(\"y\", undefined);\t\t\t\t\n\n\t\t\t\t// Circular labels are handled and positioned differently\n\n\t\t\t\tthis._text.set(\"orientation\", orientation);\n\t\t\t\tthis._text.set(\"radius\", radius);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (baseRadius == 0) {\n\t\t\t\t\tlabelAngle = 0;\n\t\t\t\t\tradius = 0;\n\t\t\t\t}\n\n\t\t\t\t// Positioning of radial/regular labels are teh same\n\t\t\t\tlet x = radius * cos;\n\t\t\t\tlet y = radius * sin;\n\n\t\t\t\tif (textType == \"radial\") {\n\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\n\t\t\t\t\tif ((labelAngle < 90) || (labelAngle > 270) || orientation != \"auto\") {\n\t\t\t\t\t\tthis._display.angle = labelAngle;// + 90;\n\t\t\t\t\t\tthis._flipped = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._display.angle = labelAngle + 180;\n\t\t\t\t\t\tthis._flipped = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._dirty.rotation = false;\n\t\t\t\t}\n\t\t\t\telse if (textType == \"adjusted\") {\n\t\t\t\t\tthis.setRaw(\"centerX\", p50);\n\t\t\t\t\tthis.setRaw(\"centerY\", p50);\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\t\t\t\t}\n\t\t\t\telse if (textType == \"regular\") {\n\t\t\t\t\tthis.setRaw(\"x\", x);\n\t\t\t\t\tthis.setRaw(\"y\", y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n\n\tpublic _updatePosition() {\n\n\t\tconst textType = this.get(\"textType\", \"regular\");\n\t\tconst inside = this.get(\"inside\", false);\n\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\t\tlet labelAngle = this.get(\"labelAngle\", 0);\n\t\tlet bounds = this.localBounds();\n\t\tlet w = bounds.right - bounds.left;\n\t\tlet h = bounds.bottom - bounds.top;\n\n\t\tif (textType == \"radial\") {\n\t\t\tif (this._flipped) {\n\t\t\t\tlet centerX = this.get(\"centerX\");\n\t\t\t\tif (centerX instanceof Percent) {\n\t\t\t\t\tw = w * (1 - centerX.value * 2);\n\t\t\t\t}\n\n\t\t\t\tdx = w * $math.cos(labelAngle);\n\t\t\t\tdy = w * $math.sin(labelAngle);\n\t\t\t}\n\t\t}\n\t\telse if (!inside && textType == \"adjusted\") {\n\t\t\tdx = w / 2 * $math.cos(labelAngle);\n\t\t\tdy = h / 2 * $math.sin(labelAngle);\n\t\t}\n\n\n\t\tthis.setRaw(\"dx\", dx);\n\t\tthis.setRaw(\"dy\", dy);\n\n\t\tsuper._updatePosition();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get text(): RadialText {\n\t\treturn this._text;\n\t}\n\n}\n", "import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\r\n\r\nexport interface ITriangleSettings extends IGraphicsSettings {\r\n}\r\n\r\nexport interface ITrianglePrivate extends IGraphicsPrivate {\r\n}\r\n\r\n/**\r\n * Draws a triangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Triangle extends Graphics {\r\n\r\n\tdeclare public _settings: ITriangleSettings;\r\n\tdeclare public _privateSettings: ITrianglePrivate;\r\n\r\n\tpublic static className: string = \"Triangle\";\r\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Triangle.className]);\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n\t\t\tthis._clear = true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clear && !this.get(\"draw\")) {\r\n\t\t\tthis._draw();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _draw() {\r\n\t\tconst w = this.width();\r\n\t\tconst h = this.height();\r\n\t\tconst display = this._display;\r\n\t\tdisplay.moveTo(-w / 2, h / 2);\r\n\t\tdisplay.lineTo(0, -h / 2);\r\n\t\tdisplay.lineTo(w / 2, h / 2);\r\n\t\tdisplay.lineTo(-w / 2, h / 2);\r\n\t\tdisplay.closePath();\r\n\r\n\t}\r\n\r\n\tpublic _updateSize() {\r\n\t\tthis.markDirty()\r\n\t\tthis._clear = true;\r\n\t}\r\n}\r\n", "import type { Animation } from \"../util/Entity\";\nimport type { Time } from \"../util/Animation\";\n\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"./Container\";\nimport { Graphics } from \"./Graphics\";\nimport { Button } from \"./Button\";\n\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n\nexport interface IScrollbarSettings extends IContainerSettings {\n\n\t/**\n\t * Orientation of the scrollbar.\n\t */\n\torientation: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * Relative start of the selected range, with 0 meaning beginning, and 1 the\n\t * end.\n\t */\n\tstart?: number;\n\n\t/**\n\t * Relative end of the selected range, with 0 meaning beginning, and 1 the\n\t * end.\n\t */\n\tend?: number;\n\n\t/**\n\t * Number of milliseconds to play scroll animations for.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function to use for animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n}\n\nexport interface IScrollbarPrivate extends IContainerPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tisBusy?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tpositionTextFunction?: (position: number) => string;\n\n}\n\nexport interface IScrollbarEvents extends IContainerEvents {\n\n\t/**\n\t * Invoked when range of the selection changes.\n\t */\n\trangechanged: { start: number, end: number, grip?: \"start\" | \"end\" };\n\n\treleased:{};\n}\n\n/**\n * A control that allows zooming chart's axes, or other uses requiring range\n * selection.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n */\nexport class Scrollbar extends Container {\n\n\tpublic _addOrientationClass() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", this._settings.orientation]);\n\t\tif (!this._settings.background) {\n\t\t\tthis._settings.background = RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this._settings.themeTags, [\"main\", \"background\"])\n\t\t\t});\n\t\t}\n\t}\n\n\tdeclare public _settings: IScrollbarSettings;\n\tdeclare public _privateSettings: IScrollbarPrivate;\n\tdeclare public _events: IScrollbarEvents;\n\n\tpublic static className: string = \"Scrollbar\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Scrollbar.className]);\n\n\t/**\n\t * A thumb elment - a draggable square between the grips, used for panning\n\t * the selection.\n\t */\n\tpublic thumb: RoundedRectangle = this._makeThumb();\n\n\t/**\n\t * Start grip button.\n\t */\n\tpublic startGrip: Button = this._makeButton();\n\n\t/**\n\t * End grip button.\n\t */\n\tpublic endGrip: Button = this._makeButton();\n\n\tprotected _thumbBusy: boolean = false;\n\n\tprotected _startDown: boolean = false;\n\n\tprotected _endDown: boolean = false;\n\n\tprotected _thumbDown: boolean = false;\n\n\tprotected _gripDown?: \"start\" | \"end\";\n\n\tprotected _makeButton(): Button {\n\t\treturn this.children.push(Button.new(this._root, {\n\t\t\tthemeTags: [\"resize\", \"button\", this.get(\"orientation\")], icon: Graphics.new(this._root, {\n\t\t\t\tthemeTags: [\"icon\"]\n\t\t\t})\n\t\t}));\n\t}\n\n\tprotected _makeThumb(): RoundedRectangle {\n\t\treturn this.children.push(RoundedRectangle.new(this._root, {\n\t\t\tthemeTags: [\"thumb\", this.get(\"orientation\")]\n\t\t}));\n\t}\n\n\tprotected _handleAnimation(animation: Animation<any>) {\n\t\tif (animation) {\n\t\t\tthis._disposers.push(\n\t\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\t\tthis.setPrivateRaw(\"isBusy\", false);\n\t\t\t\t\tthis._thumbBusy = false;\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tsuper._afterNew();\n\n\t\tconst startGrip = this.startGrip;\n\t\tconst endGrip = this.endGrip;\n\t\tconst thumb = this.thumb;\n\t\tconst background = this.get(\"background\");\n\n\t\tif (background) {\n\t\t\tthis._disposers.push(\n\t\t\t\tbackground.events.on(\"click\", (event) => {\n\t\t\t\t\tthis.setPrivateRaw(\"isBusy\", true);\n\t\t\t\t\tconst point = this._display.toLocal(event.point);\n\n\t\t\t\t\tconst w = this.width();\n\t\t\t\t\tconst h = this.height();\n\n\t\t\t\t\tconst orientation = this.get(\"orientation\");\n\n\t\t\t\t\tlet newMiddle: number;\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tnewMiddle = (point.y - thumb.height() / 2) / h;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnewMiddle = (point.x - thumb.width() / 2) / w;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newCoordinate: number;\n\t\t\t\t\tlet key: \"x\" | \"y\";\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tnewCoordinate = newMiddle * h;\n\t\t\t\t\t\tkey = \"y\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnewCoordinate = newMiddle * w;\n\t\t\t\t\t\tkey = \"x\";\n\t\t\t\t\t}\n\n\n\t\t\t\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\t\t\t\tif (duration > 0) {\n\t\t\t\t\t\tthis._thumbBusy = true;\n\t\t\t\t\t\tthis._handleAnimation(this.thumb.animate({ key: key, to: newCoordinate, duration: duration, easing: this.get(\"animationEasing\") }));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.thumb.set(key, newCoordinate);\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"isBusy\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\n\t\tthis._disposers.push(thumb.events.on(\"dblclick\", (event) => {\n\n\t\t\tif (!$utils.isLocalEvent(event.originalEvent, this)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\t\tconst easing = this.get(\"animationEasing\");\n\n\t\t\tthis.animate({ key: \"start\", to: 0, duration: duration, easing: easing });\n\t\t\tthis.animate({ key: \"end\", to: 1, duration: duration, easing: easing });\n\t\t}));\n\n\t\tthis._disposers.push(startGrip.events.on(\"pointerdown\", () => {\n\t\t\tthis.setPrivateRaw(\"isBusy\", true);\n\t\t\tthis._startDown = true;\n\t\t\tthis._gripDown = \"start\";\n\t\t}))\n\n\t\tthis._disposers.push(endGrip.events.on(\"pointerdown\", () => {\n\t\t\tthis.setPrivateRaw(\"isBusy\", true);\n\t\t\tthis._endDown = true;\n\t\t\tthis._gripDown = \"end\";\n\t\t}))\n\n\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", () => {\n\t\t\tthis.setPrivateRaw(\"isBusy\", true);\n\t\t\tthis._thumbDown = true;\n\t\t\tthis._gripDown = undefined;\n\t\t}))\n\n\t\tthis._disposers.push(startGrip.events.on(\"globalpointerup\", () => {\n\t\t\tif (this._startDown) {\n\t\t\t\tthis.setPrivateRaw(\"isBusy\", false);\n\t\t\t\tthis._released();\n\t\t\t}\n\t\t\tthis._startDown = false;\n\t\t}))\n\n\t\tthis._disposers.push(endGrip.events.on(\"globalpointerup\", () => {\n\t\t\tif (this._endDown) {\n\t\t\t\tthis.setPrivateRaw(\"isBusy\", false);\n\t\t\t\tthis._released();\n\t\t\t}\n\t\t\tthis._endDown = false;\n\t\t}))\n\n\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", () => {\n\t\t\tif (this._thumbDown) {\n\t\t\t\tthis.setPrivateRaw(\"isBusy\", false);\n\t\t\t\tthis._released();\n\t\t\t}\n\t\t\tthis._thumbDown = false;\n\t\t}))\n\n\t\tthis._disposers.push(startGrip.on(\"x\", () => {\n\t\t\tthis._updateThumb();\n\t\t}));\n\n\t\tthis._disposers.push(endGrip.on(\"x\", () => {\n\t\t\tthis._updateThumb();\n\t\t}));\n\n\t\tthis._disposers.push(startGrip.on(\"y\", () => {\n\t\t\tthis._updateThumb();\n\t\t}));\n\n\t\tthis._disposers.push(endGrip.on(\"y\", () => {\n\t\t\tthis._updateThumb();\n\t\t}));\n\n\t\tthis._disposers.push(thumb.events.on(\"positionchanged\", () => {\n\t\t\tthis._updateGripsByThumb();\n\t\t}));\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tstartGrip.set(\"x\", 0);\n\t\t\tendGrip.set(\"x\", 0);\n\n\t\t\tthis._disposers.push(thumb.adapters.add(\"y\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.height() - thumb.height()), 0);\n\t\t\t}))\n\n\t\t\tthis._disposers.push(thumb.adapters.add(\"x\", (_value) => {\n\t\t\t\treturn this.width() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(startGrip.adapters.add(\"x\", (_value) => {\n\t\t\t\treturn this.width() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(endGrip.adapters.add(\"x\", (_value) => {\n\t\t\t\treturn this.width() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(startGrip.adapters.add(\"y\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.height()), 0);\n\t\t\t}))\n\n\t\t\tthis._disposers.push(endGrip.adapters.add(\"y\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.height()), 0);\n\t\t\t}))\n\t\t}\n\t\telse {\n\t\t\tstartGrip.set(\"y\", 0);\n\t\t\tendGrip.set(\"y\", 0);\n\n\t\t\tthis._disposers.push(thumb.adapters.add(\"x\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.width() - thumb.width()), 0);\n\t\t\t}))\n\n\t\t\tthis._disposers.push(thumb.adapters.add(\"y\", (_value) => {\n\t\t\t\treturn this.height() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(startGrip.adapters.add(\"y\", (_value) => {\n\t\t\t\treturn this.height() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(endGrip.adapters.add(\"y\", (_value) => {\n\t\t\t\treturn this.height() / 2;\n\t\t\t}))\n\n\t\t\tthis._disposers.push(startGrip.adapters.add(\"x\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.width()), 0);\n\t\t\t}))\n\n\t\t\tthis._disposers.push(endGrip.adapters.add(\"x\", (value) => {\n\t\t\t\treturn Math.max(Math.min(Number(value), this.width()), 0);\n\t\t\t}))\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"end\") || this.isDirty(\"start\") || this._sizeDirty) {\n\t\t\tthis.updateGrips();\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst eventType = \"rangechanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, start: this.get(\"start\", 0), end: this.get(\"end\", 1), grip: this._gripDown });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _released(){\n\t\tconst eventType = \"released\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\t\t\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrips() {\n\t\tconst startGrip = this.startGrip;\n\t\tconst endGrip = this.endGrip;\n\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst height = this.height();\n\t\tconst width = this.width();\n\n\t\tif (orientation == \"vertical\") {\n\t\t\tstartGrip.set(\"y\", height * this.get(\"start\", 0));\n\t\t\tendGrip.set(\"y\", height * this.get(\"end\", 1));\n\t\t}\n\t\telse {\n\t\t\tstartGrip.set(\"x\", width * this.get(\"start\", 0));\n\t\t\tendGrip.set(\"x\", width * this.get(\"end\", 1));\n\t\t}\n\n\t\tconst valueFunction = this.getPrivate(\"positionTextFunction\");\n\t\tconst from = Math.round(this.get(\"start\", 0) * 100);\n\t\tconst to = Math.round(this.get(\"end\", 0) * 100);\n\t\tlet fromValue: string;\n\t\tlet toValue: string;\n\t\tif (valueFunction) {\n\t\t\tfromValue = valueFunction.call(this, this.get(\"start\", 0));\n\t\t\ttoValue = valueFunction.call(this, this.get(\"end\", 0));\n\t\t}\n\t\telse {\n\t\t\tfromValue = from + \"%\";\n\t\t\ttoValue = to + \"%\";\n\t\t}\n\n\t\tstartGrip.set(\"ariaLabel\", this._t(\"From %1\", undefined, fromValue));\n\t\tstartGrip.set(\"ariaValueNow\", \"\" + from);\n\t\tstartGrip.set(\"ariaValueText\", from + \"%\");\n\n\t\tstartGrip.set(\"ariaValueMin\", \"0\");\n\t\tstartGrip.set(\"ariaValueMax\", \"100\");\n\n\t\tendGrip.set(\"ariaLabel\", this._t(\"To %1\", undefined, toValue));\n\t\tendGrip.set(\"ariaValueNow\", \"\" + to);\n\t\tendGrip.set(\"ariaValueText\", to + \"%\");\n\n\t\tendGrip.set(\"ariaValueMin\", \"0\");\n\t\tendGrip.set(\"ariaValueMax\", \"100\");\n\t}\n\n\tprotected _updateThumb() {\n\t\tconst thumb = this.thumb;\n\t\tconst startGrip = this.startGrip;\n\t\tconst endGrip = this.endGrip;\n\n\t\tconst height = this.height();\n\t\tconst width = this.width();\n\n\t\tlet x0 = startGrip.x();\n\t\tlet x1 = endGrip.x();\n\n\t\tlet y0 = startGrip.y();\n\t\tlet y1 = endGrip.y();\n\n\t\tlet start: number = 0;\n\t\tlet end: number = 1;\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tif ($type.isNumber(y0) && $type.isNumber(y1)) {\n\t\t\t\tif (!this._thumbBusy && !thumb.isDragging()) {\n\t\t\t\t\tthumb.set(\"height\", y1 - y0);\n\t\t\t\t\tthumb.set(\"y\", y0);\n\t\t\t\t}\n\t\t\t\tstart = y0 / height;\n\t\t\t\tend = y1 / height;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ($type.isNumber(x0) && $type.isNumber(x1)) {\n\t\t\t\tif (!this._thumbBusy && !thumb.isDragging()) {\n\t\t\t\t\tthumb.set(\"width\", x1 - x0);\n\t\t\t\t\tthumb.set(\"x\", x0);\n\t\t\t\t}\n\t\t\t\tstart = x0 / width;\n\t\t\t\tend = x1 / width;\n\t\t\t}\n\t\t}\n\n\t\tif (this.getPrivate(\"isBusy\") && (this.get(\"start\") != start || this.get(\"end\") != end)) {\n\t\t\tthis.set(\"start\", start);\n\t\t\tthis.set(\"end\", end);\n\t\t}\n\n\t\tconst valueFunction = this.getPrivate(\"positionTextFunction\");\n\t\tconst from = Math.round(this.get(\"start\", 0) * 100);\n\t\tconst to = Math.round(this.get(\"end\", 0) * 100);\n\t\tlet fromValue: string;\n\t\tlet toValue: string;\n\t\tif (valueFunction) {\n\t\t\tfromValue = valueFunction.call(this, this.get(\"start\", 0));\n\t\t\ttoValue = valueFunction.call(this, this.get(\"end\", 0));\n\t\t}\n\t\telse {\n\t\t\tfromValue = from + \"%\";\n\t\t\ttoValue = to + \"%\";\n\t\t}\n\n\t\tthumb.set(\"ariaLabel\", this._t(\"From %1 to %2\", undefined, fromValue, toValue));\n\t\tthumb.set(\"ariaValueNow\", \"\" + from);\n\t\tthumb.set(\"ariaValueText\", from + \"%\");\n\t}\n\n\n\tprotected _updateGripsByThumb() {\n\n\t\tconst thumb = this.thumb;\n\t\tconst startGrip = this.startGrip;\n\t\tconst endGrip = this.endGrip;\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tconst thumbSize = thumb.height();\n\t\t\tstartGrip.set(\"y\", thumb.y());\n\t\t\tendGrip.set(\"y\", thumb.y() + thumbSize);\n\t\t}\n\t\telse {\n\t\t\tconst thumbSize = thumb.width();\n\t\t\tstartGrip.set(\"x\", thumb.x());\n\t\t\tendGrip.set(\"x\", thumb.x() + thumbSize);\n\t\t}\n\t}\n}\n", "import { Scrollbar, IScrollbarPrivate, IScrollbarSettings, IScrollbarEvents } from \"./Scrollbar\";\r\n\r\nexport interface ISliderSettings extends IScrollbarSettings {\r\n}\r\n\r\nexport interface ISliderPrivate extends IScrollbarPrivate {\r\n}\r\n\r\nexport interface ISliderEvents extends IScrollbarEvents {\r\n}\r\n\r\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\r\nexport class Slider extends Scrollbar {\r\n\r\n\tdeclare public _settings: ISliderSettings;\r\n\tdeclare public _privateSettings: ISliderPrivate;\r\n\tdeclare public _events: ISliderEvents;\r\n\r\n\tpublic static className: string = \"Slider\";\r\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([Slider.className]);\r\n\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._addOrientationClass();\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.endGrip.setPrivate(\"visible\", false);\r\n\t\tthis.thumb.setPrivate(\"visible\", false);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGrips() {\r\n\t\tsuper.updateGrips();\r\n\t\tconst startGrip = this.startGrip;\r\n\t\tthis.endGrip.setAll({ x: startGrip.x(), y: startGrip.y() });\r\n\t\tthis.setRaw(\"end\", this.get(\"start\"));\r\n\t}\r\n}\r\n", "export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n", "export const abs = Math.abs;\nexport const atan2 = Math.atan2;\nexport const cos = Math.cos;\nexport const max = Math.max;\nexport const min = Math.min;\nexport const sin = Math.sin;\nexport const sqrt = Math.sqrt;\n\nexport const epsilon = 1e-12;\nexport const pi = Math.PI;\nexport const halfPi = pi / 2;\nexport const tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n", "const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n", "import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n", "import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n", "export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n", "function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n", "import curveLinear from \"./linear.js\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n", "import {min, sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size + min(size / 28, 0.75)) * 0.59436;\n    const t = r / 2;\n    const u = t * sqrt3;\n    context.moveTo(0, r);\n    context.lineTo(0, -r);\n    context.moveTo(-u, -t);\n    context.lineTo(u, t);\n    context.moveTo(-u, t);\n    context.lineTo(u, -t);\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst tan30 = sqrt(1 / 3);\nconst tan30_2 = tan30 * 2;\n\nexport default {\n  draw(context, size) {\n    const y = sqrt(size / tan30_2);\n    const x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n", "import {sin, cos, sqrt, pi, tau} from \"../math.js\";\n\nconst ka = 0.89081309152928522810;\nconst kr = sin(pi / 10) / sin(7 * pi / 10);\nconst kx = sin(tau / 10) * kr;\nconst ky = -cos(tau / 10) * kr;\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size * ka);\n    const x = kx * r;\n    const y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (let i = 1; i < 5; ++i) {\n      const a = tau * i / 5;\n      const c = cos(a);\n      const s = sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const y = -sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst sqrt3 = sqrt(3);\n\nexport default {\n  draw(context, size) {\n    const s = sqrt(size) * 0.6824;\n    const t = s  / 2;\n    const u = (s * sqrt3) / 2; // cos(Math.PI / 6)\n    context.moveTo(0, -s);\n    context.lineTo(u, t);\n    context.lineTo(-u, t);\n    context.closePath();\n  }\n};\n", "import {sqrt} from \"../math.js\";\n\nconst c = -0.5;\nconst s = sqrt(3) / 2;\nconst k = 1 / sqrt(12);\nconst a = (k / 2 + 1) * 3;\n\nexport default {\n  draw(context, size) {\n    const r = sqrt(size / a);\n    const x0 = r / 2, y0 = r * k;\n    const x1 = x0, y1 = r * k + r;\n    const x2 = -x1, y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n", "export default function() {}\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // falls through\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n", "import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n", "import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n", "import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // falls through\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import noop from \"../noop.js\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n", "function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n", "function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n", "function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n", "import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { IPoint } from \"../util/IPoint\";\nimport { arc } from \"d3-shape\";\nimport * as $math from \"../util/Math\";\n\nexport interface ISliceSettings extends IGraphicsSettings {\n\n\t/**\n\t * Radius in pixels.\n\t */\n\tradius?: number;\n\n\t/**\n\t * Slice \"width\" in degrees.\n\t */\n\tarc?: number;\n\n\t/**\n\t * Inner radius of the slice in pixels.\n\t */\n\tinnerRadius?: number;\n\n\t/**\n\t * Start angle in degrees.\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * Slice corner radius in pixels.\n\t */\n\tcornerRadius?: number;\n\n\t/**\n\t * Slice \"pull out\" radius in pixels.\n\t */\n\tshiftRadius?: number;\n\n\t/**\n\t * Number of pixels to add to whatever slice's `radius` value is. Negative\n\t * numbers can also be used.\n\t */\n\tdRadius?: number;\n\n\t/**\n\t * Number of pixels to add to whatever slice's `innerRadius` value is.\n\t * Negative numbers can also be used.\n\t */\n\tdInnerRadius?: number;\n\n}\n\nexport interface ISlicePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a slice shape.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n */\nexport class Slice extends Graphics {\n\n\tdeclare public _settings: ISliceSettings;\n\tdeclare public _privateSettings: ISlicePrivate;\n\n\tpublic static className: string = \"Slice\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Slice.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic ix: number = 0;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic iy: number = 0;\n\n\tprotected _generator = arc();\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipX = this.get(\"tooltipX\");\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif ($type.isNumber(tooltipX)) {\n\t\t\tx = tooltipX;\n\t\t}\n\n\t\tif ($type.isNumber(tooltipY)) {\n\t\t\ty = tooltipY;\n\t\t}\n\n\t\tlet radius = this.get(\"radius\", 0);\n\t\tlet innerRadius = this.get(\"innerRadius\", 0);\n\n\t\tlet dRadius = this.get(\"dRadius\", 0);\n\t\tlet dInnerRadius = this.get(\"dInnerRadius\", 0);\n\n\t\tradius += dRadius;\n\t\tinnerRadius += dInnerRadius;\n\n\t\tif (innerRadius < 0) {\n\t\t\tinnerRadius = radius + innerRadius;\n\t\t}\n\n\t\tif (tooltipX instanceof Percent) {\n\t\t\tx = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value)\n\t\t}\n\n\t\tif (tooltipY instanceof Percent) {\n\t\t\ty = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value)\n\t\t}\n\n\t\tif (this.get(\"arc\") >= 360 && innerRadius == 0) {\n\t\t\tx = 0;\n\t\t\ty = 0;\n\t\t}\n\n\n\t\treturn { x, y };\n\t}\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"shiftRadius\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tlet startAngle = this.get(\"startAngle\", 0);\n\t\t\tlet arc = this.get(\"arc\", 0);\n\t\t\tconst generator = this._generator;\n\n\t\t\tif(arc < 0){\n\t\t\t\tstartAngle = startAngle + arc;\n\t\t\t\tarc = arc * -1;\n\t\t\t}\n\n\t\t\tif(arc > 0.1){ // this fixes bug with full circle when arc is very small\n\t\t\t\tgenerator.cornerRadius(this.get(\"cornerRadius\", 0));\n\t\t\t}\n\t\t\tgenerator.context(this._display as any);\n\n\t\t\tlet radius = this.get(\"radius\", 0);\n\t\t\tlet innerRadius = this.get(\"innerRadius\", 0);\n\n\t\t\tlet dRadius = this.get(\"dRadius\", 0);\n\t\t\tlet dInnerRadius = this.get(\"dInnerRadius\", 0);\n\n\t\t\tradius += dRadius;\n\t\t\tinnerRadius += dInnerRadius;\t\t\t\n\n\t\t\tif (innerRadius < 0) {\n\t\t\t\tinnerRadius = radius + innerRadius;\n\t\t\t}\n\n\t\t\tgenerator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\n\n\t\t\tlet middleAngle = startAngle + arc / 2;\n\n\t\t\tthis.ix = $math.cos(middleAngle);\n\t\t\tthis.iy = $math.sin(middleAngle);\n\n\t\t\tconst shiftRadius = this.get(\"shiftRadius\", 0);\n\t\t\tthis.setRaw(\"dx\", this.ix * shiftRadius);\n\t\t\tthis.setRaw(\"dy\", this.iy * shiftRadius);\t\t\t\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n}\n", "import { Line, ILineSettings, ILinePrivate } from \"./Line\";\n\n\nexport interface ITickSettings extends ILineSettings {\n\n\t/**\n\t * Length in pixels.\n\t */\n\tlength?: number;\n\n\t/**\n\t * Location within target space. 0 - beginning, 1 - end.\n\t */\n\tlocation?: number;\n\n}\n\nexport interface ITickPrivate extends ILinePrivate {\n}\n\n/**\n * Draws a tick element (mostly used on axes).\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n */\nexport class Tick extends Line {\n\n\tdeclare public _settings: ITickSettings;\n\tdeclare public _privateSettings: ITickPrivate;\n\n\tpublic static className: string = \"Tick\";\n\tpublic static classNames: Array<string> = Line.classNames.concat([Tick.className]);\n}\n", "import { Pattern, IPatternSettings, IPatternPrivate } from \"./Pattern\";\r\nimport { Color } from \"../../util/Color\";\r\n\r\nexport interface IGrainPatternSettings extends IPatternSettings {\r\n\r\n\t/**\r\n\t * Size of a grain in pixels.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tsize?: number;\r\n\r\n\t/**\r\n\t * Density of noise.\r\n\t *\r\n\t * Value range: `0` (no noise applied) to `1` (noise is applied to every\r\n\t * pixel).\r\n\t *\r\n\t * The bigger the value, the higher chance that pixel will have another pixel\r\n\t * painted over with random opacity from `minOpacity` to `maxOpacity`.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tdensity?: number;\r\n\r\n\t/**\r\n\t * Minimum opacity of a noise pixel.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tminOpacity?: number;\r\n\r\n\t/**\r\n\t * Maximum opacity of a noise pixel.\r\n\t *\r\n\t * @default 0.3\r\n\t */\r\n\tmaxOpacity?: number;\r\n\r\n\t/**\r\n\t * An array of colors to randomly use for pixels.\r\n\t *\r\n\t * @default [color(0x000000)]\r\n\t */\r\n\tcolors?: Array<Color>;\r\n\r\n\t/**\r\n\t * Horizontal gap between noise pixels measured in `size`.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\thorizontalGap?: number;\r\n\r\n\t/**\r\n\t * Vertical gap between noise pixels measured in `size`.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tverticalGap?: number;\r\n\r\n}\r\n\r\nexport interface IGrainPatternPrivate extends IPatternPrivate {\r\n}\r\n\r\n/**\r\n * Grain pattern.\r\n * \r\n * Allows to add grain (noise) effect to your [[Graphics]] objects.\r\n * \r\n * Note, grain pattern does not support `fill` and `color` setting.\r\n * Use `colors` setting to define colors of a grain pixels.\r\n * \r\n * Note, rotation setting is not supported by this pattern.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Grain_patterns} for more info\r\n * @since 5.5.0\r\n */\r\nexport class GrainPattern extends Pattern {\r\n\tdeclare public _settings: IGrainPatternSettings;\r\n\tdeclare public _privateSettings: IGrainPatternPrivate;\r\n\r\n\tpublic static className: string = \"GrainPattern\";\r\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([GrainPattern.className]);\r\n\r\n\tpublic canvas: HTMLCanvasElement = document.createElement(\"canvas\");\r\n\tpublic context: CanvasRenderingContext2D = this.canvas.getContext(\"2d\")!;\r\n\r\n\tprotected _clearGrain: boolean = false;\r\n\r\n\tpublic _beforeChanged() {\r\n\t\t//document.body.appendChild(this.canvas); // temp\r\n\t\tthis.canvas.width = this.get(\"width\", 200);\r\n\t\tthis.canvas.height = this.get(\"height\", 200);\r\n\r\n\t\tif (this.isDirty(\"size\") || this.isDirty(\"density\") || this.isDirty(\"minOpacity\") || this.isDirty(\"maxOpacity\") || this.isDirty(\"colors\") || this.isDirty(\"horizontalGap\") || this.isDirty(\"verticalGap\")) {\r\n\t\t\tthis._clearGrain = true;\r\n\t\t}\r\n\t\tsuper._beforeChanged();\r\n\t}\r\n\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clearGrain) {\r\n\t\t\tconst width = this.get(\"width\", 200);\r\n\t\t\tconst height = this.get(\"height\", 200);\r\n\r\n\t\t\tconst patternData = this.context.getImageData(0, 0, width, height);\r\n\r\n\t\t\tconst size = Math.max(1, this.get(\"size\", 1));\r\n\t\t\tconst minOpacity = this.get(\"minOpacity\", 0);\r\n\t\t\tconst maxOpacity = this.get(\"maxOpacity\", 0.3);\r\n\r\n\t\t\tconst colors = this.get(\"colors\", [this.get(\"color\", Color.fromHex(0x000000))])\r\n\r\n\t\t\tconst cols = width / size;\r\n\t\t\tconst rows = height / size;\r\n\t\t\tconst density = this.get(\"density\", 1);\r\n\t\t\tconst horizontalGap = this.get(\"horizontalGap\", 0) + 1;\r\n\t\t\tconst verticalGap = this.get(\"verticalGap\", 0) + 1;\r\n\r\n\t\t\tfor (let r = 0; r < rows; r++) {\r\n\r\n\t\t\t\tif (verticalGap > 0) {\r\n\t\t\t\t\tif (r / verticalGap != Math.round(r / verticalGap)) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let c = 0; c < cols; c++) {\r\n\t\t\t\t\tconst color = colors[Math.floor(Math.random() * colors.length)];\r\n\t\t\t\t\tconst alpha = (minOpacity + Math.random() * (maxOpacity - minOpacity)) * 255;\r\n\t\t\t\t\tconst rnd = Math.random();\r\n\r\n\t\t\t\t\tif (horizontalGap > 0) {\r\n\t\t\t\t\t\tif (c / horizontalGap != Math.round(c / horizontalGap)) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (rnd < density) {\r\n\t\t\t\t\t\tthis._setRectData(c, r, size, width, patternData.data, color.r, color.g, color.b, alpha);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.context.putImageData(patternData, 0, 0);\r\n\t\t\tthis._pattern = this.context.createPattern(this.canvas, \"repeat\");\r\n\t\t}\r\n\r\n\t\tthis._clearGrain = false;\r\n\t}\r\n\r\n\tprotected _checkDirtyFill() {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected _setRectData(col: number, row: number, size: number, width: number, data: Uint8ClampedArray, rc: number, gc: number, bc: number, ac: number) {\r\n\t\tfor (var c = col * size; c < col * size + size; c++) {\r\n\t\t\tfor (var r = row * size; r < row * size + size; r++) {\r\n\t\t\t\tvar i = (r * width + c) * 4;\r\n\r\n\t\t\t\tdata[i] = rc;\r\n\t\t\t\tdata[i + 1] = gc;\r\n\t\t\t\tdata[i + 2] = bc;\r\n\t\t\t\tdata[i + 3] = ac;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "import type { IGradient } from \"../backend/Renderer\";\nimport type { Sprite } from \"../Sprite\";\nimport type { Percent } from \"../../util/Percent\";\n\nimport { Gradient, IGradientSettings, IGradientPrivate } from \"./Gradient\";\nimport { Color } from \"../../util/Color\";\n\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\nimport * as $utils from \"../../util/Utils\";\n\n\nexport interface IRadialGradientSettings extends IGradientSettings {\n\n\t/**\n\t * Gradient radius in pixels or percent (relative to the `target`).\n\t */\n\tradius?: number | Percent;\n\n\t/**\n\t * X position.\n\t */\n\tx?: number | Percent;\n\n\t/**\n\t * Y position.\n\t */\n\ty?: number | Percent;\n\n}\n\nexport interface IRadialGradientPrivate extends IGradientPrivate {\n}\n\n/**\n * Radial gradient.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport class RadialGradient extends Gradient {\n\n\tdeclare public _settings: IRadialGradientSettings;\n\tdeclare public _privateSettings: IRadialGradientPrivate;\n\n\tpublic static className: string = \"RadialGradient\";\n\tpublic static classNames: Array<string> = Gradient.classNames.concat([RadialGradient.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getFill(target: Sprite): IGradient {\n\t\tconst bounds = this.getBounds(target);\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tlet l = bounds.left || 0;\n\t\tlet r = bounds.right || 0;\n\t\tlet t = bounds.top || 0;\n\t\tlet b = bounds.bottom || 0;\n\n\t\tconst width = r - l;\n\t\tconst height = b - t;\n\n\t\tlet radius = target.get(\"radius\" as any);\n\t\tif ($type.isNumber(radius)) {\n\t\t\tx = 0;\n\t\t\ty = 0;\n\t\t}\n\t\telse {\n\t\t\tradius = Math.min(width, height) / 2;\n\t\t\tx = width / 2;\n\t\t\ty = height / 2;\n\t\t}\n\n\t\tlet ux = this.get(\"x\");\n\t\tlet uy = this.get(\"y\");\n\t\tif (ux != null) {\n\t\t\tx = $utils.relativeToValue(ux, width);\n\t\t}\n\n\t\tif (uy != null) {\n\t\t\ty = $utils.relativeToValue(uy, height);\n\t\t}\n\n\t\tconst gradient = this._root._renderer.createRadialGradient(x, y, 0, x, y, radius);\n\t\tconst stops = this.get(\"stops\")!;\n\t\tif (stops) {\n\t\t\tlet i = 0;\n\t\t\t$array.each(stops, (stop) => {\n\n\t\t\t\tlet offset = stop.offset;\n\n\t\t\t\tif (!$type.isNumber(offset)) {\n\t\t\t\t\toffset = i / (stops.length - 1);\n\t\t\t\t}\n\n\t\t\t\tlet opacity = stop.opacity;\n\n\t\t\t\tif (!$type.isNumber(opacity)) {\n\t\t\t\t\topacity = 1;\n\t\t\t\t}\n\n\t\t\t\tlet color = stop.color;\n\n\t\t\t\tif (color) {\n\n\t\t\t\t\tconst lighten = stop.lighten;\n\t\t\t\t\tif (lighten) {\n\t\t\t\t\t\tcolor = Color.lighten(color, lighten)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst brighten = stop.brighten;\n\t\t\t\t\tif (brighten) {\n\t\t\t\t\t\tcolor = Color.brighten(color, brighten)\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t})\n\t\t}\n\n\t\treturn gradient\n\t}\n}\n", "import { Pattern, IPatternSettings, IPatternPrivate } from \"./Pattern\";\n\nimport * as $math from \"../../util/Math\";\n\nexport interface ICirclePatternSettings extends IPatternSettings {\n\n\t/**\n\t * Gap between circles, in pixels.\n\t *\n\t * @default 3\n\t */\n\tgap?: number;\n\n\t/**\n\t * Radius of the circles, in pixels.\n\t *\n\t * @default 3\n\t */\n\tradius?: number;\n\n\t/**\n\t * If set to `true`, will place every second circle, creating checkered\n\t * pattern.\n\t *\n\t * @default false\n\t */\n\tcheckered?: boolean;\n\n\t/**\n\t * Center circles.\n\t *\n\t * @default true\n\t */\n\tcentered?: boolean;\n\n}\n\nexport interface ICirclePatternPrivate extends IPatternPrivate {\n}\n\n/**\n * Circle pattern.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class CirclePattern extends Pattern {\n\n\tdeclare public _settings: ICirclePatternSettings;\n\tdeclare public _privateSettings: ICirclePatternPrivate;\n\n\tpublic static className: string = \"CirclePattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([CirclePattern.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"gap\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\n\t\tconst checkered = this.get(\"checkered\", false);\n\t\tconst centered = this.get(\"centered\", true);\n\t\tconst gap = this.get(\"gap\", 0);\n\t\tconst rotation = this.get(\"rotation\", 0);\n\t\tlet w = this.get(\"width\", 100);\n\t\tlet h = this.get(\"height\", 100);\n\t\tlet radius = this.get(\"radius\", 3);\n\n\t\tlet cellW = radius * 2 + gap;\n\t\tlet cellH = radius * 2 + gap;\n\n\t\tlet cols = Math.round(w / cellW);\n\t\tlet rows = Math.round(h / cellH);\n\n\t\tcellW = w / cols;\n\t\tcellH = h / rows;\n\n\t\tif (rotation != 0) {\n\t\t\t// @todo this is probably not right\n\t\t\tthis._display.x = cellW * $math.cos(rotation);\n\t\t\tthis._display.y = cellH * $math.sin(rotation);\n\t\t}\n\n\t\tconst color = this.get(\"color\");\n\t\tconst colorOpacity = this.get(\"colorOpacity\");\n\t\tif (color || colorOpacity) {\n\t\t\tthis._display.beginFill(color, colorOpacity);\n\t\t}\n\n\t\tfor (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\n\t\t\tfor (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\n\t\t\t\tif (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\n\t\t\t\t\tlet x = c * cellW;\n\t\t\t\t\tlet y = r * cellH;\n\t\t\t\t\tif (centered) {\n\t\t\t\t\t\tx += cellW + gap / 2;\n\t\t\t\t\t\ty += cellH + gap / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis._display.drawCircle(x - radius, y - radius, radius);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (checkered) {\n\t\t\tw = w / 2 - gap * 2;\n\t\t\th = h / 2 - gap * 2;\n\t\t}\n\t\telse {\n\t\t\tw -= gap;\n\t\t\th -= gap;\n\t\t}\n\n\t\tif (color || colorOpacity) {\n\t\t\tthis._display.endFill();\n\t\t}\n\n\t}\n}\n", "import { Pattern, IPatternSettings, IPatternPrivate } from \"./Pattern\";\nimport * as $type from \"../../util//Type\";\n\nexport interface ILinePatternSettings extends IPatternSettings {\n\n\t/**\n\t * Gap between  lines, in pixels.\n\t *\n\t * @default 6\n\t */\n\tgap?: number;\n\n}\n\nexport interface ILinePatternPrivate extends IPatternPrivate {\n}\n\n/**\n * Line pattern.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class LinePattern extends Pattern {\n\n\tdeclare public _settings: ILinePatternSettings;\n\tdeclare public _privateSettings: ILinePatternPrivate;\n\n\tpublic static className: string = \"LinePattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([LinePattern.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"gap\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\n\t\tconst w = this.get(\"width\", 100);\n\t\tconst h = this.get(\"height\", 100);\n\t\tconst gap = this.get(\"gap\", 0);\n\t\tconst strokeWidth = this.get(\"strokeWidth\", 1);\n\n\t\tif (!gap) {\n\t\t\tthis._display.moveTo(0, 0);\n\t\t\tthis._display.lineTo(w, 0);\n\t\t}\n\t\telse {\n\t\t\tlet step = gap + strokeWidth;\n\t\t\tlet count = h / step;\n\n\t\t\tfor (let i = -count; i < count * 2; i++) {\n\t\t\t\tconst y = Math.round(i * step - step / 2) + 0.5;\n\t\t\t\tthis._display.moveTo(-w, y);\n\t\t\t\tthis._display.lineTo(w * 2, y);\n\t\t\t}\n\t\t}\n\n\t\tthis._display.lineStyle(strokeWidth, this.get(\"color\"), this.get(\"colorOpacity\"));\n\n\t\tlet strokeDasharray = this.get(\"strokeDasharray\");\n\t\tif ($type.isNumber(strokeDasharray)) {\n\t\t\tif (strokeDasharray < 0.5) {\n\t\t\t\tstrokeDasharray = [0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tstrokeDasharray = [strokeDasharray]\n\t\t\t}\n\t\t}\n\t\tthis._display.setLineDash(strokeDasharray as number[]);\n\n\t\tconst strokeDashoffset = this.get(\"strokeDashoffset\");\n\t\tif (strokeDashoffset) {\n\t\t\tthis._display.setLineDashOffset(strokeDashoffset);\n\t\t}\n\n\t\tthis._display.endStroke();\n\t}\n}\n", "import { Pattern, IPatternSettings, IPatternPrivate } from \"./Pattern\";\n\nimport * as $math from \"../../util/Math\";\n\nexport interface IRectanglePatternSettings extends IPatternSettings {\n\n\t/**\n\t * Gap between rectangles, in pixels.\n\t *\n\t * @default 6\n\t */\n\tgap?: number;\n\n\t/**\n\t * Maximum width of the rectangle, in pixels.\n\t *\n\t * @default 5\n\t */\n\tmaxWidth?: number;\n\n\t/**\n\t * Maximum height of the rectangle, in pixels.\n\t *\n\t * @default 5\n\t */\n\tmaxHeight?: number;\n\n\t/**\n\t * If set to `true`, will place every second rectangle, creating checkered\n\t * pattern.\n\t *\n\t * @default false\n\t */\n\tcheckered?: boolean;\n\n\t/**\n\t * Center rectangles.\n\t *\n\t * @default true\n\t */\n\tcentered?: boolean;\n\n}\n\nexport interface IRectanglePatternPrivate extends IPatternPrivate {\n}\n\n/**\n * Rectangle pattern.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class RectanglePattern extends Pattern {\n\tdeclare public _settings: IRectanglePatternSettings;\n\tdeclare public _privateSettings: IRectanglePatternPrivate;\n\n\tpublic static className: string = \"RectanglePattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([RectanglePattern.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"gap\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\n\t\tconst checkered = this.get(\"checkered\", false);\n\t\tconst centered = this.get(\"centered\", true);\n\t\tconst gap = this.get(\"gap\", 0);\n\t\tconst rotation = this.get(\"rotation\", 0);\n\t\tlet w = this.get(\"width\", 100);\n\t\tlet h = this.get(\"height\", 100);\n\t\tlet rectW = this.get(\"maxWidth\", 5);\n\t\tlet rectH = this.get(\"maxHeight\", 5);\n\n\t\tconst display = this._display;\n\n\t\tlet cellW = rectW + gap;\n\t\tlet cellH = rectH + gap;\n\n\t\tlet cols = Math.round(w / cellW);\n\t\tlet rows = Math.round(h / cellH);\n\n\t\tcellW = w / cols;\n\t\tcellH = h / rows;\n\n\t\tif (rotation != 0) {\n\t\t\t// @todo this is probably not right\n\t\t\tdisplay.x = cellW / 2 * $math.cos(rotation);\n\t\t\tdisplay.y = -cellH / 2 * $math.sin(rotation);\n\t\t}\n\n\t\tfor (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\n\t\t\tfor (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\n\t\t\t\tif (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\n\t\t\t\t\tlet x = c * cellW;\n\t\t\t\t\tlet y = r * cellH;\n\t\t\t\t\tif (centered) {\n\t\t\t\t\t\tx += (cellW - rectW) / 2;\n\t\t\t\t\t\ty += (cellH - rectH) / 2;\n\t\t\t\t\t}\n\t\t\t\t\tdisplay.drawRect(x, y, rectW, rectH);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (checkered) {\n\t\t\tw = w / 2 - gap * 2;\n\t\t\th = h / 2 - gap * 2;\n\t\t}\n\t\telse {\n\t\t\tw -= gap;\n\t\t\th -= gap;\n\t\t}\n\n\t\tconst color = this.get(\"color\");\n\t\tconst colorOpacity = this.get(\"colorOpacity\");\n\t\tif (color || colorOpacity) {\n\t\t\t// this._display.lineStyle(strokeWidth, stroke, colorOpacity);\n\t\t\t// this._display.endStroke();\n\t\t\tdisplay.beginFill(color, colorOpacity);\n\t\t\tdisplay.endFill();\n\t\t}\n\n\t}\n}\n", "import { Pattern, IPatternSettings, IPatternPrivate } from \"./Pattern\";\n\n//import * as $math from \"../../util/Math\";\n\nexport interface IPathPatternSettings extends IPatternSettings {\n\n\t// /**\n\t//  * Gap between Paths, in pixels.\n\t//  *\n\t//  * @default 6\n\t//  */\n\t// gap?: number;\n\n\t// /**\n\t//  * Maximum width of the Path, in pixels.\n\t//  *\n\t//  * @default 5\n\t//  */\n\t// maxWidth?: number;\n\n\t// /**\n\t//  * Maximum height of the Path, in pixels.\n\t//  *\n\t//  * @default 5\n\t//  */\n\t// maxHeight?: number;\n\n\t// /**\n\t//  * If set to `true`, will place every second Path, creating checkered\n\t//  * pattern.\n\t//  *\n\t//  * @default false\n\t//  */\n\t// checkered?: boolean;\n\n\t// /**\n\t//  * Center image.\n\t//  *\n\t//  * @default true\n\t//  */\n\t// centered?: boolean;\n\n\t/**\n\t * Use an SVG path as pattern.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths} for more information\n\t */\n\tsvgPath?: string;\n\n}\n\nexport interface IPathPatternPrivate extends IPatternPrivate {\n}\n\n/**\n * A pattern that uses an SVG path.\n *\n * @since 5.2.33\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class PathPattern extends Pattern {\n\tdeclare public _settings: IPathPatternSettings;\n\tdeclare public _privateSettings: IPathPatternPrivate;\n\n\tpublic static className: string = \"PathPattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([PathPattern.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"svgPath\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\n\t\t// const checkered = this.get(\"checkered\", false);\n\t\t// const centered = this.get(\"centered\", true);\n\t\t// const gap = this.get(\"gap\", 0);\n\t\t// const rotation = this.get(\"rotation\", 0);\n\t\t// let w = this.get(\"width\", 100);\n\t\t// let h = this.get(\"height\", 100);\n\t\t// let rectW = this.get(\"maxWidth\", 5);\n\t\t// let rectH = this.get(\"maxHeight\", 5);\n\n\n\t\t// let cellW = rectW + gap;\n\t\t// let cellH = rectH + gap;\n\n\t\t// let cols = Math.round(w / cellW);\n\t\t// let rows = Math.round(h / cellH);\n\n\t\t// cellW = w / cols;\n\t\t// cellH = h / rows;\n\n\t\t// if (rotation != 0) {\n\t\t// \t// @todo this is probably not right\n\t\t// \tthis._display.x = cellW / 2 * $math.cos(rotation);\n\t\t// \tthis._display.y = -cellH / 2 * $math.sin(rotation);\n\t\t// }\n\n\t\t// for (let r = rotation == 0 ? 0 : -rows * 2; r < rows * 2; r++) {\n\t\t// \tfor (let c = rotation == 0 ? 0 : -cols * 2; c < cols * 2; c++) {\n\t\t// \t\tif (!checkered || ((r & 1) != 1 && (c & 1) != 1) || ((r & 1) == 1 && (c & 1) == 1)) {\n\t\t// \t\t\tlet x = c * cellW;\n\t\t// \t\t\tlet y = r * cellH;\n\t\t// \t\t\tif (centered) {\n\t\t// \t\t\t\tx += (cellW - rectW) / 2;\n\t\t// \t\t\t\ty += (cellH - rectH) / 2;\n\t\t// \t\t\t}\n\t\t// \t\t\tthis._display.drawRect(x, y, rectW, rectH);\n\t\t// \t\t}\n\t\t// \t}\n\t\t// }\n\n\t\t// if (checkered) {\n\t\t// \tw = w / 2 - gap * 2;\n\t\t// \th = h / 2 - gap * 2;\n\t\t// }\n\t\t// else {\n\t\t// \tw -= gap;\n\t\t// \th -= gap;\n\t\t// }\n\n\t\tconst svgPath = this.get(\"svgPath\");\n\t\tif (svgPath != null) {\n\t\t\tthis._display.svgPath(svgPath!);\n\t\t}\n\n\t\tconst color = this.get(\"color\");\n\t\tconst colorOpacity = this.get(\"colorOpacity\");\n\t\tif (color || colorOpacity) {\n\t\t\t// this._display.lineStyle(strokeWidth, stroke, colorOpacity);\n\t\t\t// this._display.endStroke();\n\t\t\tthis._display.beginFill(color, colorOpacity);\n\t\t\tthis._display.endFill();\n\t\t}\n\n\t}\n}\n", "import type { Pattern } from \"../render/patterns/Pattern\";\nimport type { Color } from \"./Color\";\n\nimport { LinePattern, ILinePatternSettings } from \"../render/patterns/LinePattern\";\nimport { RectanglePattern, IRectanglePatternSettings } from \"../render/patterns/RectanglePattern\";\nimport { CirclePattern, ICirclePatternSettings } from \"../render/patterns/CirclePattern\";\nimport { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\";\n\n\nexport interface IPatternSetSettings extends IEntitySettings {\n\n\t/**\n\t * List of colors in the set.\n\t */\n\tpatterns?: Pattern[];\n\n\t/**\n\t * A step size when using `next()`.\n\t *\n\t * E.g. setting to `2` will make it return every second pattern in the list.\n\t *\n\t * @default 1\n\t */\n\tstep?: number;\n\n\t/**\n\t * A base color to use for all patterns.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tcolor?: Color;\n\n\t/**\n\t * Start iterating patterns from specific index.\n\t */\n\tstartIndex?: number;\n\n}\n\nexport interface IPatternSetPrivate extends IEntityPrivate {\n\n\t/**\n\t * Current step.\n\t */\n\tcurrentStep?: number;\n\n}\n\n\n/**\n * An object which holds list of [[Pattern]] objects and can serve them up in\n * an interative way.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Pattern_sets} for more info\n * @since 5.10.0\n */\nexport class PatternSet extends Entity {\n\tpublic static className: string = \"PatternSet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([PatternSet.className]);\n\n\tdeclare public _settings: IPatternSetSettings;\n\tdeclare public _privateSettings: IPatternSetPrivate;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because pattern set will not have parent\n\t\tsuper._afterNewApplyThemes();\n\n\t\tif (this.get(\"patterns\", []).length === 0) {\n\t\t\tconst color = this.get(\"color\", this.root.interfaceColors.get(\"stroke\"));\n\t\t\tthis.set(\"patterns\", [\n\t\t\t\tthis.getLinePattern({\n\t\t\t\t\twidth: 1000,\n\t\t\t\t\theight: 1000,\n\t\t\t\t\trotation: 45,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\t//gap: 6,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getRectanglePattern({\n\t\t\t\t\twidth: 10,\n\t\t\t\t\theight: 10,\n\t\t\t\t\trotation: 0,\n\t\t\t\t\tmaxWidth: 4,\n\t\t\t\t\tmaxHeight: 4,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getLinePattern({\n\t\t\t\t\twidth: 1000,\n\t\t\t\t\theight: 1000,\n\t\t\t\t\trotation: -45,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tgap: 6,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getCirclePattern({\n\t\t\t\t\twidth: 11,\n\t\t\t\t\theight: 11,\n\t\t\t\t\tradius: 2,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getLinePattern({\n\t\t\t\t\twidth: 6,\n\t\t\t\t\theight: 6,\n\t\t\t\t\trotation: 90,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getRectanglePattern({\n\t\t\t\t\twidth: 14,\n\t\t\t\t\theight: 14,\n\t\t\t\t\trotation: 45,\n\t\t\t\t\tgap: 4,\n\t\t\t\t\tmaxWidth: 6,\n\t\t\t\t\tmaxHeight: 6,\n\t\t\t\t\tcheckered: true,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getLinePattern({\n\t\t\t\t\twidth: 6,\n\t\t\t\t\theight: 6,\n\t\t\t\t\trotation: 0,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getRectanglePattern({\n\t\t\t\t\twidth: 15,\n\t\t\t\t\theight: 15,\n\t\t\t\t\trotation: 0,\n\t\t\t\t\tgap: 5,\n\t\t\t\t\tmaxWidth: 5,\n\t\t\t\t\tmaxHeight: 5,\n\t\t\t\t\tcheckered: true,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getLinePattern({\n\t\t\t\t\twidth: 1000,\n\t\t\t\t\theight: 1000,\n\t\t\t\t\trotation: 45,\n\t\t\t\t\tstrokeWidth: 2,\n\t\t\t\t\tgap: 3,\n\t\t\t\t\tstrokeDasharray: [4, 2],\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getCirclePattern({\n\t\t\t\t\twidth: 20,\n\t\t\t\t\theight: 20,\n\t\t\t\t\tradius: 3,\n\t\t\t\t\tgap: 4,\n\t\t\t\t\tcheckered: true,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getLinePattern({\n\t\t\t\t\twidth: 1000,\n\t\t\t\t\theight: 1000,\n\t\t\t\t\trotation: -45,\n\t\t\t\t\tstrokeWidth: 2,\n\t\t\t\t\tgap: 3,\n\t\t\t\t\tstrokeDasharray: [4, 2],\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getRectanglePattern({\n\t\t\t\t\twidth: 10,\n\t\t\t\t\theight: 10,\n\t\t\t\t\trotation: 0,\n\t\t\t\t\tgap: 1,\n\t\t\t\t\tmaxWidth: 9,\n\t\t\t\t\tmaxHeight: 9,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getLinePattern({\n\t\t\t\t\twidth: 1000,\n\t\t\t\t\theight: 1000,\n\t\t\t\t\trotation: -45,\n\t\t\t\t\tstrokeWidth: 2,\n\t\t\t\t\tgap: 1,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getLinePattern({\n\t\t\t\t\twidth: 1000,\n\t\t\t\t\theight: 1000,\n\t\t\t\t\trotation: 45,\n\t\t\t\t\tstrokeWidth: 2,\n\t\t\t\t\tgap: 1,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getLinePattern({\n\t\t\t\t\twidth: 1000,\n\t\t\t\t\theight: 1000,\n\t\t\t\t\trotation: 0,\n\t\t\t\t\tstrokeWidth: 3,\n\t\t\t\t\tgap: 1,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t\tthis.getLinePattern({\n\t\t\t\t\twidth: 1000,\n\t\t\t\t\theight: 1000,\n\t\t\t\t\trotation: 90,\n\t\t\t\t\tstrokeWidth: 3,\n\t\t\t\t\tgap: 1,\n\t\t\t\t\tcolor: color\n\t\t\t\t}),\n\t\t\t])\n\t\t}\n\n\t\tthis._dirty[\"patterns\"] = false;\n\n\t}\n\n\tpublic _beforeChanged(): void {\n\t\tif (this.isDirty(\"patterns\")) {\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\t/**\n\t * Returns a [[Pattern]] at specific index.\n\t *\n\t * @param   index  Index\n\t * @return         Color\n\t */\n\tpublic getIndex(index: number): Pattern {\n\t\tconst patterns = this.get(\"patterns\", []);\n\n\t\tif ((index < patterns.length) && patterns[index] !== null) {\n\t\t\treturn patterns[index];\n\t\t}\n\n\n\n\t\tif (index > (patterns.length - 1)) {\n\t\t\tconst adjustedIndex = index - Math.floor(index * (index / patterns.length));\n\t\t\treturn patterns[adjustedIndex];\n\t\t}\n\t\treturn patterns[index];\n\t}\n\n\t/**\n\t * Returns next [[Color]] in the list.\n\t *\n\t * If the list is out of colors, new ones are generated dynamically.\n\t */\n\tpublic next(): Pattern {\n\t\tlet currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n\t\tthis.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\n\t\treturn this.getIndex(currentStep);\n\t}\n\n\t/**\n\t * Resets counter to the start of the list, so the next call for `next()` will\n\t * return the first pattern.\n\t */\n\tpublic reset(): void {\n\t\tthis.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n\t}\n\n\t/**\n\t * Returns a [[LinePattern].\n\t *\n\t * @param   settings  Pattern settings\n\t * @return            Pattern object\n\t */\n\tpublic getLinePattern(settings: ILinePatternSettings): LinePattern {\n\t\tlet pattern = LinePattern.new(this.root, settings);\n\t\treturn pattern;\n\t}\n\n\t/**\n\t * Returns a [[RectanglePattern].\n\t *\n\t * @param   settings  Pattern settings\n\t * @return            Pattern object\n\t */\n\tpublic getRectanglePattern(settings: IRectanglePatternSettings): RectanglePattern {\n\t\tlet pattern = RectanglePattern.new(this.root, settings);\n\t\treturn pattern;\n\t}\n\n\t/**\n\t * Returns a [[CirclePattern].\n\t *\n\t * @param   settings  Pattern settings\n\t * @return            Pattern object\n\t */\n\tpublic getCirclePattern(settings: ICirclePatternSettings): CirclePattern {\n\t\tlet pattern = CirclePattern.new(this.root, settings);\n\t\treturn pattern;\n\t}\n\n}", "import { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\";\nimport { Color } from \"./Color\";\n\n\nexport interface IColorSetSettings extends IEntitySettings {\n\n\t/**\n\t * List of colors in the set.\n\t */\n\tcolors?: Color[];\n\n\t/**\n\t * A step size when using `next()`.\n\t *\n\t * E.g. setting to `2` will make it return every second color in the list.\n\t *\n\t * @default 1\n\t */\n\tstep?: number;\n\n\t/**\n\t * Start iterating colors from specific index.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * If set to `true`, color set will reuse existing colors from the list\n\t * inestead of generating new ones.\n\t *\n\t * @default false\n\t */\n\treuse?: boolean;\n\n\t/**\n\t * A base color to generate new colors from if `colors` is not specified.\n\t * @type {[type]}\n\t */\n\tbaseColor?: Color;\n\n\t/**\n\t * A set of tranformation to apply to base list of colors when the set runs\n\t * out of colors and generates additional ones.\n\t */\n\tpassOptions?: IColorSetStepOptions;\n\n\t/**\n\t * If set, each returned color will be applied saturation.\n\t */\n\tsaturation?: number;\n\n\t// count?: number;\n}\n\nexport interface IColorSetPrivate extends IEntityPrivate {\n\n\tcurrentStep?: number;\n\tcurrentPass?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tnumColors?: number;\n\n}\n\nexport interface IColorSetStepOptions {\n\n\t/**\n\t * Value to add to \"hue\".\n\t */\n\thue?: number;\n\n\t/**\n\t * Value to add to \"saturation\".\n\t */\n\tsaturation?: number;\n\n\t/**\n\t * Value to add to \"lightness\".\n\t */\n\tlightness?: number;\n\n}\n\n\n/**\n * An object which holds list of colors and can generate new ones.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Color_sets} for more info\n */\nexport class ColorSet extends Entity {\n\tpublic static className: string = \"ColorSet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([ColorSet.className]);\n\n\tdeclare public _settings: IColorSetSettings;\n\tdeclare public _privateSettings: IColorSetPrivate;\n\n\t//protected _currentPass: number = 0;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because color set will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t\tthis._dirty[\"colors\"] = false;\n\t}\n\n\tpublic _beforeChanged(): void {\n\t\tif (this.isDirty(\"colors\")) {\n\t\t\tthis.reset();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic generateColors(): void {\n\t\tthis.setPrivate(\"currentPass\", this.getPrivate(\"currentPass\", 0) + 1)\n\t\tconst pass = this.getPrivate(\"currentPass\");\n\t\tconst colors = this.get(\"colors\", [this.get(\"baseColor\", Color.fromHex(0xff0000))]);\n\t\tif (!this.getPrivate(\"numColors\")) {\n\t\t\tthis.setPrivate(\"numColors\", colors.length);\n\t\t}\n\t\t//const len = colors.length;\n\t\tconst len = this.getPrivate(\"numColors\")!;\n\t\t//const start = len - this.getPrivate(\"numColors\")!;\n\t\tconst start = 0;\n\t\tconst passOptions = this.get(\"passOptions\")!;\n\t\tconst reuse = this.get(\"reuse\");\n\t\tfor (let i = start; i < len; i++) {\n\t\t\tif (reuse) {\n\t\t\t\tcolors.push(colors[i])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst hsl = colors[i]!.toHSL();\n\t\t\t\tlet h = hsl.h + (passOptions.hue || 0) * pass!;\n\t\t\t\twhile (h > 1) h -= 1;\n\n\t\t\t\tlet s = hsl.s + (passOptions.saturation || 0) * pass!;\n\t\t\t\t//if (s > 1) s -= Math.floor(s);\n\t\t\t\tif (s > 1) s = 1;\n\t\t\t\tif (s < 0) s = 0;\n\n\t\t\t\tlet l = hsl.l + (passOptions.lightness || 0) * pass!;\n\t\t\t\t//if (l > 1) l -= Math.floor(l);\n\t\t\t\twhile (l > 1) l -= 1;\n\t\t\t\tcolors.push(Color.fromHSL(h, s, l));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a [[Color]] at specific index.\n\t *\n\t * If there's no color at this index, a new color is generated.\n\t *\n\t * @param   index  Index\n\t * @return         Color\n\t */\n\tpublic getIndex(index: number): Color {\n\t\tconst colors = this.get(\"colors\", []);\n\t\tconst saturation = this.get(\"saturation\");\n\t\tif (index >= colors.length) {\n\t\t\tthis.generateColors();\n\t\t\treturn this.getIndex(index);\n\t\t}\n\n\t\treturn saturation != null ? Color.saturate(colors[index], saturation!) : colors[index];\n\t}\n\n\t/**\n\t * Returns next [[Color]] in the list.\n\t *\n\t * If the list is out of colors, new ones are generated dynamically.\n\t */\n\tpublic next() {\n\t\tlet currentStep = this.getPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n\t\tthis.setPrivate(\"currentStep\", currentStep + this.get(\"step\", 1));\n\t\treturn this.getIndex(currentStep);\n\t}\n\n\t/**\n\t * Resets counter to the start of the list, so the next call for `next()` will\n\t * return the first color.\n\t */\n\tpublic reset() {\n\t\tthis.setPrivate(\"currentStep\", this.get(\"startIndex\", 0));\n\t\tthis.setPrivate(\"currentPass\", 0);\n\t}\n}\n", "import * as $type from \"./Type\"\nimport * as $object from \"./Object\"\n\nexport interface IJSONParserOptions {\n\n\t/**\n\t * Reverse the order of parsed data.\n\t */\n\treverse?: boolean;\n\n}\n\n/**\n * Tool to parse JSON string into structured data.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Parsing} for more info\n * @important\n */\nexport class JSONParser {\n\n\t/**\n\t * Parses JSON string.\n\t * \n\t * @param   input    JSON\n\t * @param   options  Options\n\t * @return           Data\n\t */\n\tpublic static parse(input: string, options?: IJSONParserOptions): any {\n\t\toptions = this._applyDefaults(options);\n\t\ttry {\n\t\t\tif ($type.isString(input)) {\n\t\t\t\tlet data  = JSON.parse(input);\n\t\t\t\tif (options.reverse && $type.isArray(data)) {\n\t\t\t\t\tdata.reverse();\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\telse if ($type.isArray(input) || $type.isObject(input)) {\n\t\t\t\treturn input;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow(\"Unable to parse JSON data\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprotected static _applyDefaults(options?: IJSONParserOptions): IJSONParserOptions {\n\t\tconst normalized: IJSONParserOptions = {};\n\t\tconst defaults = {\n\t\t\treverse: false\n\t\t};\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\t\t$object.each(defaults, (key, val) => {\n\t\t\tnormalized[key] = options![key] || val;\n\t\t});\n\t\treturn normalized;\n\t}\n}\n\n\nexport interface ICSVParserOptions {\n\n\t/**\n\t * Delimiter used for columns.\n\t * \n\t * @default \",\"\n\t */\n\tdelimiter?: string;\n\n\t/**\n\t * Reverse the order of parsed data.\n\t */\n\treverse?: boolean;\n\n\t/**\n\t * Skip first X rows.\n\t *\n\t * @default 0\n\t */\n\tskipRows?: number;\n\n\t/**\n\t * Skip empty rows.\n\t *\n\t * @default true\n\t */\n\tskipEmpty?: boolean;\n\n\t/**\n\t * Use the first row to name the columns.\n\t * \n\t * @default false\n\t */\n\tuseColumnNames?: boolean;\n\n}\n\n/**\n * Tool to parse JSON string into structured data.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Parsing} for more info\n * @important\n */\nexport class CSVParser {\n\n\t/**\n\t * Parses CSV string.\n\t * \n\t * @param   input    CSV\n\t * @param   options  Options\n\t * @return           Data\n\t */\n\tpublic static parse(input: string, options?: ICSVParserOptions): any {\n\t\toptions = this._applyDefaults(options);\n\n\t\t// Get CSV data as array\n\t\tlet data = this.CSVToArray(input, options.delimiter!);\n\n\t\t// Init resuling array\n\t\tlet res: any[] = [],\n\t\t\tcols: string[] = [],\n\t\t\tcol: string,\n\t\t\ti: number;\n\n\t\t// Skip rows\n\t\tfor (i = 0; i < options.skipRows!; i++) {\n\t\t\tdata.shift();\n\t\t}\n\n\t\t// First row holds column names?\n\t\tif (options.useColumnNames) {\n\t\t\tcols = data.shift();\n\n\t\t\t// Normalize column names\n\t\t\tfor (let x = 0; x < cols.length; x++) {\n\t\t\t\t// trim\n\t\t\t\tcol = cols[x] != null ? cols[x].replace(/^\\s+|\\s+$/gm, \"\") : \"\";\n\n\t\t\t\t// Check for empty\n\t\t\t\tif (\"\" === col) {\n\t\t\t\t\tcol = \"col\" + x;\n\t\t\t\t}\n\n\t\t\t\tcols[x] = col;\n\t\t\t}\n\t\t}\n\n\t\t// Iterate through the result set\n\t\tlet row;\n\t\twhile (true) {\n\t\t\trow = options.reverse ? data.pop() : data.shift();\n\n\t\t\tif (!row) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (options.skipEmpty && row.length === 1 && row[0] === \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet dataPoint: any = {};\n\t\t\tfor (i = 0; i < row.length; i++) {\n\t\t\t\tcol = undefined === cols[i] ? \"col\" + i : cols[i];\n\t\t\t\tdataPoint[col] = row[i];\n\t\t\t}\n\t\t\tres.push(dataPoint);\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic static CSVToArray(data: string, delimiter: string): any[] {\n\n\t\t// Check to see if the delimiter is defined. If not,\n\t\t// then default to comma.\n\t\tdelimiter = (delimiter || ',');\n\n\t\t// Create a regular expression to parse the CSV values.\n\t\tlet objPattern = new RegExp(\n\t\t\t(\n\t\t\t\t// Delimiters.\n\t\t\t\t\"(\\\\\" + delimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n\n\t\t\t\t// Quoted fields.\n\t\t\t\t\"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\n\n\t\t\t\t// Standard fields.\n\t\t\t\t\"([^\\\"\\\\\" + delimiter + \"\\\\r\\\\n]*))\"\n\t\t\t),\n\t\t\t\"gi\"\n\t\t);\n\n\n\t\t// Create an array to hold our data. Give the array\n\t\t// a default empty first row.\n\t\tlet arrData: any[] = [\n\t\t\t[]\n\t\t];\n\n\t\t// Create an array to hold our individual pattern\n\t\t// matching groups.\n\t\tlet arrMatches = null;\n\n\t\t// Keep looping over the regular expression matches\n\t\t// until we can no longer find a match.\n\t\twhile (true) {\n\t\t\tarrMatches = objPattern.exec(data);\n\n\t\t\tif (!arrMatches) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Get the delimiter that was found.\n\t\t\tlet strMatchedDelimiter = arrMatches[1];\n\n\t\t\t// Check to see if the given delimiter has a length\n\t\t\t// (is not the start of string) and if it matches\n\t\t\t// field delimiter. If id does not, then we know\n\t\t\t// that this delimiter is a row delimiter.\n\t\t\tif (\n\t\t\t\tstrMatchedDelimiter.length &&\n\t\t\t\t(strMatchedDelimiter !== delimiter)\n\t\t\t) {\n\n\t\t\t\t// Since we have reached a new row of data,\n\t\t\t\t// add an empty row to our data array.\n\t\t\t\tarrData.push([]);\n\n\t\t\t}\n\n\t\t\t// Now that we have our delimiter out of the way,\n\t\t\t// let's check to see which kind of value we\n\t\t\t// captured (quoted or unquoted).\n\t\t\tlet strMatchedValue;\n\t\t\tif (arrMatches[2]) {\n\n\t\t\t\t// We found a quoted value. When we capture\n\t\t\t\t// this value, unescape any double quotes.\n\t\t\t\tstrMatchedValue = arrMatches[2].replace(\n\t\t\t\t\tnew RegExp(\"\\\"\\\"\", \"g\"),\n\t\t\t\t\t\"\\\"\"\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\t// We found a non-quoted value.\n\t\t\t\tstrMatchedValue = arrMatches[3];\n\n\t\t\t}\n\n\t\t\t// Now that we have our value string, let's add\n\t\t\t// it to the data array.\n\t\t\tarrData[arrData.length - 1].push(strMatchedValue);\n\t\t}\n\n\t\t// Return the parsed data.\n\t\treturn (arrData);\n\t}\n\n\tprotected static _applyDefaults(options?: ICSVParserOptions): ICSVParserOptions {\n\t\tconst normalized: ICSVParserOptions = {};\n\t\tconst defaults = {\n\t\t\tdelimiter: \",\",\n\t\t\treverse: false,\n\t\t\tskipRows: 0,\n\t\t\tskipEmpty: true,\n\t\t\tuseColumnNames: false\n\t\t};\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\t\t$object.each(defaults, (key, val) => {\n\t\t\tnormalized[key] = options![key] || val;\n\t\t});\n\t\treturn normalized;\n\n\t}\n\n}", "import { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"./Entity\"\nimport { Color } from \"./Color\"\nimport * as $type from \"./Type\"\nimport * as $object from \"./Object\"\nimport * as $array from \"./Array\"\n\n\nexport interface IDataProcessorSettings extends IEntitySettings {\n\n\t/**\n\t * Date format used for parsing string-based dates.\n\t */\n\tdateFormat?: string;\n\n\t/**\n\t * A list of fields in data that need to be converted to tiemstamps.\n\t */\n\tdateFields?: string[];\n\n\t/**\n\t * A list of fields in data that need to be converted to numbers.\n\t */\n\tnumericFields?: string[];\n\n\t/**\n\t * A list of fields in data that need to be converted to [[Color]] objects.\n\t */\n\tcolorFields?: string[];\n\n\t/**\n\t * Replace empty values with this.\n\t */\n\temptyAs?: any;\n\n}\n\nexport interface IDataProcessorPrivate extends IEntityPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tdeepFields?: string[];\n}\n\nexport interface IDataProcessorEvents extends IEntityEvents {\n}\n\n/**\n * A tool that can process the data before it is being used in charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n * @important\n */\nexport class DataProcessor extends Entity {\n\tdeclare public _settings: IDataProcessorSettings;\n\tdeclare public _privateSettings: IDataProcessorPrivate;\n\n\tprotected _checkDates: boolean = false;\n\tprotected _checkNumbers: boolean = false;\n\tprotected _checkColors: boolean = false;\n\tprotected _checkEmpty: boolean = false;\n\tprotected _checkDeep: boolean = false;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._checkFeatures();\n\t\tthis.on(\"dateFields\", () => this._checkFeatures());\n\t\tthis.on(\"dateFormat\", () => this._checkFeatures());\n\t\tthis.on(\"numericFields\", () => this._checkFeatures());\n\t\tthis.on(\"colorFields\", () => this._checkFeatures());\n\t\tthis.on(\"emptyAs\", () => this._checkFeatures());\n\t}\n\n\tprotected _checkFeatures(): void {\n\t\tif (this.isDirty(\"dateFields\") || this.isDirty(\"dateFormat\")) {\n\t\t\tthis._checkDates = this.get(\"dateFields\") && (this.get(\"dateFields\")!.length > 0);\n\t\t}\n\t\tif (this.isDirty(\"numericFields\")) {\n\t\t\tthis._checkNumbers = this.get(\"numericFields\") && (this.get(\"numericFields\")!.length > 0);\n\t\t}\n\t\tif (this.isDirty(\"colorFields\")) {\n\t\t\tthis._checkColors = this.get(\"colorFields\") && (this.get(\"colorFields\")!.length > 0);\n\t\t}\n\t\tif (this.isDirty(\"emptyAs\")) {\n\t\t\tthis._checkEmpty = this.get(\"emptyAs\") != null;\n\t\t}\n\t\tthis._checkDeepFeatures();\n\t}\n\n\tprotected _checkDeepFeatures(): void {\n\t\tconst deepFields: string[] = [];\n\t\t$array.each([\"dateFields\", \"numericFields\", \"colorFields\"], (where: any) => {\n\t\t\t$array.each(this.get(where, []), (field) => {\n\t\t\t\tconst steps = (<string>field).split(\".\");\n\t\t\t\tsteps.pop();\n\t\t\t\twhile (steps.length > 0) {\n\t\t\t\t\tdeepFields.push(steps.join(\".\"));\n\t\t\t\t\tsteps.pop();\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t\tthis._checkDeep = deepFields.length > 0;\n\t\tthis.setPrivate(\"deepFields\", deepFields);\n\t}\n\n\t/**\n\t * Processess entire array of data.\n\t *\n\t * NOTE: calling this will modify original array!\n\t */\n\tpublic processMany(data: { [index: string]: any }[]): void {\n\t\tif ($type.isArray(data) && (this._checkDates || this._checkNumbers || this._checkColors || this._checkEmpty)) {\n\t\t\t$array.each(data, (row) => {\n\t\t\t\tthis.processRow(row);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Processes a row (object) of data.\n\t * \n\t * NOTE: calling this will modify values of the original object!\n\t */\n\tpublic processRow(row: { [index: string]: any }, prefix: string = \"\"): void {\n\t\t$object.each(row, (key: any, _value) => {\n\t\t\tconst lookupKey: string = prefix + key;\n\t\t\tif (this._checkEmpty) {\n\t\t\t\trow[key] = this._maybeToEmpty(row[key]);\n\t\t\t}\n\t\t\tif (this._checkNumbers) {\n\t\t\t\trow[key] = this._maybeToNumber(lookupKey, row[key]);\n\t\t\t}\n\t\t\tif (this._checkDates) {\n\t\t\t\trow[key] = this._maybeToDate(lookupKey, row[key]);\n\t\t\t}\n\t\t\tif (this._checkColors) {\n\t\t\t\trow[key] = this._maybeToColor(lookupKey, row[key]);\n\t\t\t}\n\t\t\tif (this._checkDeep && (<any>this).getPrivate(\"deepFields\", []).indexOf(lookupKey) !== -1 && $type.isObject(row[key])) {\n\t\t\t\tthis.processRow(row[key], lookupKey + \".\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _maybeToNumber(field: string, value: any): any {\n\t\tif (this.get(\"numericFields\")!.indexOf(field) !== -1) {\n\t\t\treturn $type.toNumber(value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tprotected _maybeToDate(field: string, value: any): any {\n\t\tif (this.get(\"dateFields\")!.indexOf(field) !== -1) {\n\t\t\treturn this._root.dateFormatter.parse(value, this.get(\"dateFormat\", \"\")).getTime();\n\t\t}\n\t\treturn value;\n\t}\n\n\tprotected _maybeToEmpty(value: any): any {\n\t\tif ((value == null || value == \"\") && this.get(\"emptyAs\") != null) {\n\t\t\treturn this.get(\"emptyAs\");\n\t\t}\n\t\treturn value;\n\t}\n\n\tprotected _maybeToColor(field: string, value: any): any {\n\t\tif (this.get(\"colorFields\")!.indexOf(field) !== -1) {\n\t\t\treturn Color.fromAny(value);\n\t\t}\n\t\treturn value;\n\t}\n\n}\n", "import type { Sprite, ISpritePointerEvent } from \"./Sprite\";\r\nimport type { IDisposer } from \"../util/Disposer\";\r\nimport type { Template } from \"../util/Template\";\r\n\r\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"./Container\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { color } from \"../util/Color\";\r\n\r\nimport * as $math from \"../util/Math\";\r\n\r\nexport interface ISpriteResizerSettings extends IContainerSettings {\r\n\r\n\t/**\r\n\t * Target [[Sprite]] element.\r\n\t */\r\n\tsprite?: Sprite\r\n\r\n\t/**\r\n\t * Target [[Template]]. If a template is set, scale and rotation will be set on Template instead of a Sprite.\r\n\t */\r\n\tspriteTemplate?: Template<Sprite>\r\n\r\n\t/**\r\n\t * Rotation increment in degrees.\r\n\t * \r\n\t * @default 10\r\n\t */\r\n\trotationStep?: number;\r\n\r\n}\r\n\r\nexport interface ISpriteResizerPrivate extends IContainerPrivate {\r\n\r\n}\r\n\r\nexport interface ISpriteResizerEvents extends IContainerEvents {\r\n\r\n}\r\n\r\nexport class SpriteResizer extends Container {\r\n\r\n\tdeclare public _settings: ISpriteResizerSettings;\r\n\tdeclare public _privateSettings: ISpriteResizerPrivate;\r\n\tdeclare public _events: ISpriteResizerEvents;\r\n\r\n\tpublic static className: string = \"SpriteResizer\";\r\n\tpublic static classNames: Array<string> = Container.classNames.concat([SpriteResizer.className]);\r\n\r\n\tpublic readonly rectangle: Rectangle = this.children.push(Rectangle.new(this._root, { themeTags: [\"rectangle\"], fillOpacity: 0, fill: color(0xFFFFFF) }));\r\n\tpublic readonly gripL: Container = this._createGrip(\"left\");\r\n\tpublic readonly gripR: Container = this._createGrip(\"right\");\r\n\tpublic readonly gripT: Container = this._createGrip(\"top\");\r\n\tpublic readonly gripB: Container = this._createGrip(\"bottom\");\r\n\r\n\tprotected _is: number = 1;\r\n\tprotected _ix: number = 0;\r\n\tprotected _iw: number = 0;\r\n\r\n\tprotected _positionDP?: IDisposer;\r\n\r\n\tprotected _isHover: boolean = false;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.addTag(\"resizer\");\r\n\t\tthis.set(\"visible\", false);\r\n\r\n\t\tthis.gripL.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._resize(e.target, -1);\r\n\t\t})\r\n\r\n\t\tthis.gripR.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._resize(e.target, 1);\r\n\t\t})\r\n\r\n\t\tthis.gripL.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\r\n\t\tthis.gripR.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\r\n\t\tthis.gripT.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._rotate(e, 90);\r\n\t\t})\r\n\r\n\t\tthis.gripB.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._rotate(e, -90);\r\n\t\t})\r\n\r\n\t\tthis.gripT.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\r\n\t\tthis.gripB.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _resizeStart(grip: Sprite) {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tif (sprite) {\r\n\t\t\tthis._is = sprite.get(\"scale\", 1);\r\n\t\t\tthis._ix = grip.x();\r\n\t\t\tthis._iw = this.width() / 2;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _resize(grip: Sprite, c: number) {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tconst spriteTemplate = this.get(\"spriteTemplate\");\r\n\t\tif (sprite) {\r\n\t\t\tconst scale = Math.max(0.01, this._is * (1 + c * (grip.x() - this._ix) / this._iw));\r\n\t\t\tif (spriteTemplate) {\r\n\t\t\t\tspriteTemplate.set(\"scale\", scale);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsprite.set(\"scale\", scale);\r\n\t\t\t}\r\n\t\t\tsprite.states.lookup(\"default\")!.set(\"scale\", scale);\r\n\t\t\tthis._updatePositions();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _rotate(e: ISpritePointerEvent, delta: number) {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tconst spriteTemplate = this.get(\"spriteTemplate\");\r\n\t\tif (sprite) {\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif (parent) {\r\n\r\n\t\t\t\tconst rotationStep = this.get(\"rotationStep\", 10);\r\n\t\t\t\tlet angle = Math.round((($math.getAngle({ x: this.x(), y: this.y() }, parent.toLocal(e.point)) + delta) / rotationStep)) * rotationStep;\r\n\t\t\t\tif (spriteTemplate) {\r\n\t\t\t\t\tspriteTemplate.set(\"rotation\", angle);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsprite.set(\"rotation\", angle);\r\n\t\t\t\t}\r\n\t\t\t\tsprite.states.lookup(\"default\")!.set(\"rotation\", angle);\r\n\t\t\t\tthis._updatePositions();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _createGrip(themeTag: string) {\r\n\t\tconst container = this.children.push(Container.new(this._root, {\r\n\t\t\tthemeTags: [\"grip\", themeTag],\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tdraggable: true\r\n\t\t}))\r\n\r\n\t\tcontainer.children.push(RoundedRectangle.new(this._root, {\r\n\t\t\tthemeTags: [\"outline\"],\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50\r\n\t\t}))\r\n\r\n\t\tcontainer.children.push(RoundedRectangle.new(this._root, {\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50\r\n\t\t}));\r\n\t\treturn container;\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"sprite\")) {\r\n\t\t\tconst sprite = this.get(\"sprite\");\r\n\t\t\tif (sprite) {\r\n\t\t\t\tthis.show(0);\r\n\t\t\t\tthis.setPrivate(\"visible\", true);\r\n\r\n\t\t\t\tthis._updatePositions();\r\n\r\n\t\t\t\tconst parent = sprite.parent;\r\n\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tparent.children.moveValue(this, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._positionDP = sprite.events.on(\"positionchanged\", () => {\r\n\t\t\t\t\tthis._updatePositions();\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis._positionDP = sprite.events.on(\"boundschanged\", () => {\r\n\t\t\t\t\tthis._updatePositions();\r\n\t\t\t\t})\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hide(0);\r\n\t\t\t\tthis.setPrivate(\"visible\", false);\r\n\r\n\t\t\t\tif (this._positionDP) {\r\n\t\t\t\t\tthis._positionDP.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\")) {\r\n\t\t\tthis._updatePositions();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updatePositions() {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tif (sprite) {\r\n\t\t\tlet bounds = sprite.localBounds();\r\n\t\t\tlet scale = sprite.get(\"scale\", 1);\r\n\t\t\tlet d = 20\r\n\t\t\tlet w = (bounds.right - bounds.left) * scale + d;\r\n\t\t\tlet h = (bounds.bottom - bounds.top) * scale + d;\r\n\t\t\tlet a = sprite.get(\"rotation\", 0);\r\n\r\n\t\t\tconst rectangle = this.rectangle;\r\n\r\n\t\t\tlet cx = sprite.get(\"centerX\", p50);\r\n\t\t\tlet cy = sprite.get(\"centerY\", p50);\r\n\r\n\t\t\tlet cxr = 0;\r\n\t\t\tif (cx instanceof Percent) {\r\n\t\t\t\tcxr = cx.value;\r\n\t\t\t}\r\n\r\n\t\t\tlet cyr = 0;\r\n\t\t\tif (cy instanceof Percent) {\r\n\t\t\t\tcyr = cy.value;\r\n\t\t\t}\r\n\r\n\t\t\trectangle.setAll({ centerX: cx, centerY: cy, width: w, height: h });\r\n\t\t\tthis.setAll({ x: sprite.x() + d * (cxr - 0.5) * $math.cos(a) - d * (cyr - 0.5) * $math.sin(a), y: sprite.y() + d * (cyr - 0.5) * $math.cos(a) + d * (cxr - 0.5) * $math.sin(a), width: w, height: h, rotation: a });\r\n\r\n\t\t\tthis.gripT.setAll({ x: (0.5 - cxr) * w, y: -cyr * h });\r\n\t\t\tthis.gripB.setAll({ x: (0.5 - cxr) * w, y: (1 - cyr) * h });\r\n\t\t\tthis.gripL.setAll({ x: -cxr * w, y: (0.5 - cyr) * h });\r\n\t\t\tthis.gripR.setAll({ x: (1 - cxr) * w, y: (0.5 - cyr) * h });\r\n\r\n\t\t\tthis.rectangle.setAll({ width: w, height: h });\r\n\t\t}\r\n\t}\r\n}\r\n", "/**\n * A collection of network-related functions\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport type { Optional } from \"./Type\";\n\n/**\n * Defines an interface for objects that hold a net request result.\n */\nexport interface INetLoadResult<A> {\n\n\t/**\n\t * A reference to original [[XMLHttpRequest]].\n\t */\n\txhr: XMLHttpRequest;\n\n\t/**\n\t * Request response body.\n\t */\n\tresponse?: string;\n\n\t/**\n\t * Request response as Blob. (if set `responseType = \"blob\"`)\n\t */\n\tblob?: Blob;\n\n\t/**\n\t * Response `Content-Type`.\n\t */\n\ttype: string | null;\n\n\t/**\n\t * Was there an error?\n\t */\n\terror: boolean;\n\n\t/**\n\t * A target object that made the net load request.\n\t */\n\ttarget?: A;\n\n}\n\nexport interface INetRequestOptions {\n\n\t/**\n\t * Custom request headers to be added to HTTP(S) request.\n\t */\n\trequestHeaders?: { key: string, value: string }[];\n\n\t/**\n\t * Specify expected response type.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType} for more info\n\t */\n\tresponseType?: XMLHttpRequestResponseType;\n\n\t/**\n\t * Specify whether to send CORS credentials (defaults to `false`).\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials} for more info\n\t */\n\twithCredentials?: boolean;\n}\n\n/**\n * Loads an external file via its URL.\n *\n * Please note that this is an asynchronous function.\n *\n * It will not return the result, but rather a `Promise`.\n *\n * You can use the `await` notion, or `then()`.\n *\n * ```TypeScript\n * // Using await\n * let response = await Net.load( \"http://www.my.com/data.json\" );\n * console.log( response.response );\n *\n * // Using then()\n * Net.load( \"http://www.my.com/data.json\" ).then( ( response ) => {\n *   console.log( response.response );\n * } );\n * ```\n * ```JavaScript\n * // Using then()\n * Net.load( \"http://www.my.com/data.json\" ).then( function( response ) {\n *   console.log( response.response );\n * } );\n * ```\n *\n * @async\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/net-load-utility/} for more info\n * @param url      URL for the file to load\n * @param target   A target element that is requesting the net load\n * @param options  Request options\n * @return Result (Promise)\n */\nexport function load<A>(url: string, target?: A, options?: INetRequestOptions): Promise<INetLoadResult<A>> {\n\treturn new Promise<INetLoadResult<A>>((success, error) => {\n\n\t\t// Is return type Blob?\n\t\tlet isBlob = options != null && options.responseType == \"blob\";\n\n\t\t// Create request and set up handlers\n\t\tlet xhr = new XMLHttpRequest();\n\t\txhr.onload = () => {\n\t\t\tif (xhr.status === 200) {\n\n\t\t\t\tlet response: Optional<string>;\n\t\t\t\tlet blob: Optional<Blob>;\n\n\t\t\t\tif (isBlob) {\n\t\t\t\t\tblob = xhr.response;\n\t\t\t\t\treadBlob(blob!).then((response: any) => {\n\t\t\t\t\t\tlet output: INetLoadResult<A> = {\n\t\t\t\t\t\t\txhr: xhr,\n\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t\tresponse: response,\n\t\t\t\t\t\t\tblob: blob,\n\t\t\t\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\n\t\t\t\t\t\t\ttarget: target\n\t\t\t\t\t\t};\n\t\t\t\t\t\tsuccess(output);\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresponse = xhr.responseText || xhr.response\n\t\t\t\t}\n\n\t\t\t\tlet output: INetLoadResult<A> = {\n\t\t\t\t\txhr: xhr,\n\t\t\t\t\terror: false,\n\t\t\t\t\tresponse: response,\n\t\t\t\t\tblob: blob,\n\t\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\n\t\t\t\t\ttarget: target\n\t\t\t\t};\n\t\t\t\tsuccess(output);\n\t\t\t}\n\t\t\telse {\n\t\t\t\terror({\n\t\t\t\t\txhr: xhr,\n\t\t\t\t\terror: true,\n\t\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\n\t\t\t\t\ttarget: target\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\txhr.onerror = () => {\n\t\t\terror({\n\t\t\t\txhr: xhr,\n\t\t\t\terror: true,\n\t\t\t\ttype: xhr.getResponseHeader(\"Content-Type\"),\n\t\t\t\ttarget: target\n\t\t\t});\n\t\t};\n\n\t\t// Open request\n\t\txhr.open(\"GET\", url, true);\n\n\t\tif (options && options.withCredentials) {\n\t\t\txhr.withCredentials = true;\n\t\t}\n\n\t\t// Process options\n\t\tif (options != null) {\n\n\t\t\tif (options.requestHeaders != null) {\n\t\t\t\tfor (let i = 0; i < options.requestHeaders.length; i++) {\n\t\t\t\t\tlet header = options.requestHeaders[i];\n\t\t\t\t\txhr.setRequestHeader(header.key, header.value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.responseType != null) {\n\t\t\t\txhr.responseType = options.responseType;\n\t\t\t}\n\t\t}\n\n\t\t// Send request\n\t\txhr.send();\n\n\t});\n\n}\n\n/**\n * Returns textual representation of a Blob object.\n *\n * @param   blob  Target blob\n * @return        Text promise\n */\nexport function readBlob(blob: Blob): Promise<string> {\n\treturn new Promise<string>((success, error) => {\n\t\tconst reader = new FileReader()\n\n\t\treader.onload = _event => {\n\t\t\tsuccess(<string>reader.result);\n\t\t}\n\n\t\treader.onerror = (e) => {\n\t\t\terror(e);\n\t\t}\n\n\t\treader.readAsText(blob);\n\t});\n}\n"],
  "mappings": "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",
  "names": ["x", "x", "y", "fill", "x", "y", "copy", "each", "a", "k", "x", "x", "each", "x", "value", "eachContinue", "each", "x", "a", "x", "y", "mapToEllipse", "x", "y", "approxUnitArc", "a", "vectorAngle", "sign", "getArcCenter", "arcToBezier", "a", "x", "point", "p0", "color", "y", "blur", "path", "line", "_index", "metrics", "height", "w", "deltaAngle", "each", "ev", "canvas", "a", "group", "x", "y", "point", "each", "copy", "point", "p0", "cos", "sin", "color", "color", "a", "s", "len", "point", "point", "sin", "cos", "x", "y", "point", "x", "cos", "sin", "x", "pi", "tau", "epsilon", "k", "x", "y", "path", "cos", "sin", "p0", "a", "x", "y", "a", "sin", "cos", "sqrt3", "sqrt3", "x", "y", "x", "y", "x", "y", "x", "y", "beta", "point", "x", "y", "custom", "tension", "x", "y", "point", "custom", "tension", "x", "y", "point", "custom", "tension", "point", "x", "y", "x2", "y2", "a", "custom", "alpha", "x", "y", "point", "custom", "alpha", "x", "y", "point", "custom", "alpha", "x", "y", "x", "point", "y", "x", "y", "a", "x", "y", "x", "y", "color", "x", "y", "color", "color", "x", "y", "y", "x", "y", "color", "color", "color", "s", "each", "x", "each", "a", "response", "output"]
}
