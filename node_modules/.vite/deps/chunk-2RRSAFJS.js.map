{
  "version": 3,
  "sources": ["../../src/.internal/core/util/Percent.ts", "../../src/.internal/core/util/Utils.ts", "../../tslib/tslib.es6.mjs", "../../src/.internal/core/util/Animation.ts", "../../src/.internal/core/util/Color.ts", "../../src/.internal/core/util/List.ts", "../../src/.internal/core/util/Math.ts", "../../src/.internal/core/util/Ease.ts", "../../src/.internal/core/Registry.ts", "../../src/.internal/core/util/States.ts", "../../src/.internal/core/util/Entity.ts", "../../src/.internal/core/render/Sprite.ts", "../../src/.internal/core/render/patterns/Pattern.ts", "../../src/.internal/core/render/patterns/PicturePattern.ts", "../../src/.internal/core/render/backend/Renderer.ts", "../../src/.internal/core/render/Graphics.ts", "../../src/.internal/core/render/Rectangle.ts", "../../src/.internal/core/render/Layout.ts", "../../src/.internal/core/render/HorizontalLayout.ts", "../../src/.internal/core/render/VerticalLayout.ts", "../../src/.internal/core/render/GridLayout.ts", "../../src/.internal/core/util/TextFormatter.ts", "../../src/.internal/core/util/Children.ts", "../../src/.internal/core/util/PopulateString.ts", "../../src/.internal/core/render/Container.ts", "../../src/.internal/core/render/Text.ts", "../../src/.internal/core/render/Label.ts", "../../src/.internal/core/render/RoundedRectangle.ts", "../../src/.internal/core/render/Button.ts", "../../src/.internal/core/util/Data.ts", "../../src/.internal/core/render/Component.ts", "../../src/.internal/core/render/ZoomableContainer.ts", "../../src/.internal/core/util/Time.ts", "../../src/.internal/core/render/Series.ts", "../../src/.internal/core/render/Chart.ts", "../../src/.internal/core/render/SerialChart.ts", "../../src/.internal/core/render/ZoomTools.ts", "../../src/.internal/themes/DefaultTheme.ts"],
  "sourcesContent": ["/**\n * ============================================================================\n * MAIN CLASS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Represents a relative value (percent).\n *\n * The Percent object, can be instantiated using two ways:\n *\n * * Via `new Percent(X)`.\n * * Via `am5.percent(X)`.\n *\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\n * * `am5.p0`\n * * `am5.p50`\n * * `am5.p100`\n */\nexport class Percent {\n\n\t/**\n\t * Value in percent.\n\t */\n\tprotected _value: number;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param percent  Percent value\n\t */\n\tconstructor(percent: number) {\n\t\tthis._value = percent;\n\t}\n\n\t/**\n\t * Relative value.\n\t *\n\t * E.g. 100% is 1, 50% is 0.5, etc.\n\t *\n\t * This is useful to apply transformations to other values. E.g.:\n\t *\n\t * ```TypeScript\n\t * let value = 256;\n\t * let percent = new am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t * ```JavaScript\n\t * var value = 256;\n\t * var percent = new am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t *\n\t * Alternatively, you can use `am5.percent()` helper function:\n\t *\n\t * ```TypeScript\n\t * let value = 256;\n\t * let percent = am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t * ```JavaScript\n\t * var value = 256;\n\t * var percent = am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t *\n\t * @readonly\n\t * @return Relative value\n\t */\n\tpublic get value(): number {\n\t\treturn this._value / 100;\n\t}\n\n\t/**\n\t * Value in percent.\n\t *\n\t * @readonly\n\t * @return Percent\n\t */\n\tpublic get percent(): number {\n\t\treturn this._value;\n\t}\n\n\tpublic toString(): string {\n\t\treturn \"\" + this._value + \"%\";\n\t}\n\n\tpublic interpolate(min: number, max: number): number {\n\t\treturn min + (this.value * (max - min));\n\t}\n\n\tstatic normalize(percent: Percent | number, min: number, max: number): Percent {\n\t\tif (percent instanceof Percent) {\n\t\t\treturn percent;\n\n\t\t} else {\n\t\t\tif (min === max) {\n\t\t\t\treturn new Percent(0);\n\n\t\t\t} else {\n\t\t\t\treturn new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*public toNumber(): number {\n\t\treturn this.percent;\n\t}*/\n\n}\n\n\n/**\n * Converts numeric percent value to a proper [[Percent]] object.\n *\n * ```TypeScript\n * pieSeries.set(\"radius\", am5.percent(80));\n * ```\n * ```JavaScript\n * pieSeries.set(\"radius\", am5.percent(80));\n * ```\n *\n * @param value  Percent\n * @return Percent object\n */\nexport function percent(value: number): Percent {\n\treturn new Percent(value);\n}\n\n/**\n * A shortcut function to `am5.percent(0)`.\n */\nexport const p0 = percent(0);\n\n/**\n * A shortcut function to `am5.percent(100)`.\n */\nexport const p100 = percent(100);\n\n/**\n * A shortcut function to `am5.percent(50)`.\n */\nexport const p50 = percent(50);\n\n\n/**\n * Checks if value is a [[Percent]] object.\n *\n * @ignore Exclude from docs\n * @param value  Input value\n * @return Is percent?\n */\nexport function isPercent(value: any): boolean {\n\treturn value instanceof Percent;\n}\n", "import type { Percent } from \"./Percent\";\nimport type { IPointerEvent } from \"../render/backend/Renderer\";\nimport type { Sprite } from \"../render/Sprite\";\n\nimport * as $type from \"./Type\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\nimport type { IBounds } from \"./IBounds\";\n\nimport { Disposer, DisposerClass, IDisposer } from \"./Disposer\";\n\n/**\n * ============================================================================\n * DOM FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Execute a function when DOM is ready.\n *\n * @since 5.0.2\n * @param  f  Callback\n */\nexport function ready(f: () => void): void {\n\tif (document.readyState !== \"loading\") {\n\t\tf();\n\n\t} else {\n\t\tconst listener = () => {\n\t\t\tif (document.readyState !== \"loading\") {\n\t\t\t\tdocument.removeEventListener(\"readystatechange\", listener);\n\t\t\t\tf();\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener(\"readystatechange\", listener);\n\t}\n}\n\n/**\n * Removes a DOM element.\n * @param  el  Target element\n */\nexport function removeElement(el: HTMLElement): void {\n\tif (el.parentNode) {\n\t\tel.parentNode.removeChild(el);\n\t}\n}\n\n/**\n * Function that adds a disposable event listener directly to a DOM element.\n *\n * @ignore Exclude from docs\n * @param dom       A DOM element to add event to\n * @param type      Event type\n * @param listener  Event listener\n * @returns Disposable event\n */\nexport function addEventListener<E extends Event>(dom: EventTarget, type: string, listener: (event: E) => void, options?: any): IDisposer {\n\t//@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\n\tdom.addEventListener(type, <EventListener>listener, options || false);\n\n\treturn new Disposer(() => {\n\t\tdom.removeEventListener(type, <EventListener>listener, options || false);\n\t});\n}\n\n/**\n * Function that adds an event listener which is triggered when the browser's zoom changes.\n *\n * @param listener  Event listener\n * @returns Disposable event\n */\nexport function onZoom(listener: () => void): IDisposer {\n\t// TODO use matchMedia instead ?\n\treturn addEventListener(window, \"resize\", (_ev) => {\n\t\tlistener();\n\t});\n}\n\n/**\n * @ignore\n */\nexport function supports(cap: \"touchevents\" | \"pointerevents\" | \"mouseevents\" | \"wheelevents\" | \"keyboardevents\"): boolean {\n\tswitch (cap) {\n\t\tcase \"touchevents\":\n\t\t\t//return \"ontouchstart\" in document.documentElement;\n\t\t\treturn window.hasOwnProperty(\"TouchEvent\");\n\n\t\tcase \"pointerevents\":\n\t\t\treturn window.hasOwnProperty(\"PointerEvent\");\n\n\t\tcase \"mouseevents\":\n\t\t\treturn window.hasOwnProperty(\"MouseEvent\");\n\n\t\tcase \"wheelevents\":\n\t\t\treturn window.hasOwnProperty(\"WheelEvent\");\n\n\t\tcase \"keyboardevents\":\n\t\t\treturn window.hasOwnProperty(\"KeyboardEvent\");\n\t}\n\treturn false;\n}\n\n/**\n * @ignore\n */\nexport function getPointerId(event: IPointerEvent) {\n\tlet id = (<any>event).pointerId || 0;\n\treturn id;\n}\n\n/**\n * Removes focus from any element by shifting focus to body.\n *\n * @ignore\n */\nexport function blur(): void {\n\tif (document.activeElement && document.activeElement != document.body) {\n\t\tif ((<any>document.activeElement).blur) {\n\t\t\t(<any>document.activeElement).blur();\n\t\t}\n\t\telse {\n\t\t\tlet input = document.createElement(\"button\");\n\t\t\tinput.style.position = \"fixed\";\n\t\t\tinput.style.top = \"0px\";\n\t\t\tinput.style.left = \"-10000px\";\n\t\t\tdocument.body.appendChild(input);\n\t\t\tinput.focus();\n\t\t\tinput.blur();\n\t\t\tdocument.body.removeChild(input);\n\t\t}\n\t}\n}\n\n/**\n * Focuses element.\n *\n * @ignore\n */\nexport function focus(el: HTMLElement): void {\n\tif (el) {\n\t\tel.focus();\n\t}\n}\n\n/**\n * @ignore\n */\nexport function getRendererEvent(key: string): string {\n\tif (supports(\"pointerevents\")) {\n\t\treturn key;\n\t}\n\telse if (supports(\"touchevents\")) {\n\t\tswitch (key) {\n\t\t\tcase \"pointerover\": return \"touchstart\";\n\t\t\tcase \"pointerout\": return \"touchend\";\n\t\t\tcase \"pointerleave\": return \"touchend\";\n\t\t\tcase \"pointerdown\": return \"touchstart\";\n\t\t\tcase \"pointermove\": return \"touchmove\";\n\t\t\tcase \"pointerup\": return \"touchend\";\n\t\t\tcase \"click\": return \"click\";\n\t\t\tcase \"dblclick\": return \"dblclick\";\n\n\t\t}\n\t}\n\telse if (supports(\"mouseevents\")) {\n\t\tswitch (key) {\n\t\t\tcase \"pointerover\": return \"mouseover\";\n\t\t\tcase \"pointerout\": return \"mouseout\";\n\t\t\tcase \"pointerleave\": return \"mouseleave\";\n\t\t\tcase \"pointerdown\": return \"mousedown\";\n\t\t\tcase \"pointermove\": return \"mousemove\";\n\t\t\tcase \"pointerup\": return \"mouseup\";\n\t\t\tcase \"click\": return \"click\";\n\t\t\tcase \"dblclick\": return \"dblclick\";\n\n\t\t}\n\t}\n\treturn key;\n}\n\n/**\n * Determines if pointer event originated from a touch pointer or mouse.\n *\n * @param ev  Original event\n * @return Touch pointer?\n */\nexport function isTouchEvent(ev: MouseEvent | Touch): boolean {\n\tif (typeof Touch !== \"undefined\" && ev instanceof Touch) {\n\t\treturn true;\n\t}\n\telse if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && (<any>ev).pointerType != null) {\n\t\tswitch ((<any>ev).pointerType) {\n\t\t\tcase \"touch\":\n\t\t\tcase \"pen\":\n\t\t\tcase 2:\n\t\t\t\treturn true;\n\t\t\tcase \"mouse\":\n\t\t\tcase 4:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn !(ev instanceof MouseEvent);\n\t\t}\n\t}\n\telse if ((<any>ev).type != null) {\n\t\tif ((<any>ev).type.match(/^mouse/)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Sets style property on DOM element.\n *\n * @ignore Exclude from docs\n */\nexport function setStyle(dom: HTMLElement, property: string, value: string | undefined): void {\n\t(<any>dom.style)[property] = value;\n}\n\nexport function getStyle(dom: HTMLElement, property: string): string | undefined {\n\treturn (<any>dom.style)[property];\n}\n\n/**\n * Gets the target of the event, works for shadow DOM too.\n */\nexport function getEventTarget(event: Event | Touch): Node | null {\n\tif ((event as any).composedPath) {\n\t\tconst path = (event as Event).composedPath();\n\n\t\tif (path.length === 0) {\n\t\t\treturn null;\n\n\t\t} else {\n\t\t\treturn path[0] as Node;\n\t\t}\n\n\t} else {\n\t\treturn event.target as Node | null;\n\t}\n}\n\n/**\n * Checks of element `a` contains element `b`.\n *\n * @param a  Aleged ascendant\n * @param b  Aleged descendant\n * @return Contains?\n */\nexport function contains(a: Element, b: Element): boolean {\n\tlet cursor: Node = b;\n\n\twhile (true) {\n\t\tif (a === cursor) {\n\t\t\treturn true;\n\n\t\t} else if (cursor.parentNode === null) {\n\t\t\t// TODO better ShadowRoot detection\n\t\t\tif ((<ShadowRoot>cursor).host == null) {\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\t\t\t\tcursor = (<ShadowRoot>cursor).host;\n\t\t\t}\n\n\t\t} else {\n\t\t\tcursor = cursor.parentNode;\n\t\t}\n\t}\n}\n\n/**\n * Returns `true` if pointer event originated on an element within Root.\n *\n * @since 5.2.8\n * @param  event   Event\n * @param  target  Target element\n */\nexport function isLocalEvent(event: IPointerEvent, target: Sprite) {\n\treturn event.target && contains(target.root.dom, <Element>event.target);\n}\n\n/**\n * Disables or enables interactivity of a DOM element.\n *\n * @param  target       Target element\n * @param  interactive  Interactive?\n */\nexport function setInteractive(target: HTMLElement, interactive: boolean): void {\n\tif (interactive) {\n\t\ttarget.style.pointerEvents = \"auto\";\n\t}\n\telse {\n\t\ttarget.style.pointerEvents = \"none\";\n\t}\n}\n\nexport function getEventKey(event: KeyboardEvent): string {\n\tif (event.key !== undefined) {\n\t\treturn event.key;\n\t}\n\tswitch (event.keyCode) {\n\t\tcase 9: return \"Tab\";\n\t\tcase 13: return \"Enter\";\n\t\tcase 16: return \"Shift\";\n\t\tcase 17: return \"Control\";\n\t\tcase 27: return \"Escape\";\n\t\tcase 32: return \" \";\n\t\tcase 37: return \"ArrowLeft\";\n\t\tcase 38: return \"ArrowUp\";\n\t\tcase 39: return \"ArrowRight\";\n\t\tcase 40: return \"ArrowDown\";\n\t\tcase 46: return \"Delete\";\n\t}\n\treturn \"\" + event.keyCode;\n}\n\n/**\n * Returns the shadow root of the element or null\n *\n * @param a  Node\n * @return Root\n */\nexport function getShadowRoot(a: Node): ShadowRoot | null {\n\tlet cursor: Node = a;\n\n\twhile (true) {\n\t\tif (cursor.parentNode === null) {\n\t\t\t// TODO better ShadowRoot detection\n\t\t\tif ((<ShadowRoot>cursor).host != null) {\n\t\t\t\treturn <ShadowRoot>cursor;\n\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t} else {\n\t\t\tcursor = cursor.parentNode;\n\t\t}\n\t}\n}\n\n/**\n * [rootStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nlet rootStylesheet: $type.Optional<CSSStyleSheet>;\n\n/**\n * @ignore Exclude from docs\n */\nfunction createStylesheet(element: ShadowRoot | null, text: string, nonce: string = \"\"): HTMLStyleElement {\n\t// TODO use createElementNS ?\n\tconst e = document.createElement(\"style\");\n\te.type = \"text/css\";\n\tif (nonce != \"\") {\n\t\te.setAttribute(\"nonce\", nonce)\n\t}\n\te.textContent = text;\n\n\tif (element === null) {\n\t\tdocument.head.appendChild(e);\n\t} else {\n\t\telement.appendChild(e);\n\t}\n\n\treturn e;\n}\n\n/**\n * [getStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @return [description]\n */\nfunction getStylesheet(element: ShadowRoot | null, nonce: string = \"\"): CSSStyleSheet {\n\tif (element === null) {\n\t\tif (rootStylesheet == null) {\n\t\t\t// TODO use createElementNS ?\n\t\t\tconst e = document.createElement(\"style\");\n\t\t\te.type = \"text/css\";\n\t\t\tif (nonce != \"\") {\n\t\t\t\te.setAttribute(\"nonce\", nonce)\n\t\t\t}\n\t\t\tdocument.head.appendChild(e);\n\t\t\trootStylesheet = e.sheet as CSSStyleSheet;\n\t\t}\n\n\t\treturn rootStylesheet;\n\n\t} else {\n\t\t// TODO use createElementNS ?\n\t\tconst e = document.createElement(\"style\");\n\t\te.type = \"text/css\";\n\t\tif (nonce != \"\") {\n\t\t\te.setAttribute(\"nonce\", nonce)\n\t\t}\n\t\telement.appendChild(e);\n\t\treturn e.sheet as CSSStyleSheet;\n\t}\n}\n\n/**\n * [makeStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param selector  [description]\n * @return [description]\n */\nfunction appendStylesheet(root: CSSStyleSheet, selector: string): CSSStyleRule {\n\tconst index = root.cssRules.length;\n\troot.insertRule(selector + \"{}\", index);\n\n\treturn root.cssRules[index] as CSSStyleRule;\n}\n\n/**\n * Defines a class for a CSS rule.\n *\n * Can be used to dynamically add CSS to the document.\n */\nexport class StyleRule extends DisposerClass {\n\tprivate _root: CSSStyleSheet;\n\n\t/**\n\t * CSS rule.\n\t */\n\tprivate _rule: CSSStyleRule;\n\n\t/**\n\t * A CSS selector text.\n\t *\n\t * E.g.: `.myClass p`\n\t *\n\t * @param selector  CSS selector\n\t */\n\tpublic set selector(selector: string) {\n\t\tthis._rule.selectorText = selector;\n\t}\n\n\t/**\n\t * @return CSS selector\n\t */\n\tpublic get selector(): string {\n\t\treturn this._rule.selectorText;\n\t}\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param selector  CSS selector\n\t * @param styles    An object of style attribute - value pairs\n\t */\n\tconstructor(element: ShadowRoot | null, selector: string, styles: { [name: string]: string }, nonce: string = \"\") {\n\t\tsuper();\n\n\t\tthis._root = getStylesheet(element, nonce);\n\n\t\ttry {\n\t\t\tthis._rule = appendStylesheet(this._root, selector);\n\t\t}\n\t\tcatch (err) {\n\t\t\t// Create an empty rule on failed selectors\n\t\t\tthis._rule = appendStylesheet(this._root, \":not(*)\");\n\t\t}\n\n\t\t$object.each(styles, (key, value) => {\n\t\t\tthis.setStyle(<string>key, value);\n\t\t});\n\t}\n\n\t// TODO test this\n\tprotected _dispose(): void {\n\t\t// TODO a bit hacky\n\t\tconst index = $array.indexOf(this._root.cssRules, this._rule);\n\n\t\tif (index === -1) {\n\t\t\tthrow new Error(\"Could not dispose StyleRule\");\n\n\t\t} else {\n\t\t\t// TODO if it's empty remove it from the DOM ?\n\t\t\tthis._root.deleteRule(index);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the same style properties with browser-specific prefixes.\n\t *\n\t * @param name   Attribute name\n\t * @param value  Attribute value\n\t */\n\tprivate _setVendorPrefixName(name: string, value: string): void {\n\t\tconst style = this._rule.style;\n\t\tstyle.setProperty(\"-webkit-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-moz-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-ms-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-o-\" + name, value, \"\");\n\t\tstyle.setProperty(name, value, \"\");\n\t}\n\n\t/**\n\t * Sets a value for specific style attribute.\n\t *\n\t * @param name   Attribute\n\t * @param value  Value\n\t */\n\tpublic setStyle(name: string, value: string): void {\n\t\tif (name === \"transition\") {\n\t\t\tthis._setVendorPrefixName(name, value);\n\n\t\t} else {\n\t\t\tthis._rule.style.setProperty(name, value, \"\");\n\t\t}\n\t}\n}\n\n/**\n * Defines a class for an entire CSS style sheet.\n *\n * Can be used to dynamically add CSS to the document.\n */\nexport class StyleSheet extends DisposerClass {\n\tprivate _element: HTMLStyleElement;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param text  CSS stylesheet\n\t */\n\tconstructor(element: ShadowRoot | null, text: string, nonce: string = \"\") {\n\t\tsuper();\n\t\tthis._element = createStylesheet(element, text, nonce);\n\t}\n\n\tprotected _dispose(): void {\n\t\tif (this._element.parentNode) {\n\t\t\tthis._element.parentNode.removeChild(this._element);\n\t\t}\n\t}\n}\n\n\n/**\n * Adds a class name to an HTML or SVG element.\n *\n * @ignore Exclude from docs\n * @param element    Element\n * @param className  Class name to add\n */\nexport function addClass(element: HTMLElement | SVGElement, className: string): void {\n\tif (!element) {\n\t\treturn;\n\t}\n\tif (element.classList) {\n\t\tconst classes = className.split(\" \");\n\t\t$array.each(classes, (name) => {\n\t\t\telement.classList.add(name);\n\t\t});\n\t}\n\telse {\n\t\tlet currentClassName = element.getAttribute(\"class\");\n\t\tif (currentClassName) {\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\n\t\t\t\treturn item !== className;\n\t\t\t}).join(\" \") + \" \" + className);\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(\"class\", className);\n\t\t}\n\t}\n}\n\n/**\n * Removes a class name from an HTML or SVG element.\n *\n * @ignore Exclude from docs\n * @param element    Element\n * @param className  Class name to add\n */\nexport function removeClass(element: HTMLElement, className: string): void {\n\tif (!element) {\n\t\treturn;\n\t}\n\tif (element.classList) {\n\t\telement.classList.remove(className);\n\t}\n\telse {\n\t\tlet currentClassName = element.getAttribute(\"class\");\n\t\tif (currentClassName) {\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\n\t\t\t\treturn item !== className;\n\t\t\t}).join(\" \"));\n\t\t}\n\t}\n}\n\n// /**\n//  * Applies a set of styles to an element. Stores the original styles so they\n//  * can be restored later.\n//  *\n//  * @ignore\n//  * @param io      Element\n//   */\n// export function prepElementForDrag(dom: HTMLElement): void {\n\n// \t// @todo: save current values\n\n// \t// Define possible props\n// \tlet props = [\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\n// \t];\n// \tfor (let i = 0; i < props.length; i++) {\n// \t\tif (props[i] in dom.style) {\n// \t\t\tsetStyle(dom, props[i], \"none\");\n// \t\t}\n// \t}\n\n// \t// Remove iOS-specific selection;\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\n\n// }\n\n// /**\n//  * Restores replaced styles\n//  *\n//  * @ignore\n//  * @param  io  Element\n//  */\n// export function unprepElementForDrag(dom: HTMLElement): void {\n\n// \t// Define possible props\n// \tlet props = [\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\n// \t];\n// \tfor (let i = 0; i < props.length; i++) {\n// \t\tif (props[i] in dom.style) {\n// \t\t\tsetStyle(dom, props[i], \"\");\n// \t\t}\n// \t}\n\n// \t// Remove iOS-specific selection;\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\n\n// }\n\nexport function iOS(): boolean {\n\treturn /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\n}\n\nexport function getSafeResolution(): number | undefined {\n\treturn iOS() ? 1 : undefined;\n}\n\nexport function relativeToValue(percent: number | Percent | undefined | null, full: number): number {\n\tif ($type.isNumber(percent)) {\n\t\treturn percent;\n\t} else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\n\t\treturn full * percent.value;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n\n\n/**\n * Returns number of decimals\n *\n * @ignore Exclude from docs\n * @param number  Input number\n * @return Number of decimals\n */\nexport function decimalPlaces(number: number): number {\n\tlet match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\tif (!match) { return 0; }\n\treturn Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n}\n\n\n/**\n * ============================================================================\n * STRING FORMATTING FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Pads a string with additional characters to certain length.\n *\n * @param value  A numeric value\n * @param len    Result string length in characters\n * @param char   A character to use for padding\n * @return Padded value as string\n */\nexport function padString(value: any, len: number = 0, char: string = \"0\"): string {\n\tif (typeof value !== \"string\") {\n\t\tvalue = value.toString();\n\t}\n\n\treturn len > value.length ? Array(len - value.length + 1).join(char) + value : value;\n}\n\nexport function trimLeft(text: string): string {\n\treturn text.replace(/^[\\s]*/, \"\");\n}\n\nexport function trimRight(text: string): string {\n\treturn text.replace(/[\\s]*$/, \"\");\n}\n\nexport function trim(text: string): string {\n\treturn trimLeft(trimRight(text));\n}\n\nexport function truncateTextWithEllipsis(text: string, maxLength: number, breakWords: boolean = false, ellipsis: string = \"...\") {\n\tif (text.length > maxLength) {\n\t\t// Find the last non-alphanumeric character before maxLength\n\t\tlet lastNonAlphanumericIndex = maxLength - 1;\n\t\twhile (lastNonAlphanumericIndex >= 0 && text.charAt(lastNonAlphanumericIndex).match(/\\w/)) {\n\t\t\tlastNonAlphanumericIndex--;\n\t\t}\n\n\t\tif (lastNonAlphanumericIndex >= 0 && breakWords == false) {\n\t\t\treturn text.substring(0, lastNonAlphanumericIndex + 1) + '...';\n\t\t} else {\n\t\t\t// If no non-alphanumeric character found, truncate without breaking words\n\t\t\treturn text.substring(0, maxLength) + ellipsis;\n\t\t}\n\t} else {\n\t\treturn text;\n\t}\n}\n\n/**\n * Tries to determine format type.\n *\n * @ignore Exclude from docs\n * @param format  Format string\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\n */\nexport function getFormat(format: string): string {\n\n\t// Undefined?\n\tif (typeof format === \"undefined\") {\n\t\treturn \"string\";\n\t}\n\n\t// Cleanup and lowercase format\n\tformat = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\n\n\t// Remove style tags\n\tformat = format.replace(/\\[[^\\]]+\\]/, \"\");\n\n\t// Trim\n\tformat = format.trim();\n\n\t// Check for any explicit format hints (i.e. /Date)\n\tlet hints: RegExpMatchArray | null = format.match(/\\/(date|number|duration)$/);\n\n\tif (hints) {\n\t\treturn hints[1];\n\t}\n\n\t// Check for explicit hints\n\tif (format === \"number\") {\n\t\treturn \"number\";\n\t}\n\n\tif (format === \"date\") {\n\t\treturn \"date\";\n\t}\n\n\tif (format === \"duration\") {\n\t\treturn \"duration\";\n\t}\n\n\t// Detect number formatting symbols\n\tif (format.match(/[#0]/)) {\n\t\treturn \"number\";\n\t}\n\n\t// Detect date formatting symbols\n\tif (format.match(/[ymwdhnsqaxkzgtei]/)) {\n\t\treturn \"date\";\n\t}\n\n\t// Nothing? Let's display as string\n\treturn \"string\";\n}\n\n/**\n * Cleans up format:\n * * Strips out formatter hints\n *\n * @ignore Exclude from docs\n * @param format  Format\n * @return Cleaned format\n */\nexport function cleanFormat(format: string): string {\n\treturn format.replace(/\\/(date|number|duration)$/i, \"\");\n}\n\n/**\n * Strips all tags from the string.\n *\n * @param text  Source string\n * @return String without tags\n */\nexport function stripTags(text: string): string {\n\treturn text ? text.replace(/<[^>]*>/g, \"\") : text;\n}\n\n/**\n * Removes new lines and tags from a string.\n *\n * @param text  String to conver\n * @return Converted string\n */\nexport function plainText(text: string): string {\n\treturn text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\n}\n\n/**\n * Escapes string so it can safely be used in a Regex.\n *\n * @param value  Unsescaped string\n * @return Escaped string\n */\nexport function escapeForRgex(value: string): string {\n\treturn value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Adds space before each uppercase letter.\n *\n * @param   str Input string\n * @return      Output string\n */\nexport function addSpacing(str: string): string {\n\tlet result = \"\";\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst char = str.charAt(i);\n\t\tif (char.toUpperCase() == char && i != 0) {\n\t\t\tresult += \" \";\n\t\t}\n\t\tresult += char;\n\t}\n\treturn result;\n}\n\n/**\n * Splits the string into separate characters. Keeps RTL words non-split.\n *\n * @param   source  Input\n * @return          Split text\n */\nexport function splitString(source: string): string[] {\n\t// Regular expression to identify RTL characters\n\tconst rtlChar = /[\\u0590-\\u05FF\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]/;\n\n\t// Regular expression to capture segments ending with specific Arabic characters\n\tconst splitPattern = /([^اأدذرزو]*[اأدذرزو])/gi;\n\n\t// Split input string into array of words or characters, including whitespace\n\tlet segments = source.split(/(\\s+)/); // Split by whitespace, capturing it\n\n\tlet result: string[] = [];\n\tsegments.forEach(segment => {\n\t\tif (segment.match(/^\\s+$/)) {\n\t\t\t// If the segment is purely whitespace\n\t\t\tif (segment = \" \") {\n\t\t\t\tsegment = \"  \";\n\t\t\t}\n\t\t\tresult.push(segment);\n\t\t} else if (rtlChar.test(segment)) {\n\t\t\t// If the segment contains RTL characters, handle special splits\n\t\t\tlet parts = segment.split(splitPattern).filter(part => part !== '');\n\t\t\t// Concatenate parts processed by the split pattern directly to result\n\t\t\tresult = result.concat(parts);\n\t\t} else {\n\t\t\t// Treat this segment as LTR: split into characters\n\t\t\tresult = result.concat([...segment]);\n\t\t}\n\t});\n\n\treturn result;\n}\n\n/**\n * ============================================================================\n * DATE-RELATED FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Returns a year day.\n *\n * @param date  Date\n * @param utc   Assume UTC dates?\n * @return Year day\n * @todo Account for UTC\n */\nexport function getYearDay(date: Date, utc: boolean = false): number {\n\t// TODO: utc needed?\n\tutc;\n\tconst start = new Date(date.getFullYear(), 0, 0);\n\tconst diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\n\tconst oneDay = 1000 * 60 * 60 * 24;\n\treturn Math.floor(diff / oneDay);\n}\n\n/**\n * Returns week number for a given date.\n *\n * @param date  Date\n * @param utc   Assume UTC dates?\n * @return Week number\n * @todo Account for UTC\n */\nexport function getWeek(date: Date, _utc: boolean = false): number {\n\tconst d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n\tconst day = d.getUTCDay() || 7;\n\td.setUTCDate(d.getUTCDate() + 4 - day);\n\tconst firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n\treturn Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\n}\n\n/**\n * Returns a \"week year\" of the given date.\n *\n * @param date  Date\n * @param utc   Assume UTC dates?\n * @return Year of week\n * @since 5.3.0\n * @todo Account for UTC\n */\nexport function getWeekYear(date: Date, _utc: boolean = false): number {\n\tconst d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n\tconst day = d.getUTCDay() || 7;\n\td.setUTCDate(d.getUTCDate() + 4 - day);\n\tconst firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n\treturn firstDay.getFullYear();\n}\n\n/**\n * Returns a week number in the month.\n *\n * @param date  Source Date\n * @param utc   Assume UTC dates?\n * @return Week number in month\n */\nexport function getMonthWeek(date: Date, utc: boolean = false): number {\n\tconst firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\n\tlet currentWeek = getWeek(date, utc);\n\tif (currentWeek == 1) {\n\t\tcurrentWeek = 53;\n\t}\n\treturn currentWeek - firstWeek + 1;\n}\n\n/**\n * Returns a year day out of the given week number.\n *\n * @param week     Week\n * @param year     Year\n * @param weekday  Weekday\n * @param utc      Assume UTC dates\n * @return Day in a year\n */\nexport function getDayFromWeek(week: number, year: number, weekday: number = 1, utc: boolean = false): number {\n\tlet date = new Date(year, 0, 4, 0, 0, 0, 0);\n\tif (utc) {\n\t\tdate.setUTCFullYear(year);\n\t}\n\tlet day = week * 7 + weekday - ((date.getDay() || 7) + 3);\n\treturn day;\n}\n\n/**\n * Returns 12-hour representation out of the 24-hour hours.\n *\n * @param hours  24-hour number\n * @return 12-hour number\n */\nexport function get12Hours(hours: number, base?: number): number {\n\tif (hours > 12) {\n\t\thours -= 12;\n\t}\n\telse if (hours === 0) {\n\t\thours = 12;\n\t}\n\treturn base != null ? hours + (base - 1) : hours;\n}\n\n/**\n * Returns a string name of the time zone.\n *\n * @param date     Date object\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\n * @param savings  Include information if it's in daylight savings mode\n * @param utc      Assume UTC dates\n * @return Time zone name\n */\nexport function getTimeZone(date: Date, long: boolean = false, savings: boolean = false, utc: boolean = false, timezone?: string): string {\n\tif (utc) {\n\t\treturn long ? \"Coordinated Universal Time\" : \"UTC\";\n\t}\n\telse if (timezone) {\n\t\tconst d1 = date.toLocaleString(\"en-US\", { timeZone: timezone });\n\t\tconst d2 = date.toLocaleString(\"en-US\", { timeZone: timezone, timeZoneName: long ? \"long\" : \"short\" });\n\t\treturn trim(d2.substr(d1.length));\n\t}\n\tlet wotz = date.toLocaleString(\"UTC\");\n\tlet wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\n\t//wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\n\tif (savings === false) {\n\t\twtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\n\t}\n\treturn trim(wtz);\n}\n\nexport function getTimezoneOffset(timezone: string, targetDate?: Date): number {\n\tconst date = targetDate || new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\n\tconst utcDate = new Date(date.toLocaleString(\"en-US\", { timeZone: \"UTC\" }));\n\tconst tzDate = new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }));\n\treturn (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\n}\n\n\nexport function capitalizeFirst(text: string): string {\n\treturn text.charAt(0).toUpperCase() + text.slice(1);\n}\n\n\n/**\n * ============================================================================\n * COLOR UTILS\n * ============================================================================\n */\n\n\n/**\n * Represents an interface for an object that represents an RGB color.\n */\nexport interface iRGB {\n\tr: number;\n\tg: number;\n\tb: number;\n\ta?: number;\n}\n\n/**\n * Represents an interface for an object that represents an HSL color.\n */\nexport interface iHSL {\n\th: number;\n\ts: number;\n\tl: number;\n\ta?: number;\n}\n\n/**\n * Represents an interface for an object that represents an HSV color.\n */\nexport interface iHSV {\n\th: number;\n\ts: number;\n\tv: number;\n\ta?: number;\n}\n\n/**\n * The functions below are taken and adapted from Garry Tan's blog post:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n *\n * The further attributions go mjijackson.com, which now seems to be defunct.\n */\n\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * Function adapted from:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n *\n * @param h       The hue\n * @param s       The saturation\n * @param l       The lightness\n * @return The RGB representation\n */\nexport function hslToRgb(color: iHSL): iRGB {\n\tlet r, g, b;\n\tlet h = color.h;\n\tlet s = color.s;\n\tlet l = color.l;\n\n\tif (s == 0) {\n\t\tr = g = b = l; // achromatic\n\t} else {\n\t\tlet hue2rgb = function hue2rgb(p: number, q: number, t: number) {\n\t\t\tif (t < 0) { t += 1; }\n\t\t\tif (t > 1) { t -= 1; }\n\t\t\tif (t < 1 / 6) { return p + (q - p) * 6 * t; }\n\t\t\tif (t < 1 / 2) { return q; }\n\t\t\tif (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\n\t\t\treturn p;\n\t\t}\n\n\t\tlet q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tlet p = 2 * l - q;\n\t\tr = hue2rgb(p, q, h + 1 / 3);\n\t\tg = hue2rgb(p, q, h);\n\t\tb = hue2rgb(p, q, h - 1 / 3);\n\t}\n\n\treturn {\n\t\tr: Math.round(r * 255),\n\t\tg: Math.round(g * 255),\n\t\tb: Math.round(b * 255)\n\t};\n}\n\n/**\n * Converts an RGB color value to HSL. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and l in the set [0, 1].\n *\n * Function adapted from:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n *\n * @param r       The red color value\n * @param g       The green color value\n * @param b       The blue color value\n * @return The HSL representation\n */\nexport function rgbToHsl(color: iRGB): iHSL {\n\tlet r = color.r / 255;\n\tlet g = color.g / 255;\n\tlet b = color.b / 255;\n\tlet max = Math.max(r, g, b);\n\tlet min = Math.min(r, g, b);\n\tlet h = 0;\n\tlet s = 0;\n\tlet l = (max + min) / 2;\n\n\tif (max === min) {\n\t\th = s = 0; // achromatic\n\n\t} else {\n\t\tlet d = max - min;\n\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n\t\tswitch (max) {\n\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t}\n\n\t\th /= 6;\n\t}\n\n\treturn {\n\t\th: h,\n\t\ts: s,\n\t\tl: l,\n\t};\n}\n\n\n/**\n * Converts HSV to HSL.\n *\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_HSL\n */\nexport function hsvToHsl(hsv: iHSV): iHSL {\n\tconst l = hsv.v * (1 - (hsv.s / 2));\n\n\tconst s =\n\t\t(l === 0 || l === 1\n\t\t\t? 0\n\t\t\t: (hsv.v - l) / Math.min(l, 1 - l));\n\n\treturn {\n\t\th: hsv.h,\n\t\ts,\n\t\tl,\n\t\ta: hsv.a,\n\t};\n}\n\n\n/**\n * Converts HSL to HSV.\n *\n * https://en.wikipedia.org/wiki/HSL_and_HSV#HSL_to_HSV\n */\nexport function hslToHsv(hsl: iHSL): iHSV {\n\tconst v = hsl.l + (hsl.s * Math.min(hsl.l, 1 - hsl.l));\n\n\tconst s =\n\t\t(v === 0\n\t\t\t? 0\n\t\t\t: 2 * (1 - (hsl.l / v)));\n\n\treturn {\n\t\th: hsl.h,\n\t\ts,\n\t\tv,\n\t\ta: hsl.a,\n\t};\n}\n\n\n/**\n * Returns a color that is `percent` brighter than the reference color.\n *\n * @param color    Reference color\n * @param percent  Brightness percent\n * @return Hex code of the new color\n */\nexport function lighten(rgb: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\n\tif (rgb) {\n\t\treturn {\n\t\t\tr: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\n\t\t\tg: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\n\t\t\tb: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\n\t\t\ta: rgb.a\n\t\t};\n\n\t} else {\n\t\t// TODO is this correct ?\n\t\treturn rgb;\n\t}\n};\n\n/**\n * Gets lightness step.\n *\n * @param value    Value\n * @param percent  Percent\n * @return Step\n */\nexport function getLightnessStep(value: number, percent: number): number {\n\tlet base = percent > 0 ? 255 - value : value;\n\treturn Math.round(base * percent);\n}\n\n/**\n * Returns a color that is `percent` brighter than the source `color`.\n *\n * @param color    Source color\n * @param percent  Brightness percent\n * @return New color\n */\nexport function brighten(rgb: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\n\tif (rgb) {\n\t\tlet base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\n\t\t//let base = Math.max(rgb.r, rgb.g, rgb.b);\n\t\tlet step = getLightnessStep(base, percent);\n\t\treturn {\n\t\t\tr: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\n\t\t\tg: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\n\t\t\tb: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\n\t\t\ta: rgb.a\n\t\t};\n\n\t} else {\n\t\t// TODO is this correct ?\n\t\treturn rgb;\n\t}\n};\n\n/**\n * Returns brightness step.\n *\n * @ignore Exclude from docs\n * @param value    Value\n * @param percent  Percent\n * @return Step\n */\nexport function getBrightnessStep(_value: number, percent: number): number {\n\tlet base = 255; //percent > 0 ? 255 - value : value;\n\treturn Math.round(base * percent);\n}\n\n/**\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\n * color to use for elements over this color. E.g.: you would want to use\n * black text over light background, and vice versa.\n *\n * @param color  Source color\n * @return Light?\n */\nexport function isLight(color: iRGB): boolean {\n\treturn ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\n}\n\n/**\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\n * saturation applied.\n *\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\n * saturated).\n *\n * @param color       Base color\n * @param saturation  Saturation (0-1)\n * @return New color\n */\nexport function saturate(rgb: $type.Optional<iRGB>, saturation: number): $type.Optional<iRGB> {\n\tif (rgb === undefined || saturation == 1) {\n\t\treturn rgb;\n\t}\n\n\tlet hsl = rgbToHsl(rgb);\n\thsl.s = saturation;\n\treturn hslToRgb(hsl);\n}\n\n/**\n * Returns a color which contrasts more with the source `color`.\n *\n * @param  color             Base color\n * @param  lightAlternative  Light option\n * @param  darkAlternative   Dark option\n * @return New color\n */\nexport function alternativeColor(color: iRGB, lightAlternative: iRGB = { r: 255, g: 255, b: 255 }, darkAlternative: iRGB = { r: 255, g: 255, b: 255 }): iRGB {\n\tlet light = lightAlternative;\n\tlet dark = darkAlternative;\n\tif (isLight(darkAlternative)) {\n\t\tlight = darkAlternative;\n\t\tdark = lightAlternative;\n\t}\n\treturn isLight(color) ? dark : light;\n}\n\n/**\n * @ignore\n */\nexport function mergeTags(tags1: string[] | undefined, tags2: string[]): string[] {\n\tif (!tags1) {\n\t\ttags1 = [];\n\t}\n\treturn [...tags1, ...tags2].filter((value, index, self) => {\n\t\treturn self.indexOf(value) === index;\n\t});\n}\n\n/**\n * @ignore\n */\nexport function sameBounds(a: IBounds, b?: IBounds): boolean {\n\tif (!b) {\n\t\treturn false;\n\t}\n\tif (a.left != b.left) {\n\t\treturn false\n\t}\n\tif (a.right != b.right) {\n\t\treturn false\n\t}\n\tif (a.top != b.top) {\n\t\treturn false\n\t}\n\tif (a.bottom != b.bottom) {\n\t\treturn false\n\t}\n\treturn true;\n}\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "import type { Entity, Animation } from \"./Entity\";\nimport { Percent } from \"./Percent\";\nimport { Color } from \"./Color\";\nimport type { Easing } from \"./Ease\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport * as $object from \"./Object\";\n\nexport type Animations<T> = { [K in keyof T]?: Animation<T[K]> };\n\n/**\n * @ignore\n */\nexport async function waitForAnimations<T>(animations: Animations<T> | undefined): Promise<void> {\n\tif (animations !== undefined) {\n\t\tconst promises: Array<Promise<void>> = [];\n\n\t\t$object.each(animations, (_, animation) => {\n\t\t\tpromises.push(animation.waitForStop());\n\t\t});\n\n\t\tawait Promise.all(promises);\n\t}\n}\n\n\ninterface ITime {\n\treadonly tag: unique symbol;\n}\n\n/**\n * New type which allows for conversion from a number into a Time, but not from a Time to a number\n */\nexport type Time = number | ITime;\n\n\n/**\n * @ignore\n */\nexport function normalize(value: number, min: number, max: number): Time {\n\tif (min === max) {\n\t\treturn 0;\n\n\t} else {\n\t\treturn Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\n\t}\n}\n\n/**\n * @ignore\n */\nexport function range(diff: Time, from: number, to: number): number {\n\treturn from + (diff as number * (to - from));\n}\n\n/**\n * @ignore\n */\nexport function defaultInterpolate<A, B>(diff: Time, from: A, to: B): A | B {\n\tif (diff >= 1) {\n\t\treturn to;\n\n\t} else {\n\t\treturn from;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function percentInterpolate(diff: Time, from: Percent, to: Percent): Percent {\n\treturn new Percent(range(diff, from.percent, to.percent));\n}\n\n/**\n * @ignore\n */\nexport function colorInterpolate(diff: Time, from: Color, to: Color): Color {\n\treturn Color.interpolate(diff, from, to);\n}\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: number, to: number): typeof range;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: Percent, to: Percent): typeof percentInterpolate;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: any, to: any): typeof defaultInterpolate;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: any, to: any): (diff: Time, from: any, to: any) => any {\n\tif (typeof from === \"number\" && typeof to === \"number\") {\n\t\treturn range;\n\t}\n\n\tif (from instanceof Percent && to instanceof Percent) {\n\t\treturn percentInterpolate;\n\t}\n\n\tif (from instanceof Color && to instanceof Color) {\n\t\treturn colorInterpolate;\n\t}\n\n\treturn defaultInterpolate;\n}\n\n\nexport enum AnimationState {\n\tStopped,\n\tPlaying,\n\tPaused,\n}\n\nexport interface IAnimation {\n\t_runAnimation(_currentTime: number): AnimationState;\n}\n\n\n/**\n * @ignore\n */\nexport interface IEntityEvents {\n\tstarted: {};\n\tstopped: {};\n\t// TODO replace this with stopped\n\tended: {};\n\tprogress: { progress: number };\n}\n\n/**\n * @ignore\n */\nexport class AnimationTime implements IAnimation {\n\tprotected _entity: Entity;\n\tprotected _duration: number;\n\n\tprotected _playingDuration: number | null = null;\n\tprotected _startingTime: number | null = null;\n\tprotected _current: Time = 0;\n\tprotected _from: Time = 0;\n\tprotected _to: Time = 0;\n\n\tdeclare public _events: IEntityEvents;\n\tpublic events: EventDispatcher<Events<this, this[\"_events\"]>> = new EventDispatcher();\n\n\tpublic easing: Easing | undefined;\n\n\tconstructor(entity: Entity, duration: number) {\n\t\tthis._entity = entity;\n\t\tthis._duration = duration;\n\t}\n\n\tprivate _stopEvent() {\n\t\tconst type = \"stopped\";\n\t\tif (this.events.isEnabled(type)) {\n\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t}\n\t}\n\n\tpublic _runAnimation(currentTime: number): AnimationState {\n\t\tif (this._playingDuration !== null) {\n\t\t\tif (this._startingTime === null) {\n\t\t\t\tthis._startingTime = currentTime;\n\t\t\t\treturn AnimationState.Playing;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst diff = (currentTime - this._startingTime) / this._playingDuration;\n\n\t\t\t\tif (diff >= 1) {\n\t\t\t\t\tthis._playingDuration = null;\n\t\t\t\t\tthis._startingTime = null;\n\t\t\t\t\tthis._from = this._to;\n\t\t\t\t\tthis._current = this._to;\n\t\t\t\t\tthis._entity.markDirty();\n\t\t\t\t\tthis._stopEvent();\n\t\t\t\t\tconst type = \"ended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t\treturn AnimationState.Stopped;\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._current = range(diff, this._from as number, this._to as number);\n\t\t\t\t\tthis._entity.markDirty();\n\n\t\t\t\t\tconst type = \"progress\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, progress: diff });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn AnimationState.Playing;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn AnimationState.Stopped;\n\t\t}\n\t}\n\n\tprivate _play() {\n\t\tthis._from = this._current;\n\n\t\tif (this._playingDuration === null) {\n\t\t\tthis._entity._root._addAnimation(this);\n\n\t\t\tconst type = \"started\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._startingTime = null;\n\t\t}\n\n\t\tthis._playingDuration = Math.abs((this._to as number) - (this._from as number)) * this._duration;\n\t}\n\n\tpublic get duration(): number {\n\t\treturn this._duration;\n\t}\n\n\tpublic set duration(value: number) {\n\t\tif (this._duration !== value) {\n\t\t\tthis._duration = value;\n\n\t\t\tif (value === 0) {\n\t\t\t\tthis.jumpTo(this._to);\n\n\t\t\t} else if (this._current !== this._to) {\n\t\t\t\tthis._play();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get current(): Time {\n\t\tif (this.easing) {\n\t\t\treturn this.easing(this._current);\n\n\t\t} else {\n\t\t\treturn this._current;\n\t\t}\n\t}\n\n\tpublic stop() {\n\t\tthis.jumpTo(this._current);\n\t}\n\n\tpublic jumpTo(value: Time) {\n\t\tif (this._current !== value) {\n\t\t\tthis._entity.markDirty();\n\t\t}\n\n\t\tif (this._playingDuration !== null) {\n\t\t\tthis._stopEvent();\n\t\t}\n\n\t\tthis._playingDuration = null;\n\t\tthis._startingTime = null;\n\t\tthis._current = value;\n\t\tthis._from = value;\n\t\tthis._to = value;\n\t}\n\n\tpublic tweenTo(value: Time) {\n\t\tif (this._current === value || this._duration === 0) {\n\t\t\tthis.jumpTo(value);\n\n\t\t} else {\n\t\t\tif (this._to !== value) {\n\t\t\t\tthis._to = value;\n\t\t\t\tthis._play();\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/*export class AnimationValue extends AnimationTime {\n\tpublic _min: number;\n\tpublic _max: number;\n\n\tconstructor(entity: Entity, duration: number, min: number, max: number) {\n\t\tsuper(entity, duration);\n\t\tthis._min = min;\n\t\tthis._max = max;\n\t}\n\n\tpublic get min(): number {\n\t\treturn this._min;\n\t}\n\n\tpublic set min(value: number) {\n\t\tif (this._min !== value) {\n\t\t\tthis._min = value;\n\t\t\tthis._entity.markDirty();\n\t\t}\n\t}\n\n\tpublic get max(): number {\n\t\treturn this._max;\n\t}\n\n\tpublic set max(value: number) {\n\t\tif (this._max !== value) {\n\t\t\tthis._max = value;\n\t\t\tthis._entity.markDirty();\n\t\t}\n\t}\n\n\tpublic currentValue(): number {\n\t\treturn range(super.currentTime(), this._min, this._max);\n\t}\n\n\tpublic jumpToValue(value: number) {\n\t\tsuper.jumpToTime(normalize(value, this._min, this._max));\n\t}\n\n\tpublic tweenToValue(value: number) {\n\t\tsuper.tweenToTime(normalize(value, this._min, this._max));\n\t}\n}\n*/\n", "import { range, Time } from \"./Animation\";\nimport * as $utils from \"./Utils\";\nimport * as $type from \"./Type\";\n\n/**\n * @ignore\n */\nfunction string2hex(string: string): number {\n\t//string = cssColorNames[string.toLowerCase()] || string;\n\n\tif (string[0] === \"#\") {\n\t\tstring = string.substr(1);\n\t}\n\tif (string.length == 3) {\n\t\tstring = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\n\t}\n\n\treturn parseInt(string, 16);\n}\n\n/**\n * @ignore\n */\nexport function rgba2hex(color: string): number {\n\tcolor = color.replace(/[ ]/g, \"\");\n\n\t// Init\n\tlet matches: string[] | null = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\n\n\t// Try rgb() format\n\tif (matches) {\n\t\tmatches.push(\"1\");\n\n\t} else {\n\t\tmatches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\n\n\t\tif (!matches) {\n\t\t\treturn 0x000000;\n\t\t}\n\t}\n\n\tlet hex = \"\";\n\tfor (let i = 1; i <= 3; i++) {\n\t\tlet val = parseInt(matches[i]).toString(16);\n\t\tif (val.length == 1) {\n\t\t\tval = \"0\" + val;\n\t\t}\n\t\thex += val;\n\t}\n\n\treturn string2hex(hex);\n\n}\n\n/**\n * Returns a new [[Color]] object base on input.\n *\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\n *\n * * `\"#f00\"`\n * * `\"#ff0000\"`\n * * `\"rgb(255, 0, 0)\"`\n * * `\"rgba(255, 0, 0, 1)\"`\n * * `0xff0000`\n * \n * @param   input  Input color\n * @return         Color\n */\nexport function color(input: number | string): Color {\n\treturn Color.fromAny(input);\n}\n\n/**\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\n * be used.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\n * @important\n */\nexport class Color {\n\tprotected _hex: number;\n\n\tprivate constructor(hex: number) {\n\t\tthis._hex = hex | 0;\n\t}\n\n\t/**\n\t * Color numeric value.\n\t */\n\tpublic get hex(): number {\n\t\treturn this._hex;\n\t}\n\n\t/**\n\t * Value of color's R channel.\n\t * @return R value\n\t */\n\tpublic get r(): number {\n\t\treturn this._hex >>> 16;\n\t}\n\n\t/**\n\t * Value of color's G channel.\n\t * @return G value\n\t */\n\tpublic get g(): number {\n\t\treturn (this._hex >> 8) & 0xFF;\n\t}\n\n\t/**\n\t * Value of color's B channel.\n\t * @return B value\n\t */\n\tpublic get b(): number {\n\t\treturn this._hex & 0xFF;\n\t}\n\n\t/**\n\t * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\n\t * \n\t * @param   alpha  Opacity\n\t * @return         CSS string\n\t */\n\tpublic toCSS(alpha: number = 1): string {\n\t\treturn \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\n\t}\n\n\t/**\n\t * Returns color CSS representation in form of `#rgb` string.\n\t * \n\t * @return         CSS string\n\t */\n\tpublic toCSSHex(): string {\n\t\treturn \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\n\t}\n\n\t/**\n\t * Returns color's HSL info.\n\t * @param   alpha Opacity\n\t * @return        HSL info\n\t */\n\tpublic toHSL(alpha: number = 1): $utils.iHSL {\n\t\treturn $utils.rgbToHsl({\n\t\t\tr: this.r,\n\t\t\tg: this.g,\n\t\t\tb: this.b,\n\t\t\ta: alpha\n\t\t})\n\t}\n\n\t/**\n\t * Converts HSL values into a new [[Color]] object.\n\t *\n\t * @param   h H value\n\t * @param   s S value\n\t * @param   l L value\n\t * @return    Color object\n\t */\n\tpublic static fromHSL(h: number, s: number, l: number): Color {\n\t\tconst rgb = $utils.hslToRgb({\n\t\t\th: h,\n\t\t\ts: s,\n\t\t\tl: l\n\t\t});\n\t\treturn this.fromRGB(rgb.r, rgb.g, rgb.b);\n\t}\n\n\tpublic toString(): string {\n\t\treturn this.toCSSHex();\n\t}\n\n\t/**\n\t * Converts hex number into a new [[Color]] object.\n\t *\n\t * ```TypeScript\n\t * Color.fromHex(0xff0000) // red\n\t * ```\n\t * ```JavaScript\n\t * Color.fromHex(0xff0000) // red\n\t * ```\n\t *\n\t * @param   hex  Hex color\n\t * @return       Color\n\t */\n\tpublic static fromHex(hex: number): Color {\n\t\treturn new Color(hex);\n\t}\n\n\t/**\n\t * Converts RGB values to a new [[Color]] object.\n\t *\n\t * @param   r  R value\n\t * @param   g  G value\n\t * @param   b  B value\n\t * @return     Color\n\t */\n\tpublic static fromRGB(r: number, g: number, b: number): Color {\n\t\treturn new Color((b | 0) + (g << 8) + (r << 16));\n\t}\n\n\t/**\n\t * Converts RGB string to a new [[Color]] object.\n\t *\n\t * ```TypeScript\n\t * Color.fromString(\"#ff0000\") // red\n\t * ```\n\t * ```JavaScript\n\t * Color.fromString(\"#ff0000\") // red\n\t * ```\n\t *\n\t * @param   s  RGB string\n\t * @return     Color\n\t */\n\tpublic static fromString(s: string): Color {\n\t\treturn new Color(string2hex(s));\n\t}\n\n\t/**\n\t * Converts CSS rgba() syntax to a new [[Color]] object.\n\t *\n\t * ```TypeScript\n\t * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\n\t * ```\n\t * ```JavaScript\n\t * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\n\t * ```\n\t *\n\t * @param  {string} s [description]\n\t * @return {Color}    [description]\n\t */\n\tpublic static fromCSS(s: string): Color {\n\t\treturn new Color(rgba2hex(s));\n\t}\n\n\t/**\n\t * Convert to color from virtually anything.\n\t *\n\t * Will throw an exception if unable to resolve the color.\n\t *\n\t * @param   s  Source\n\t * @return     Color\n\t */\n\tpublic static fromAny(s: string | number | Color): Color {\n\t\tif ($type.isString(s)) {\n\t\t\tif (s[0] == \"#\") {\n\t\t\t\treturn Color.fromString(s);\n\t\t\t}\n\t\t\telse if (s.substr(0, 3) == \"rgb\") {\n\t\t\t\treturn Color.fromCSS(s);\n\t\t\t}\n\t\t}\n\t\telse if ($type.isNumber(s)) {\n\t\t\treturn Color.fromHex(s);\n\t\t}\n\t\telse if (s instanceof Color) {\n\t\t\treturn Color.fromHex(s.hex);\n\t\t}\n\n\t\tthrow new Error(\"Unknown color syntax: \" + s);\n\t}\n\n\t/**\n\t * Returns a new [[Color]] object based on either `lightAlternative` or\n\t * `darkAlternative` depending on which one is more contrasting with\n\t * the `color`.\n\t *\n\t * @param   color             Reference color\n\t * @param   lightAlternative  Light color\n\t * @param   darkAlternative   Dark color\n\t * @return                    Alternative color\n\t */\n\tpublic static alternative(color: Color, lightAlternative?: Color, darkAlternative?: Color): Color {\n\t\tconst rgb = $utils.alternativeColor(\n\t\t\t{ r: color.r, g: color.g, b: color.b },\n\t\t\tlightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined,\n\t\t\tdarkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined\n\t\t);\n\t\treturn this.fromRGB(rgb.r, rgb.g, rgb.b);\n\t}\n\n\t/**\n\t * Returns an intermediate Color between two reference colors depending on\n\t * the progress (`diff`) between the two.\n\t *\n\t * @param   diff  Progress\n\t * @param   from  Source color\n\t * @param   to    Target color\n\t * @param   mode  Interpolation mode\n\t * @return        Color\n\t */\n\tpublic static interpolate(diff: Time, from: Color, to: Color, mode: \"rgb\" | \"hsl\" = \"rgb\"): Color {\n\t\tif (mode == \"hsl\") {\n\t\t\tconst fromHSL = from.toHSL();\n\t\t\tconst toHSL = to.toHSL();\n\t\t\treturn Color.fromHSL(\n\t\t\t\trange(diff, fromHSL.h, toHSL.h),\n\t\t\t\trange(diff, fromHSL.s, toHSL.s),\n\t\t\t\trange(diff, fromHSL.l, toHSL.l)\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn Color.fromRGB(\n\t\t\t\trange(diff, from.r, to.r),\n\t\t\t\trange(diff, from.g, to.g),\n\t\t\t\trange(diff, from.b, to.b)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new [[Color]] lightened by `percent` value.\n\t *\n\t * Use negative value to darken the color.\n\t *\n\t * @param   color    Source color\n\t * @param   percent  Percent\n\t * @return           New color\n\t */\n\tpublic static lighten(color: Color, percent: number): Color {\n\t\tconst rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\n\t\treturn Color.fromRGB(rgb!.r, rgb!.g, rgb!.b);\n\t}\n\n\t/**\n\t * Returns a new [[Color]] brightened by `percent` value.\n\t *\n\t * Use negative value to dim the color.\n\t *\n\t * @param   color    Source color\n\t * @param   percent  Percent\n\t * @return           New color\n\t */\n\tpublic static brighten(color: Color, percent: number): Color {\n\t\tconst rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\n\t\treturn Color.fromRGB(rgb!.r, rgb!.g, rgb!.b);\n\t}\n\n\t/**\n\t * Returns a new [[Color]] saturated by `percent` value.\n\t *\n\t * Value range is between `0` (fully desaturated), to `1` (full color).\n\t *\n\t * @param   color    Source color\n\t * @param   percent  Percent\n\t * @return           New color\n\t */\n\tpublic static saturate(color: Color, percent: number): Color {\n\t\tconst rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\n\t\treturn Color.fromRGB(rgb!.r, rgb!.g, rgb!.b);\n\t}\n}\n", "/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport type { Entity } from \"./Entity\";\nimport type { Template } from \"./Template\";\nimport type { IDisposer } from \"./Disposer\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport * as $array from \"./Array\";\nimport type { Optional } from \"./Type\";\n\n\n/**\n * Checks if specific index fits into length.\n *\n * @param index  Index\n * @param len    Length\n * @ignore\n */\nfunction checkBounds(index: number, len: number): void {\n\tif (!(index >= 0 && index < len)) {\n\t\tthrow new Error(\"Index out of bounds: \" + index);\n\t}\n}\n\n\nexport interface IListEvents<A> {\n\tclear: {\n\t\toldValues: Array<A>,\n\t};\n\tpush: {\n\t\tnewValue: A,\n\t};\n\tinsertIndex: {\n\t\tindex: number,\n\t\tnewValue: A,\n\t};\n\tsetIndex: {\n\t\tindex: number,\n\t\toldValue: A,\n\t\tnewValue: A,\n\t};\n\tremoveIndex: {\n\t\tindex: number,\n\t\toldValue: A,\n\t};\n\tmoveIndex: {\n\t\toldIndex: number,\n\t\tnewIndex: number,\n\t\tvalue: A,\n\t};\n}\n\n\n/**\n * A List class is used to hold a number of indexed items of the same type.\n */\nexport class List<T> {\n\n\t/**\n\t * List values.\n\t */\n\tprotected _values: Array<T>;\n\n\tpublic events: EventDispatcher<Events<this, IListEvents<T>>> = new EventDispatcher();\n\n\t/**\n\t * Constructor\n\t *\n\t * @param initial  Inital list of values to add to list\n\t */\n\tconstructor(initial: Array<T> = []) {\n\t\tthis._values = initial;\n\t}\n\n\t/**\n\t * An array of values in the list.\n\t *\n\t * Do not use this property to add values. Rather use dedicated methods, like\n\t * `push()`, `removeIndex()`, etc.\n\t *\n\t * @readonly\n\t * @return List values\n\t */\n\tpublic get values(): Array<T> {\n\t\treturn this._values;\n\t}\n\n\t/**\n\t * Checks if list contains specific item reference.\n\t *\n\t * @param item  Item to search for\n\t * @return `true` if found, `false` if not found\n\t */\n\tpublic contains(value: T): boolean {\n\t\treturn this._values.indexOf(value) !== -1;\n\t}\n\n\t/**\n\t * Removes specific item from the list.\n\t *\n\t * @param item An item to remove\n\t */\n\tpublic removeValue(value: T): void {\n\t\tlet i = 0;\n\t\tlet length = this._values.length;\n\n\t\twhile (i < length) {\n\t\t\t// TODO handle NaN\n\t\t\tif (this._values[i] === value) {\n\t\t\t\tthis.removeIndex(i);\n\t\t\t\t--length;\n\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Searches the list for specific item and returns its index.\n\t *\n\t * @param item  An item to search for\n\t * @return Index or -1 if not found\n\t */\n\tpublic indexOf(value: T): number {\n\t\treturn $array.indexOf(this._values, value);\n\t}\n\n\t/**\n\t * Number of items in list.\n\t *\n\t * @readonly\n\t * @return Number of items\n\t */\n\tpublic get length(): number {\n\t\treturn this._values.length;\n\t}\n\n\t/**\n\t * Checks if there's a value at specific index.\n\t *\n\t * @param index  Index\n\t * @return Value exists?\n\t */\n\tpublic hasIndex(index: number): boolean {\n\t\treturn index >= 0 && index < this._values.length;\n\t}\n\n\t/**\n\t * Returns an item at specified index.\n\t *\n\t * @param index  Index\n\t * @return List item\n\t */\n\tpublic getIndex(index: number): T | undefined {\n\t\treturn this._values[index];\n\t}\n\n\tprotected _onPush(newValue: T) {\n\t\tif (this.events.isEnabled(\"push\")) {\n\t\t\tthis.events.dispatch(\"push\", {\n\t\t\t\ttype: \"push\",\n\t\t\t\ttarget: this,\n\t\t\t\tnewValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onInsertIndex(index: number, newValue: T) {\n\t\tif (this.events.isEnabled(\"insertIndex\")) {\n\t\t\tthis.events.dispatch(\"insertIndex\", {\n\t\t\t\ttype: \"insertIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\tindex,\n\t\t\t\tnewValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onSetIndex(index: number, oldValue: T, newValue: T) {\n\t\tif (this.events.isEnabled(\"setIndex\")) {\n\t\t\tthis.events.dispatch(\"setIndex\", {\n\t\t\t\ttype: \"setIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\tindex,\n\t\t\t\toldValue,\n\t\t\t\tnewValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onRemoveIndex(index: number, oldValue: T) {\n\t\tif (this.events.isEnabled(\"removeIndex\")) {\n\t\t\tthis.events.dispatch(\"removeIndex\", {\n\t\t\t\ttype: \"removeIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\tindex,\n\t\t\t\toldValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onMoveIndex(oldIndex: number, newIndex: number, value: T) {\n\t\tif (this.events.isEnabled(\"moveIndex\")) {\n\t\t\tthis.events.dispatch(\"moveIndex\", {\n\t\t\t\ttype: \"moveIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\toldIndex,\n\t\t\t\tnewIndex,\n\t\t\t\tvalue,\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onClear(oldValues: Array<T>) {\n\t\tif (this.events.isEnabled(\"clear\")) {\n\t\t\tthis.events.dispatch(\"clear\", {\n\t\t\t\ttype: \"clear\",\n\t\t\t\ttarget: this,\n\t\t\t\toldValues\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Sets value at specific index.\n\t *\n\t * If there's already a value at the index, it is overwritten.\n\t *\n\t * @param index  Index\n\t * @param value  New value\n\t * @return New value\n\t */\n\tpublic setIndex(index: number, value: T): T {\n\t\tcheckBounds(index, this._values.length);\n\n\t\tconst oldValue = this._values[index];\n\n\t\t// Do nothing if the old value and the new value are the same\n\t\tif (oldValue !== value) {\n\t\t\tthis._values[index] = value;\n\t\t\tthis._onSetIndex(index, oldValue, value);\n\t\t}\n\n\t\treturn oldValue;\n\t}\n\n\t/**\n\t * Adds an item to the list at a specific index, which pushes all the other\n\t * items further down the list.\n\t *\n\t * @param index Index\n\t * @param item  An item to add\n\t */\n\tpublic insertIndex<K extends T>(index: number, value: K): K {\n\t\tcheckBounds(index, this._values.length + 1);\n\n\t\t$array.insertIndex(this._values, index, value);\n\t\tthis._onInsertIndex(index, value);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Swaps indexes of two items in the list.\n\t *\n\t * @param a  Item 1\n\t * @param b  Item 2\n\t */\n\tpublic swap(a: number, b: number): void {\n\t\tconst len = this._values.length;\n\n\t\tcheckBounds(a, len);\n\t\tcheckBounds(b, len);\n\n\t\tif (a !== b) {\n\t\t\tconst value_a = this._values[a];\n\t\t\tconst value_b = this._values[b];\n\n\t\t\tthis._values[a] = value_b;\n\t\t\tthis._onSetIndex(a, value_a, value_b);\n\n\t\t\tthis._values[b] = value_a;\n\t\t\tthis._onSetIndex(b, value_b, value_a);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a value at specific index.\n\t *\n\t * @param index  Index of value to remove\n\t * @return Removed value\n\t */\n\tpublic removeIndex(index: number): T {\n\t\tcheckBounds(index, this._values.length);\n\n\t\tconst oldValue = this._values[index];\n\n\t\t$array.removeIndex(this._values, index);\n\t\tthis._onRemoveIndex(index, oldValue);\n\n\t\treturn oldValue;\n\t}\n\n\t/**\n\t * Moves an item to a specific index within the list.\n\t *\n\t * If the index is not specified it will move the item to the end of the\n\t * list.\n\t *\n\t * @param value  Item to move\n\t * @param index  Index to place item at\n\t */\n\tpublic moveValue<K extends T>(value: K, toIndex?: number): K {\n\t\t// TODO don't do anything if the desired index is the same as the current index\n\t\tlet index = this.indexOf(value);\n\n\t\t// TODO remove all old values rather than only the first ?\n\t\tif (index !== -1) {\n\t\t\t$array.removeIndex(this._values, index);\n\n\t\t\tif (toIndex == null) {\n\t\t\t\tconst toIndex = this._values.length;\n\t\t\t\tthis._values.push(value);\n\t\t\t\tthis._onMoveIndex(index, toIndex, value);\n\n\t\t\t} else {\n\t\t\t\t$array.insertIndex(this._values, toIndex, value);\n\t\t\t\tthis._onMoveIndex(index, toIndex, value);\n\t\t\t}\n\n\t\t} else if (toIndex == null) {\n\t\t\tthis._values.push(value);\n\t\t\tthis._onPush(value);\n\n\t\t} else {\n\t\t\t$array.insertIndex(this._values, toIndex, value);\n\t\t\tthis._onInsertIndex(toIndex, value);\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Adds an item to the end of the list.\n\t *\n\t * @param item  An item to add\n\t */\n\tpublic push<K extends T>(value: K): K {\n\t\tthis._values.push(value);\n\t\tthis._onPush(value);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Adds an item as a first item in the list.\n\t *\n\t * @param item  An item to add\n\t */\n\tpublic unshift<K extends T>(value: K): K {\n\t\tthis.insertIndex(0, value);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Adds multiple items to the list.\n\t *\n\t * @param items  An Array of items to add\n\t */\n\tpublic pushAll(values: Array<T>): void {\n\t\t$array.each(values, (value) => {\n\t\t\tthis.push(value);\n\t\t});\n\t}\n\n\t/**\n\t * Copies and adds items from abother list.\n\t *\n\t * @param source  A list top copy items from\n\t */\n\tpublic copyFrom(source: this): void {\n\t\tthis.pushAll(source._values);\n\t}\n\n\t/**\n\t * Returns the last item from the list, and removes it.\n\t *\n\t * @return Item\n\t */\n\tpublic pop(): Optional<T> {\n\t\tlet index = this._values.length - 1;\n\t\treturn index < 0 ? undefined : this.removeIndex(this._values.length - 1);\n\t}\n\n\t/**\n\t * Returns the first item from the list, and removes it.\n\t *\n\t * @return Item\n\t */\n\tpublic shift(): Optional<T> {\n\t\treturn this._values.length ? this.removeIndex(0) : undefined;\n\t}\n\n\t/**\n\t * Sets multiple items to the list.\n\t *\n\t * All current items are removed.\n\t *\n\t * @param newArray  New items\n\t */\n\tpublic setAll(newArray: Array<T>): void {\n\t\tconst old = this._values;\n\t\tthis._values = [];\n\t\tthis._onClear(old);\n\n\t\t$array.each(newArray, (value) => {\n\t\t\tthis._values.push(value);\n\t\t\tthis._onPush(value);\n\t\t});\n\t}\n\n\t/**\n\t * Removes all items from the list.\n\t */\n\tpublic clear(): void {\n\t\tthis.setAll([]);\n\t}\n\n\t/**\n\t * Returns an ES6 iterator for the list.\n\t */\n\tpublic *[Symbol.iterator](): Iterator<T> {\n\t\tconst length = this._values.length;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tyield this._values[i];\n\t\t}\n\t}\n\n\t/**\n\t * Calls `f` for each element in the list.\n\t *\n\t * `f` should have at least one parameter defined which will get a current\n\t * item, with optional second argument - index.\n\t */\n\tpublic each(f: (value: T, index: number) => void): void {\n\t\t$array.each(this._values, f);\n\t}\n\n\t/**\n\t * Calls `f` for each element in the list, from right to left.\n\t *\n\t * `f` should have at least one parameter defined which will get a current\n\t * item, with optional second argument - index.\n\t */\n\tpublic eachReverse(f: (value: T, index: number) => void): void {\n\t\t$array.eachReverse(this._values, f);\n\t}\n}\n\n\n/**\n * A version of a [[List]] where the elements are disposed automatically when\n * removed from the list, unless `autoDispose` is set to `false`.\n */\nexport class ListAutoDispose<A extends IDisposer> extends List<A> implements IDisposer {\n\t/**\n\t * Automatically disposes elements that are removed from the list.\n\t *\n\t * @default true\n\t */\n\tpublic autoDispose: boolean = true;\n\n\tprivate _disposed: boolean = false;\n\n\tprotected _onSetIndex(index: number, oldValue: A, newValue: A) {\n\t\tif (this.autoDispose) {\n\t\t\toldValue.dispose();\n\t\t}\n\n\t\tsuper._onSetIndex(index, oldValue, newValue);\n\t}\n\n\tprotected _onRemoveIndex(index: number, oldValue: A) {\n\t\tif (this.autoDispose) {\n\t\t\toldValue.dispose();\n\t\t}\n\n\t\tsuper._onRemoveIndex(index, oldValue);\n\t}\n\n\tprotected _onClear(oldValues: Array<A>) {\n\t\tif (this.autoDispose) {\n\t\t\t$array.each(oldValues, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\t\t}\n\n\t\tsuper._onClear(oldValues);\n\t}\n\n\tprotected _dispose() {\n\t\tif (this.autoDispose) {\n\t\t\t$array.each(this._values, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n\n/**\n * A version of a [[List]] that is able to create new elements as well as\n * apply additional settings to newly created items.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\n */\nexport class ListTemplate<A extends Entity> extends ListAutoDispose<A> {\n\tpublic template: Template<A>;\n\tpublic make: () => A;\n\n\tconstructor(template: Template<A>, make: () => A) {\n\t\tsuper();\n\t\tthis.template = template;\n\t\tthis.make = make;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tif (this.autoDispose) {\n\t\t\tthis.template.dispose();\n\t\t}\n\t}\n}\n", "import type { IPoint } from \"./IPoint\";\nimport { isNumber } from \"./Type\";\nimport type { IBounds } from \"./IBounds\";\n\n/**\n * ============================================================================\n * CONSTANTS\n * ============================================================================\n * @hidden\n */\nexport const PI = Math.PI;\nexport const HALFPI = PI / 2;\nexport const RADIANS = PI / 180;\nexport const DEGREES = 180 / PI;\n\n/**\n * Rounds the numeric value to whole number or specific precision of set.\n *\n * @param value      Value\n * @param precision  Precision (number of decimal points)\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\n * @return Rounded value\n */\nexport function round(value: number, precision?: number, floor?: boolean): number {\n\tif (!isNumber(precision) || precision <= 0) {\n\n\t\tlet rounded = Math.round(value);\n\t\tif (floor) {\n\t\t\tif (rounded - value == 0.5) {\n\t\t\t\trounded--;\n\t\t\t}\n\t\t}\n\t\treturn rounded;\n\t}\n\telse {\n\t\tlet d: number = Math.pow(10, precision);\n\t\treturn Math.round(value * d) / d;\n\t}\n}\n\n\n/**\n * Ceils the numeric value to whole number or specific precision of set.\n *\n * @param value      Value\n * @param precision  Precision (number of decimal points)\n * @return Rounded value\n */\nexport function ceil(value: number, precision: number): number {\n\tif (!isNumber(precision) || precision <= 0) {\n\t\treturn Math.ceil(value);\n\t}\n\telse {\n\t\tlet d: number = Math.pow(10, precision);\n\t\treturn Math.ceil(value * d) / d;\n\t}\n}\n\n\n/**\n * [getCubicControlPointA description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param p0        [description]\n * @param p1        [description]\n * @param p2        [description]\n * @param p3        [description]\n * @param tensionX  [description]\n * @param tensionY  [description]\n * @return [description]\n */\nexport function getCubicControlPointA(p0: IPoint, p1: IPoint, p2: IPoint, tensionX: number, tensionY: number): IPoint {\n\treturn { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\n}\n\n/**\n * [getCubicControlPointB description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param p0        [description]\n * @param p1        [description]\n * @param p2        [description]\n * @param p3        [description]\n * @param tensionX  [description]\n * @param tensionY  [description]\n * @return [description]\n */\nexport function getCubicControlPointB(p1: IPoint, p2: IPoint, p3: IPoint, tensionX: number, tensionY: number): IPoint {\n\treturn { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\n}\n\n\nexport function fitToRange(value: number, min: number, max: number): number {\n\treturn Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns sine of an angle specified in degrees.\n *\n * @param value  Value\n * @return Sine\n */\nexport function sin(angle: number): number {\n\treturn Math.sin(RADIANS * angle);\n}\n\n/**\n * Returns tan of an angle specified in degrees.\n *\n * @param value  Value\n * @return Sine\n */\nexport function tan(angle: number): number {\n\treturn Math.tan(RADIANS * angle);\n}\n\n/**\n * Returns cosine of an angle specified in degrees.\n *\n * @param value  Value\n * @return Cosine\n */\nexport function cos(angle: number): number {\n\treturn Math.cos(RADIANS * angle);\n}\n\n// 0 to 360\nexport function normalizeAngle(value: number): number {\n\tvalue = value % 360;\n\tif (value < 0) {\n\t\tvalue += 360;\n\t}\n\treturn value;\n}\n\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\nexport function getArcBounds(cx: number, cy: number, startAngle: number, endAngle: number, radius: number): IBounds {\n\n\tlet minX = Number.MAX_VALUE;\n\tlet minY = Number.MAX_VALUE;\n\tlet maxX = -Number.MAX_VALUE;\n\tlet maxY = -Number.MAX_VALUE;\n\n\tlet bpoints = [];\n\n\tbpoints.push(getArcPoint(radius, startAngle));\n\tbpoints.push(getArcPoint(radius, endAngle));\n\n\tlet fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\n\tlet toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\n\n\tfor (let angle = fromAngle; angle <= toAngle; angle += 90) {\n\t\tif (angle >= startAngle && angle <= endAngle) {\n\t\t\tbpoints.push(getArcPoint(radius, angle));\n\t\t}\n\t}\n\n\tfor (let i = 0; i < bpoints.length; i++) {\n\t\tlet pt = bpoints[i];\n\t\tif (pt.x < minX) { minX = pt.x; }\n\t\tif (pt.y < minY) { minY = pt.y; }\n\t\tif (pt.x > maxX) { maxX = pt.x; }\n\t\tif (pt.y > maxY) { maxY = pt.y; }\n\t}\n\n\treturn ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\n}\n\n/**\n * Returns point on arc\n *\n * @param center point\n * @param radius\n * @param arc\n * @return {boolean}\n */\nexport function getArcPoint(radius: number, arc: number) {\n\treturn ({ x: radius * cos(arc), y: radius * sin(arc) });\n}\n\n\nexport function mergeBounds(bounds: IBounds[]): IBounds {\n\tconst len = bounds.length;\n\n\tif (len > 0) {\n\t\tlet bound = bounds[0];\n\t\tlet left = bound.left;\n\t\tlet top = bound.top;\n\t\tlet right = bound.right;\n\t\tlet bottom = bound.bottom;\n\n\t\tif (len > 1) {\n\t\t\tfor (let i = 1; i < len; i++) {\n\t\t\t\tbound = bounds[i];\n\t\t\t\tleft = Math.min(bound.left, left);\n\t\t\t\tright = Math.max(bound.right, right);\n\t\t\t\ttop = Math.min(bound.top, top);\n\t\t\t\tbottom = Math.max(bound.bottom, bottom);\n\t\t\t}\n\t\t}\n\n\t\treturn { left, right, top, bottom };\n\t}\n\treturn { left: 0, right: 0, top: 0, bottom: 0 };\n}\n\n\nexport function fitAngleToRange(value: number, startAngle: number, endAngle: number): number {\n\n\tif (startAngle > endAngle) {\n\t\tlet temp: number = startAngle;\n\t\tstartAngle = endAngle;\n\t\tendAngle = temp;\n\t}\n\n\tvalue = normalizeAngle(value);\n\n\tlet count = (startAngle - normalizeAngle(startAngle)) / 360;\n\n\tif (value < startAngle) {\n\t\tvalue += 360 * (count + 1);\n\t}\n\n\tlet maxEnd: number = startAngle + (endAngle - startAngle) / 2 + 180;\n\tlet maxStart: number = startAngle + (endAngle - startAngle) / 2 - 180;\n\n\tif (value > endAngle) {\n\n\t\tif (value - 360 > startAngle) {\n\t\t\tvalue -= 360;\n\t\t}\n\t\telse {\n\t\t\tif (value < maxEnd) {\n\t\t\t\tvalue = endAngle;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = startAngle;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (value < startAngle) {\n\t\tif (value > maxStart) {\n\t\t\tvalue = startAngle;\n\t\t}\n\t\telse {\n\t\t\tvalue = endAngle;\n\t\t}\n\t}\n\n\treturn value;\n}\n\nexport function inBounds(point: IPoint, bounds: IBounds) {\n\tif (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function getAngle(point1: IPoint, point2?: IPoint): number {\n\tif (!point2) {\n\t\tpoint2 = { x: point1.x * 2, y: point1.y * 2 };\n\t}\n\tlet diffX: number = point2.x - point1.x;\n\tlet diffY: number = point2.y - point1.y;\n\tlet angle: number = Math.atan2(diffY, diffX) * DEGREES;\n\tif (angle < 0) {\n\t\tangle += 360;\n\t}\n\treturn normalizeAngle(angle);\n}\n\n/**\n * [getPointOnQuadraticCurve description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param pointA        [description]\n * @param pointB        [description]\n * @param controlPoint  [description]\n * @param position      [description]\n * @return [description]\n */\nexport function getPointOnQuadraticCurve(pointA: IPoint, pointB: IPoint, controlPoint: IPoint, position: number): IPoint {\n\tlet x: number = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\n\tlet y: number = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\n\treturn { x: x, y: y };\n}\n\nexport function getPointOnLine(pointA: IPoint, pointB: IPoint, position: number): IPoint {\n\treturn { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\n}\n\n\n/**\n * Returns the closest value from the array of values to the reference value.\n *\n * @param values  Array of values\n * @param value   Reference value\n * @return Closes value from the array\n */\nexport function closest(values: number[], referenceValue: number): number {\n\treturn values.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\n\t});\n}\n\n/**\n * Returns true if bounds overlap\n * @param bounds1 IBounds\n * @param bounds2 IBounds\n * @returns boolean\n */\nexport function boundsOverlap(bounds1: IBounds, bounds2: IBounds): boolean {\n\tconst horizontalOverlap = bounds1.left < bounds2.right && bounds1.right > bounds2.left;\n\tconst verticalOverlap = bounds1.top < bounds2.bottom && bounds1.bottom > bounds2.top;\n\treturn horizontalOverlap && verticalOverlap;\n}\n\n/**\n * Generates points of a spiral\n * @param cx \n * @param cy \n * @param radius \n * @param radiusY \n * @param innerRadius \n * @param step \n * @param radiusStep \n * @param startAngle \n * @param endAngle \n * @returns IPoint[]\n */\nexport function spiralPoints(cx: number, cy: number, radius: number, radiusY: number, innerRadius: number, step: number, radiusStep: number, startAngle: number, endAngle: number): IPoint[] {\n\n\tlet r = innerRadius + 0.01;\n\tlet angle = startAngle * RADIANS;\n\tlet points = [];\n\n\twhile (r < radius + radiusStep) {\n\n\t\tlet stepSize = step;\n\t\tif (stepSize / 2 > r) {\n\t\t\tstepSize = 2 * r;\n\t\t}\n\n\t\tangle += 2 * Math.asin(stepSize / 2 / r);\n\n\t\tif (angle * DEGREES > endAngle + ((radius - innerRadius) / radiusStep) * 360) {\n\t\t\tbreak;\n\t\t}\n\n\t\tlet degrees = angle * DEGREES;\n\n\t\tlet point = { x: cx + r * Math.cos(angle), y: cy + r * radiusY / radius * Math.sin(angle) };\n\t\tpoints.push(point);\n\n\t\tr = innerRadius + degrees / 360 * radiusStep;\n\t}\n\n\tpoints.shift();\n\n\treturn points;\n}\n\n/**\n * Returns true if circles overlap\n * @param circle1\n * @param circle2 \n * @returns boolean\n */\nexport function circlesOverlap(circle1: { x: number, y: number, radius: number }, circle2: { x: number, y: number, radius: number }): boolean {\n\treturn Math.hypot(circle1.x - circle2.x, circle1.y - circle2.y) <= circle1.radius + circle2.radius;\n}", "/**\n * A collection of easing functions\n *\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport * as $math from \"./Math\";\nimport type { Time } from \"./Animation\";\n\nexport type Easing = (time: Time) => Time;\n\n/**\n * The functions below are from D3.js library (https://d3js.org/)\n *\n * ----------------------------------------------------------------------------\n * Copyright 2017 Mike Bostock\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *\tthis list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *\tthis list of conditions and the following disclaimer in the documentation\n *\tand/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *\tcontributors may be used to endorse or promote products derived from this\n *\tsoftware without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n * ----------------------------------------------------------------------------\n * @hidden\n */\n\n/**\n */\nexport function linear(t: Time): Time {\n\treturn t;\n}\n\nexport function quad(t: Time): Time {\n\treturn (t as number) * (t as number);\n}\n\nexport function cubic(t: Time): Time {\n\treturn (t as number) * (t as number) * (t as number);\n}\n\nexport function pow(t: Time, e: number): Time {\n\treturn Math.pow(t as number, e);\n}\n\nexport function exp(t: Time): Time {\n\treturn Math.pow(2, 10 * (t as number) - 10);\n}\n\nexport function sine(t: Time): Time {\n\treturn 1 - Math.cos((t as number) * $math.HALFPI);\n}\n\nexport function circle(t: Time): Time {\n\treturn 1 - Math.sqrt(1 - (t as number) * (t as number));\n}\n\n/**\n * ============================================================================\n * TRANSFORMERS\n * ============================================================================\n * @hidden\n */\n\n/**\n */\nexport function yoyo(ease: Easing): Easing {\n\treturn function (t: Time) {\n\t\tif ((t as number) < 0.5) {\n\t\t\treturn ease((t as number) * 2.0);\n\n\t\t} else {\n\t\t\treturn ease((1.0 - (t as number)) * 2.0);\n\t\t}\n\t};\n}\n\nexport function out(ease: Easing): Easing {\n\treturn function (t: Time) {\n\t\treturn 1.0 - (ease(1.0 - (t as number)) as number);\n\t};\n}\n\nexport function inOut(ease: Easing): Easing {\n\treturn function (t: Time) {\n\t\tif (t as number <= 0.5) {\n\t\t\treturn ease(t as number * 2.0) as number / 2.0;\n\n\t\t} else {\n\t\t\treturn 1.0 - (ease((1.0 - (t as number)) * 2.0) as number / 2.0);\n\t\t}\n\t};\n}\n\n/**\n * ============================================================================\n * BOUNCE\n * ============================================================================\n * @hidden\n */\nlet b1 = 4 / 11,\n\tb2 = 6 / 11,\n\tb3 = 8 / 11,\n\tb4 = 3 / 4,\n\tb5 = 9 / 11,\n\tb6 = 10 / 11,\n\tb7 = 15 / 16,\n\tb8 = 21 / 22,\n\tb9 = 63 / 64,\n\tb0 = 1 / b1 / b1;\n\nexport function bounce(t: Time): Time {\n\treturn 1 - (bounceOut(1 - (t as number)) as number);\n}\n\n/**\n * @ignore\n */\nfunction bounceOut(t: Time): Time {\n\tt = t as number;\n\tif (t < b1) {\n\t\treturn b0 * t * t;\n\t} else if (t < b3) {\n\t\treturn b0 * (t -= b2) * t + b4;\n\t} else if (t < b6) {\n\t\treturn b0 * (t -= b5) * t + b7;\n\t} else {\n\t\treturn b0 * (t -= b8) * t + b9;\n\t}\n}\n\n/**\n * ============================================================================\n * ELASTIC\n * ============================================================================\n * @hidden\n */\n\n/**\n * @ignore\n */\nlet tau = 2 * Math.PI;\n\n/**\n * @ignore\n */\nlet amplitude = 1;\n\n/**\n * @ignore\n */\nlet period = 0.3 / tau;\n\n/**\n * @ignore\n */\nlet s = Math.asin(1 / amplitude) * period;\n\nexport function elastic(t: Time): Time {\n\tlet v = t as number;\n\treturn amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\n}\n", "\r\n/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n\t/**\r\n\t * Currently running version of amCharts.\r\n\t */\r\n\treadonly version: string = \"5.11.2\";\r\n\r\n\t/**\r\n\t * List of applied licenses.\r\n\t * @ignore\r\n\t */\r\n\tlicenses: String[] = [];\r\n\r\n\t/**\r\n\t * Entities that have their `id` setting set.\r\n\t */\r\n\tentitiesById: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * All created [[Root]] elements.\r\n\t */\r\n\trootElements: any[] = [];\r\n\r\n}\r\n\r\n/**\r\n\t* @ignore\r\n */\r\nexport const registry = new Registry();\r\n\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license: string): void {\r\n\tregistry.licenses.push(license);\r\n}\r\n\r\n\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements(): void {\r\n\tlet root;\r\n\twhile(root = registry.rootElements.pop()) {\r\n\t\troot.dispose();\r\n\t}\r\n}\r\n\r\n/**\r\n * Finds and returns a `Root` element assigned to a container with `id`.\r\n * \r\n * @param   id  Container ID\r\n * @return      Root\r\n * @since 5.9.2\r\n */\r\nexport function getRootById(id: string): any {\r\n\tlet found;\r\n\tregistry.rootElements.forEach((item) => {\r\n\t\tif (item.dom.id == id) {\r\n\t\t\tfound = item;\r\n\t\t}\r\n\t});\r\n\treturn found;\r\n}", "import type { Entity, Dirty } from \"./Entity\";\nimport type { Animations } from \"./Animation\";\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\n\n/**\n * An object representing a collection of setting values to apply as required.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\n */\nexport class State<E extends Entity> {\n\tprivate _entity: E;\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\tpublic _userSettings: Dirty<E[\"_settings\"]> = {};\n\n\tconstructor(entity: E, settings: Partial<E[\"_settings\"]>) {\n\t\tthis._entity = entity;\n\t\tthis._settings = settings;\n\n\t\t$object.each(settings, (key) => {\n\t\t\tthis._userSettings[key] = true;\n\t\t});\n\t}\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return            Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key` to be set when the state\n\t * is applied.\n\t *\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._userSettings[key] = true;\n\t\tthis.setRaw(key, value);\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._userSettings[key];\n\t\tdelete this._settings[key];\n\t}\n\n\t/**\n\t * Sets multiple settings at once.\n\t *\n\t * `settings` must be an object with key: value pairs.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param settings Settings\n\t */\n\tpublic setAll(settings: this[\"_settings\"]) {\n\t\t$object.keys(settings).forEach((key) => {\n\t\t\tthis.set(key, settings[key]);\n\t\t});\n\t}\n\n\tprivate _eachSetting<Key extends keyof E[\"_settings\"], Value extends E[\"_settings\"][Key]>(f: (key: Key, value: Value) => void): void {\n\t\t$object.each(this._settings, f as any);\n\t}\n\n\t/**\n\t * Applies the state to the target element.\n\t *\n\t * All setting values are set immediately.\n\t */\n\tpublic apply() {\n\t\tconst seen: Dirty<E[\"_settings\"]> = {};\n\n\t\tseen[\"stateAnimationEasing\"] = true;\n\t\tseen[\"stateAnimationDuration\"] = true;\n\n\t\tconst defaultState = this._entity.states.lookup(\"default\")!;\n\n\t\tthis._eachSetting((key, value) => {\n\t\t\tif (!seen[key]) {\n\t\t\t\tseen[key] = true;\n\n\t\t\t\t// save values to default state\n\t\t\t\tif (this !== defaultState) {\n\t\t\t\t\tif (!(key in defaultState._settings)) {\n\t\t\t\t\t\tdefaultState._settings[key] = this._entity.get(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._entity.set(key, value);\n\t\t\t}\n\t\t});\n\t}\n\n\n\n\t/**\n\t * Applies the state to the target element.\n\t *\n\t * Returns an object representing all [[Animation]] objects created for\n\t * each setting key transition.\n\t *\n\t * @return           Animations\n\t */\n\tpublic applyAnimate(duration?: number): Animations<E[\"_settings\"]> {\n\n\t\tif (duration == null) {\n\t\t\tduration = this._settings.stateAnimationDuration;\n\t\t}\n\t\tif (duration == null) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tlet easing = this._settings.stateAnimationEasing;\n\t\tif (easing == null) {\n\t\t\teasing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\n\t\t}\n\n\t\tconst defaultState = this._entity.states.lookup(\"default\")!;\n\n\t\tconst seen: Dirty<E[\"_settings\"]> = {};\n\n\t\tseen[\"stateAnimationEasing\"] = true;\n\t\tseen[\"stateAnimationDuration\"] = true;\n\n\t\tconst animations: Animations<E[\"_settings\"]> = {};\n\n\t\tthis._eachSetting((key, value) => {\n\t\t\tif (!seen[key]) {\n\t\t\t\tseen[key] = true;\n\n\t\t\t\t// save values to default state\n\t\t\t\tif (this != defaultState) {\n\t\t\t\t\tif (!(key in defaultState._settings)) {\n\t\t\t\t\t\tdefaultState._settings[key] = this._entity.get(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst animation = this._entity.animate({\n\t\t\t\t\tkey: key,\n\t\t\t\t\tto: value,\n\t\t\t\t\tduration: duration!,\n\t\t\t\t\teasing: easing\n\t\t\t\t});\n\n\t\t\t\tif (animation) {\n\t\t\t\t\tanimations[key] = animation;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn animations;\n\t}\n}\n\n/**\n * Collection of [[State]] objects for an element.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\n */\nexport class States<E extends Entity> {\n\tprivate _states: { [key: string]: State<E> } = {};\n\tprivate _entity: E;\n\n\tconstructor(entity: E) {\n\t\tthis._entity = entity;\n\t}\n\n\t/**\n\t * Checks if a state by `name` exists. Returns it there is one.\n\t *\n\t * @param  name  State name\n\t * @return       State\n\t */\n\tpublic lookup(name: string): State<E> | undefined {\n\t\treturn this._states[name];\n\t}\n\n\t/**\n\t * Sets supplied `settings` on a state by the `name`.\n\t *\n\t * If such state does not yet exists, it is created.\n\t *\n\t * @param   name      State name\n\t * @param   settings  Settings\n\t * @return            New State\n\t */\n\tpublic create(name: string, settings: Partial<E[\"_settings\"]>): State<E> {\n\t\tconst state = this._states[name];\n\n\t\tif (state) {\n\t\t\tstate.setAll(settings);\n\t\t\treturn state;\n\n\t\t} else {\n\t\t\tconst state = new State(this._entity, settings);\n\t\t\tthis._states[name] = state;\n\t\t\treturn state;\n\t\t}\n\t}\n\n\t/**\n\t * Removes the state called `name`.\n\t *\n\t * @param   name      State name\n\t */\n\tpublic remove(name: string): void {\n\t\tdelete this._states[name];\n\t}\n\n\t/**\n\t * Applies a named state to the target element.\n\t *\n\t * @param  newState  State name\n\t */\n\tpublic apply(newState: string) {\n\t\tconst state = this._states[newState];\n\n\t\tif (state) {\n\t\t\tstate.apply();\n\t\t}\n\n\t\tthis._entity._applyState(newState);\n\t}\n\n\t/**\n\t * Applies a named state to the element.\n\t *\n\t * Returns an object representing all [[Animation]] objects created for\n\t * each setting key transition.\n\t *\n\t * @param   newState  State name\n\t * @return            Animations\n\t */\n\tpublic applyAnimate(newState: string, duration?: number): Animations<E[\"_settings\"]> | undefined {\n\t\tlet animations;\n\t\tconst state = this._states[newState];\n\n\t\tif (state) {\n\t\t\tanimations = state.applyAnimate(duration);\n\t\t}\n\n\t\tthis._entity._applyStateAnimated(newState, duration);\n\t\treturn animations;\n\t}\n}\n", "import type { Root } from \"../Root\";\nimport type { Template, ApplyState } from \"./Template\";\nimport type { Theme, IRule } from \"../Theme\";\nimport type { ILocale } from \"./Language\";\n\nimport { IDisposer, Disposer } from \"./Disposer\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport { Time, IAnimation, AnimationState, getInterpolate } from \"./Animation\";\nimport { States } from \"./States\";\nimport { registry } from \"../Registry\";\n\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\nimport * as $array from \"./Array\";\nimport * as $order from \"./Order\";\n\n/**\n * @ignore\n */\nexport type Dirty<A> = { [K in keyof A]?: boolean };\n\n\n/**\n * Allows to dynamically modify setting value of its target element.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\n */\nexport class Adapters<E extends Settings> {\n\tprivate _entity: E;\n\tprivate _callbacks: { [K in keyof E[\"_settings\"]]?: Array<<O extends E>(value: O[\"_settings\"][K], target: O, key: K) => O[\"_settings\"][K]> } = {};\n\tprivate _disabled: { [K in keyof E[\"_settings\"]]?: boolean } = {};\n\n\tconstructor(entity: E) {\n\t\tthis._entity = entity;\n\t}\n\n\t/**\n\t * Add a function (`callback`) that will modify value for setting `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\n\t */\n\tpublic add<Key extends keyof E[\"_settings\"]>(key: Key, callback: (value: E[\"_settings\"][Key], target: E, key: Key) => E[\"_settings\"][Key]): IDisposer {\n\t\tlet callbacks = this._callbacks[key];\n\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = this._callbacks[key] = [];\n\t\t}\n\n\t\tcallbacks.push(callback);\n\n\t\tthis._entity._markDirtyKey(key);\n\n\t\treturn new Disposer(() => {\n\t\t\tif ($array.removeFirst(callbacks!, callback)) {\n\t\t\t\tthis._entity._markDirtyKey(key);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes all adapters for the specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic remove<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tconst callbacks = this._callbacks[key];\n\n\t\tif (callbacks !== undefined) {\n\t\t\tdelete this._callbacks[key];\n\n\t\t\tif (callbacks.length !== 0) {\n\t\t\t\tthis._entity._markDirtyKey(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Enables (previously disabled) adapters for specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic enable<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tif (this._disabled[key]) {\n\t\t\tdelete this._disabled[key];\n\t\t\tthis._entity._markDirtyKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * Disables all adapters for specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic disable<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tif (!this._disabled[key]) {\n\t\t\tthis._disabled[key] = true;\n\t\t\tthis._entity._markDirtyKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fold<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]): E[\"_settings\"][Key] {\n\t\tif (!this._disabled[key]) {\n\t\t\tconst callbacks = this._callbacks[key];\n\n\t\t\tif (callbacks !== undefined) {\n\t\t\t\tfor (let i = 0, len = callbacks.length; i < len; ++i) {\n\t\t\t\t\tvalue = callbacks[i](value, this._entity, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n\nexport interface IEntitySettings {\n\n\t/**\n\t * Tags which can be used by the theme rules.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t */\n\tthemeTags?: Array<string>;\n\n\t/**\n\t * Tags which can be used by the theme rules.\n\t *\n\t * These tags only apply to this object, not any children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t */\n\tthemeTagsSelf?: Array<string>;\n\n\t/**\n\t * A list of themes applied to the element.\n\t */\n\tthemes?: Array<Theme>;\n\n\n\t/**\n\t * Duration of transition from one state to another.\n\t */\n\tstateAnimationDuration?:number;\n\n\t/**\n\t * Easing of transition from one state to another.\n\t */\n\tstateAnimationEasing?:$ease.Easing;\n\n\t/**\n\t * A custom string ID for the element.\n\t *\n\t * If set, element can be looked up via `root.entitiesById`.\n\t *\n\t * Will raise error if an element with the same ID already exists.\n\t */\n\tid?: string;\n\n\t/**\n\t * A storage for any custom user data that needs to be associated with the\n\t * element.\n\t */\n\tuserData?: any;\n\n}\n\nexport interface IEntityPrivate {\n}\n\nexport interface IEntityEvents {\n}\n\n/**\n * Animation options.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\n */\nexport interface AnimationOptions<Key, Value> {\n\n\t/**\n\t * A setting key to animate value for.\n\t */\n\tkey: Key,\n\n\t/**\n\t * Initial value to animate from. If not set, will use current value.\n\t */\n\tfrom?: Value;\n\n\t/**\n\t * Target value to animate to.\n\t */\n\tto: Value;\n\n\t/**\n\t * Animation duration in milliseconds.\n\t */\n\tduration: number;\n\n\t/**\n\t * Easing function. Defaults to linear.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\teasing?: $ease.Easing;\n\n\t/**\n\t * How many times to play the animation. Defaults to 1.\n\t */\n\tloops?: number;\n}\n\nexport interface IAnimationEvents {\n\t/**\n\t * Invoked when animation was stopped, which happens in these situations:\n\t * 1. When the animation reached the end.\n\t * 2. When the `stop()` method is called.\n\t * 3. When a new animation starts for the same key.\n\t * 4. When calling `set` for the same key.\n\t */\n\tstopped: {};\n}\n\n/**\n * Animation object.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\n */\nexport class Animation<Value> {\n\tprivate _animation: IStartAnimation;\n\tprivate _from: Value;\n\tprivate _to: Value;\n\tprivate _duration: number;\n\tprivate _easing: $ease.Easing;\n\tprivate _loops: number;\n\tprivate _interpolate: <A extends Value>(diff: Time, from: A, to: A) => A;\n\tprivate _oldTime: number | null;\n\tprivate _time: number = 0;\n\n\tpublic _stopped: boolean = false;\n\tpublic _playing: boolean = true;\n\n\tpublic events: EventDispatcher<Events<this, IAnimationEvents>> = new EventDispatcher();\n\n\tconstructor(animation: IStartAnimation, from: Value, to: Value, duration: number, easing: $ease.Easing, loops: number, startingTime: number | null) {\n\t\tthis._animation = animation;\n\t\tthis._from = from;\n\t\tthis._to = to;\n\t\tthis._duration = duration;\n\t\tthis._easing = easing;\n\t\tthis._loops = loops;\n\t\tthis._interpolate = getInterpolate(from, to);\n\t\tthis._oldTime = startingTime;\n\t}\n\n\tpublic get to() {\n\t\treturn this._to;\n\t}\n\n\tpublic get from() {\n\t\treturn this._from;\n\t}\n\n\tpublic get playing() {\n\t\treturn this._playing;\n\t}\n\n\tpublic get stopped() {\n\t\treturn this._stopped;\n\t}\n\n\tpublic stop(): void {\n\t\tif (!this._stopped) {\n\t\t\tthis._stopped = true;\n\t\t\tthis._playing = false;\n\n\t\t\tif (this.events.isEnabled(\"stopped\")) {\n\t\t\t\tthis.events.dispatch(\"stopped\", {\n\t\t\t\t\ttype: \"stopped\",\n\t\t\t\t\ttarget: this,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic pause(): void {\n\t\tthis._playing = false;\n\t\tthis._oldTime = null;\n\t}\n\n\tpublic play(): void {\n\t\tif (!this._stopped && !this._playing) {\n\t\t\tthis._playing = true;\n\t\t\tthis._animation._startAnimation();\n\t\t}\n\t}\n\n\tpublic get percentage(): Time {\n\t\treturn this._time / this._duration;\n\t}\n\n\tpublic waitForStop(): Promise<void> {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tif (this._stopped) {\n\t\t\t\tresolve();\n\n\t\t\t} else {\n\t\t\t\tconst listener = () => {\n\t\t\t\t\tstopped.dispose();\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\n\t\t\t\tconst stopped = this.events.on(\"stopped\", listener);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic _checkEnded(): boolean {\n\t\tif (this._loops > 1) {\n\t\t\t--this._loops;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic _run(currentTime: number): void {\n\t\tif (this._oldTime !== null) {\n\t\t\tthis._time += currentTime - this._oldTime;\n\n\t\t\tif (this._time > this._duration) {\n\t\t\t\tthis._time = this._duration;\n\t\t\t}\n\t\t}\n\n\t\tthis._oldTime = currentTime;\n\t}\n\n\tpublic _reset(currentTime: number): void {\n\t\tthis._oldTime = currentTime;\n\t\tthis._time = 0;\n\t}\n\n\tpublic _value(diff: Time): Value {\n\t\treturn this._interpolate(this._easing(diff), this._from, this._to);\n\t}\n}\n\ntype Animated<P> = { [K in keyof P]?: Animation<P[K]> };\n\n\ninterface IStartAnimation {\n\t_startAnimation(): void;\n}\n\n\n/**\n * @ignore\n */\nlet counter = 0;\n\n/**\n * Base class for [[Entity]] objects that support Settings.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n */\nexport abstract class Settings implements IDisposer, IAnimation, IStartAnimation {\n\n\t/**\n\t * Unique ID.\n\t */\n\tpublic uid: number = ++counter;\n\n\tpublic _settings: {};\n\tpublic _privateSettings: {} = {};\n\n\tpublic _settingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K], O extends this>(value: V, target?: O, key?: K) => void> } = {};\n\tpublic _privateSettingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K], O extends this>(value: V, target?: O, key?: K) => void> } = {};\n\n\tpublic _prevSettings: this[\"_settings\"] = {};\n\tpublic _prevPrivateSettings: this[\"_privateSettings\"] = {};\n\n\tprotected _animatingSettings: Animated<this[\"_settings\"]> = {};\n\tprotected _animatingPrivateSettings: Animated<this[\"_privateSettings\"]> = {};\n\n\tprivate _disposed: boolean = false;\n\n\t// TODO move this into Entity\n\tprotected _userProperties: Dirty<this[\"_settings\"]> = {};\n\n\t/**\n\t * If this is set to `false` then disposing does nothing, it's a no-op.\n\t */\n\tpublic enableDispose: boolean = true;\n\n\tconstructor(settings: Settings[\"_settings\"]) {\n\t\tthis._settings = settings;\n\t}\n\n\tprotected _checkDirty(): void {\n\t\t$object.keys(this._settings).forEach((key) => {\n\t\t\t(this._userProperties as any)[key] = true;\n\t\t\tthis._markDirtyKey(key);\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetUserSettings(){\n\t\tthis._userProperties = {};\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirty(): void;\n\n\tpublic _runAnimation(currentTime: number): AnimationState {\n\t\tlet state = AnimationState.Stopped;\n\n\t\tif (!this.isDisposed()) {\n\t\t\tlet playing = false;\n\t\t\tlet paused = false;\n\n\t\t\t$object.each(this._animatingSettings, (key, animation) => {\n\t\t\t\tif (animation.stopped) {\n\t\t\t\t\tthis._stopAnimation(key);\n\n\t\t\t\t} else if (animation.playing) {\n\t\t\t\t\tanimation._run(currentTime);\n\n\t\t\t\t\tconst diff = animation.percentage;\n\n\t\t\t\t\tif (diff >= 1) {\n\t\t\t\t\t\tif (animation._checkEnded()) {\n\t\t\t\t\t\t\tthis.set(key, animation._value(1));\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\t\tanimation._reset(currentTime);\n\t\t\t\t\t\t\tthis._set(key, animation._value(1));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\tthis._set(key, animation._value(diff));\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tpaused = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$object.each(this._animatingPrivateSettings, (key, animation) => {\n\t\t\t\tif (animation.stopped) {\n\t\t\t\t\tthis._stopAnimationPrivate(key);\n\n\t\t\t\t} else if (animation.playing) {\n\t\t\t\t\tanimation._run(currentTime);\n\n\t\t\t\t\tconst diff = animation.percentage;\n\n\t\t\t\t\tif (diff >= 1) {\n\t\t\t\t\t\tif (animation._checkEnded()) {\n\t\t\t\t\t\t\tthis.setPrivate(key, animation._value(1));\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\t\tanimation._reset(currentTime);\n\t\t\t\t\t\t\tthis._setPrivate(key, animation._value(1));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\tthis._setPrivate(key, animation._value(diff));\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tpaused = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (playing) {\n\t\t\t\tstate = AnimationState.Playing;\n\n\t\t\t} else if (paused) {\n\t\t\t\tstate = AnimationState.Paused;\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tpublic abstract _startAnimation(): void;\n\tprotected abstract _animationTime(): number | null;\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(_key: Key) {\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(_key: Key) {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Sets a callback function to invoke when specific key of settings changes\n\t * or is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Settings key\n\t * @param   callback  Callback\n\t * @return            Disposer for event\n\t */\n\tpublic on<Key extends keyof this[\"_settings\"]>(key: Key, callback: (value: this[\"_settings\"][Key], target?: this, key?: Key) => void): IDisposer {\n\t\tlet events = this._settingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._settingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._settingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes a callback for when value of a setting changes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Private settings key\n\t * @param   callback  Callback\n\t * @since 5.9.2\n\t */\n\tpublic off<Key extends keyof this[\"_settings\"]>(key: Key, callback?: (value: this[\"_settings\"][Key], target?: this, key?: Key) => void): void {\n\t\tlet events = this._settingEvents[key];\n\t\tif (events !== undefined && callback !== undefined) {\n\t\t\t$array.removeFirst(events, callback);\n\t\t}\n\t\telse {\n\t\t\tdelete this._settingEvents[key];\n\t\t}\n\t}\n\n\t/**\n\t * Sets a callback function to invoke when specific key of private settings\n\t * changes or is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Private settings key\n\t * @param   callback  Callback\n\t * @return            Disposer for event\n\t */\n\tpublic onPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback: (value: this[\"_privateSettings\"][Key], target?: this, key?: Key) => void): IDisposer {\n\t\tlet events = this._privateSettingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._privateSettingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._privateSettingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes a callback for when value of a private setting changes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Private settings key\n\t * @param   callback  Callback\n\t * @since 5.9.2\n\t */\n\tpublic offPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback?: (value: this[\"_privateSettings\"][Key], target?: this, key?: Key) => void): void {\n\t\tlet events = this._privateSettingEvents[key];\n\t\tif (events !== undefined && callback !== undefined) {\n\t\t\t$array.removeFirst(events, callback);\n\t\t}\n\t\telse {\n\t\t\tdelete this._privateSettingEvents[key];\n\t\t}\n\t}\n\n/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = (<any>this._settings)[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if the setting exists.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key        Settings key\n\t * @return  {boolean}  Key exists\n\t */\n\tpublic has<Key extends keyof this[\"_settings\"]>(key: Key): boolean {\n\t\treturn key in this._settings;\n\t}\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return  {any}     Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\treturn this.getRaw(key, fallback);\n\t}\n\n\tprotected _sendKeyEvent<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): void {\n\t\tconst events = this._settingEvents[key];\n\n\t\tif (events !== undefined) {\n\t\t\t$array.each(events!, (callback) => {\n\t\t\t\tcallback(value, this, key);\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _sendPrivateKeyEvent<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): void {\n\t\tconst events = this._privateSettingEvents[key];\n\n\t\tif (events !== undefined) {\n\t\t\t$array.each(events!, (callback) => {\n\t\t\t\tcallback(value, this, key);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, old: Value, value: Value) {\n\t\tthis._prevSettings[key] = old;\n\t\tthis._sendKeyEvent(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value) {\n\t\tconst old = (<any>this._settings)[key];\n\n\t\t(<any>this._settings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setRaw(key, old, value);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _set<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tconst old = (<any>this._settings)[key];\n\n\t\t(<any>this._settings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setRaw(key, old, value);\n\t\t\tthis._markDirtyKey(key);\n\t\t}\n\t}\n\n\n\tprotected _stopAnimation<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tconst animation = this._animatingSettings[key];\n\n\t\tif (animation) {\n\t\t\tdelete this._animatingSettings[key];\n\t\t\tanimation.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key`, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._set(key, value);\n\t\tthis._stopAnimation(key);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`;\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tif (key in this._settings) {\n\t\t\tthis._prevSettings[key] = (<any>this._settings)[key];\n\n\t\t\tdelete (<any>this._settings)[key];\n\n\t\t\tthis._sendKeyEvent(key, undefined as any);\n\t\t\tthis._markDirtyKey(key);\n\t\t}\n\n\t\tthis._stopAnimation(key);\n\t}\n\n\t/**\n\t * Removes all keys;\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t */\n\tpublic removeAll(): void {\n\t\t$array.each($object.keys(this._settings), (key) => {\n\t\t\tthis.remove(key);\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"], F>(key: Key, fallback: F): NonNullable<this[\"_privateSettings\"][Key]> | F;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): this[\"_privateSettings\"][Key];\n\n\t/**\n\t * Returns a value of a private setting.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = (<any>this._privateSettings)[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, old: Value, value: Value) {\n\t\tthis._prevPrivateSettings[key] = old;\n\t\tthis._sendPrivateKeyEvent(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value) {\n\t\tconst old = (<any>this._privateSettings)[key];\n\n\t\t(<any>this._privateSettings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setPrivateRaw(key, old, value);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: this[\"_privateSettings\"][Key]) {\n\t\tconst old = (<any>this._privateSettings)[key];\n\n\t\t(<any>this._privateSettings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setPrivateRaw(key, old, value);\n\t\t\tthis._markDirtyPrivateKey(key);\n\t\t}\n\t}\n\n\tprotected _stopAnimationPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tconst animation = this._animatingPrivateSettings[key];\n\n\t\tif (animation) {\n\t\t\tanimation.stop();\n\t\t\tdelete this._animatingPrivateSettings[key];\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._setPrivate(key, value);\n\t\tthis._stopAnimationPrivate(key);\n\t\treturn value;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tif (key in this._privateSettings) {\n\t\t\tthis._prevPrivateSettings[key] = (<any>this._privateSettings)[key];\n\n\t\t\tdelete (<any>this._privateSettings)[key];\n\n\t\t\tthis._markDirtyPrivateKey(key);\n\t\t}\n\n\t\tthis._stopAnimationPrivate(key);\n\t}\n\n\t/**\n\t * Sets multiple settings at once.\n\t *\n\t * `settings` must be an object with key: value pairs.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param settings Settings\n\t */\n\tpublic setAll(settings: Partial<this[\"_settings\"]>) {\n\t\t$object.each(settings, (key, value) => {\n\t\t\tthis.set(key, value);\n\t\t});\n\t}\n\n\t/**\n\t * Animates setting values from current/start values to new ones.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\n\t * @param   options  Animation options\n\t * @return           Animation object\n\t */\n\tpublic animate<Key extends keyof this[\"_settings\"]>(options: AnimationOptions<Key, this[\"_settings\"][Key]>): Animation<this[\"_settings\"][Key]> {\n\t\tconst key = options.key;\n\t\tconst to = options.to;\n\t\tconst duration = options.duration || 0;\n\t\tconst loops = options.loops || 1;\n\n\t\tconst from = (options.from === undefined ? this.get(key) : options.from);\n\t\tconst easing = (options.easing === undefined ? $ease.linear : options.easing);\n\n\t\tif (duration === 0) {\n\t\t\tthis.set(key, to);\n\n\t\t} else {\n\t\t\tif (from === undefined || from === to) {\n\t\t\t\tthis.set(key, to);\n\n\t\t\t} else {\n\t\t\t\tthis.set(key, from);\n\n\t\t\t\tconst animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n\t\t\t\tthis._startAnimation();\n\n\t\t\t\treturn animation;\n\t\t\t}\n\t\t}\n\n\t\tconst animation = new Animation(this, from, to, duration, easing, loops, null);\n\t\tanimation.stop();\n\t\treturn animation;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic animatePrivate<Key extends keyof this[\"_privateSettings\"]>(options: AnimationOptions<Key, this[\"_privateSettings\"][Key]>): Animation<this[\"_privateSettings\"][Key]> {\n\t\tconst key = options.key;\n\t\tconst to = options.to;\n\t\tconst duration = options.duration || 0;\n\t\tconst loops = options.loops || 1;\n\n\t\tconst from = (options.from === undefined ? this.getPrivate(key) : options.from);\n\t\tconst easing = (options.easing === undefined ? $ease.linear : options.easing);\n\n\t\tif (duration === 0) {\n\t\t\tthis.setPrivate(key, to);\n\n\t\t} else {\n\t\t\tif (from === undefined || from === to) {\n\t\t\t\tthis.setPrivate(key, to);\n\n\t\t\t} else {\n\t\t\t\tthis.setPrivate(key, from);\n\n\t\t\t\tconst animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n\t\t\t\tthis._startAnimation();\n\n\t\t\t\treturn animation;\n\t\t\t}\n\t\t}\n\n\t\tconst animation = new Animation(this, from, to, duration, easing, loops, null);\n\t\tanimation.stop();\n\t\treturn animation;\n\t}\n\n\tprotected _dispose() {}\n\n\t/**\n\t * Returns `true` if this element is disposed.\n\t *\n\t * @return Disposed\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Disposes this object.\n\t */\n\tpublic dispose() {\n\t\tif (this.enableDispose && !this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n/**\n * Base class.\n *\n * @important\n */\nexport class Entity extends Settings implements IDisposer {\n\tpublic _root: Root;\n\n\tpublic _user_id:any; // for testing purposes\n\n\tdeclare public _settings: IEntitySettings;\n\tdeclare public _privateSettings: IEntityPrivate;\n\tdeclare public _events: IEntityEvents;\n\n\tpublic states: States<this> = new States(this);\n\tpublic adapters: Adapters<this> = new Adapters(this);\n\tpublic events: EventDispatcher<Events<this, this[\"_events\"]>> = this._createEvents();\n\n\tprotected _userPrivateProperties: Dirty<this[\"_privateSettings\"]> = {};\n\n\tpublic _dirty: Dirty<this[\"_settings\"]> = {};\n\tpublic _dirtyPrivate: Dirty<this[\"_privateSettings\"]> = {};\n\n\tprotected _template: Template<this> | undefined;\n\n\t// Templates for the themes\n\tprotected _templates: Array<Template<this>> = [];\n\n\t// Internal templates which can be overridden by the user's templates\n\tprotected _internalTemplates: Array<Template<this>>;\n\n\t// Default themes which can be overridden by the user's themes\n\tpublic _defaultThemes: Array<Theme> = [];\n\n\t// Disposers for all of the templates\n\tprotected _templateDisposers: Array<IDisposer> = [];\n\n\tprotected _disposers: Array<IDisposer> = [];\n\n\t// Whether the template setup function should be run\n\tprotected _runSetup: boolean = true;\n\n\tpublic static className: string = \"Entity\";\n\tpublic static classNames: Array<string> = [\"Entity\"];\n\n\tprotected _disposerProperties: { [Key in keyof this[\"_settings\"]]?: Array<IDisposer> } = {};\n\n\t/**\n\t * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\n\t *\n\t * Use static method `Class.new()` instead.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @ignore\n\t */\n\tconstructor(root: Root, settings: Entity[\"_settings\"], isReal: boolean, templates: Array<Template<Entity>> = []) {\n\t\tsuper(settings);\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\t\tthis._root = root;\n\t\tthis._internalTemplates = templates as Array<Template<this>>;\n\n\t\tif (settings.id) {\n\t\t\tthis._registerId(settings.id);\n\t\t}\n\t}\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tstatic new<C extends typeof Entity, T extends InstanceType<C>>(this: C, root: Root, settings: T[\"_settings\"], template?: Template<T>): T {\n\t\tconst x = (new this(root, settings, true)) as T;\n\t\tx._template = template;\n\t\tx._afterNew();\n\t\treturn x;\n\t}\n\n\tstatic _new<C extends typeof Entity, T extends InstanceType<C>>(this: C, root: Root, settings: T[\"_settings\"], templates: Array<Template<T>> = []): T {\n\t\tconst x = (new this(root, settings, true, templates)) as T;\n\t\tx._afterNew();\n\t\treturn x;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._checkDirty();\n\n\t\tlet shouldApply = false;\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\tshouldApply = true;\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\tshouldApply = true;\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t});\n\n\t\tif (shouldApply) {\n\t\t\tthis._applyTemplates(false);\n\t\t}\n\n\t\tthis.states.create(\"default\", {});\n\n\t\tthis._setDefaults();\n\t}\n\n\t// This is the same as _afterNew, except it also applies the themes.\n\t// This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\n\tprotected _afterNewApplyThemes() {\n\t\tthis._checkDirty();\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t});\n\n\t\tthis.states.create(\"default\", {});\n\n\t\tthis._setDefaults();\n\n\t\tthis._applyThemes();\n\t}\n\n\tprotected _createEvents(): EventDispatcher<Events<this, this[\"_events\"]>> {\n\t\treturn new EventDispatcher();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get classNames(): Array<string> {\n\t\treturn (this.constructor as any).classNames;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get className(): string {\n\t\treturn (this.constructor as any).className;\n\t}\n\n\tprotected _setDefaults(){\n\n\t}\n\n\tpublic _setDefaultFn<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, f: () => Value): NonNullable<this[\"_settings\"][Key]> | Value {\n\t\tconst value = this.get(key);\n\n\t\tif (value) {\n\t\t\treturn value as any;\n\n\t\t} else {\n\t\t\tconst value = f();\n\t\t\tthis.set(key, value);\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tpublic _setDefault<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!this.has(key)) {\n\t\t\tsuper.set(key, value);\n\t\t}\n\t}\n\n\tpublic _setRawDefault<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!this.has(key)) {\n\t\t\tsuper.setRaw(key, value);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\t$object.keys(this._dirty).forEach((key) => {\n\t\t\tthis._dirty[key] = false;\n\t\t});\n\n\t\t$object.keys(this._dirtyPrivate).forEach((key) => {\n\t\t\tthis._dirtyPrivate[key] = false;\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isDirty<Key extends keyof this[\"_settings\"]>(key: Key): boolean {\n\t\treturn !!this._dirty[key];\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isPrivateDirty<Key extends keyof this[\"_privateSettings\"]>(key: Key): boolean {\n\t\treturn !!this._dirtyPrivate[key];\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tthis._dirty[key] = true;\n\t\tsuper._markDirtyKey(key);\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tthis._dirtyPrivate[key] = true;\n\t\tsuper._markDirtyKey(key);\n\t}\n\n\t/**\n\t * Checks if element is of certain class (or inherits one).\n\t *\n\t * @param   type  Class name to check\n\t * @return {boolean} Is of class?\n\t */\n\tpublic isType<A>(type: string): this is A {\n\t\treturn this.classNames.indexOf(type) !== -1;\n\t}\n\n\tprotected _pushPropertyDisposer<Key extends keyof this[\"_settings\"], D extends IDisposer>(key: Key, disposer: D): D {\n\t\tlet disposers = this._disposerProperties[key];\n\n\t\tif (disposers === undefined) {\n\t\t\tdisposers = this._disposerProperties[key] = [];\n\t\t}\n\n\t\tdisposers.push(disposer);\n\n\t\treturn disposer;\n\t}\n\n\tprotected _disposeProperty<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tconst disposers = this._disposerProperties[key];\n\n\t\tif (disposers !== undefined) {\n\t\t\t$array.each(disposers!, (disposer) => {\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\n\t\t\tdelete this._disposerProperties[key];\n\t\t}\n\t}\n\n\t/**\n\t * @todo needs description\n\t * @param  value  Template\n\t */\n\tpublic set template(value: Template<this> | undefined) {\n\t\tconst template = this._template;\n\n\t\tif (template !== value) {\n\t\t\tthis._template = value;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._removeObjectTemplate(this);\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tvalue._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\tpublic get template(): Template<this> | undefined {\n\t\treturn this._template;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tthis._root._addDirtyEntity(this);\n\t}\n\n\tpublic _startAnimation(): void {\n\t\tthis._root._addAnimation(this);\n\t}\n\n\tprotected _animationTime(): number | null {\n\t\treturn this._root.animationTime;\n\t}\n\n\tpublic _applyState(_name: string): void { }\n\tpublic _applyStateAnimated(_name: string, _duration?: number): void { }\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return            Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this.adapters.fold(key, (<any>this._settings)[key]);\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isUserSetting<Key extends keyof this[\"_settings\"]>(key: Key): boolean {\n\t\treturn this._userProperties[key] || false;\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key`, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._userProperties[key] = true;\n\t\treturn super.set(key, value);\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value) {\n\t\tthis._userProperties[key] = true;\n\t\tsuper.setRaw(key, value);\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic _setSoft<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tif(!this._userProperties[key]){\n\t\t\treturn super.set(key, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._userProperties[key];\n\t\tthis._removeTemplateProperty(key);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._userPrivateProperties[key] = true;\n\t\treturn super.setPrivate(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value) {\n\t\tthis._userPrivateProperties[key] = true;\n\t\tsuper.setPrivateRaw(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tdelete this._userPrivateProperties[key];\n\t\tthis._removeTemplatePrivateProperty(key);\n\t}\n\n\tpublic _setTemplateProperty<Key extends keyof this[\"_settings\"]>(template: Template<this>, key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!this._userProperties[key]) {\n\t\t\tconst match = this._findTemplateByKey(key);\n\n\t\t\tif (template === match) {\n\t\t\t\tsuper.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _setTemplatePrivateProperty<Key extends keyof this[\"_privateSettings\"]>(template: Template<this>, key: Key, value: this[\"_privateSettings\"][Key]) {\n\t\tif (!this._userPrivateProperties[key]) {\n\t\t\tconst match = this._findTemplateByPrivateKey(key);\n\n\t\t\tif (template === match) {\n\t\t\t\tsuper.setPrivate(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _removeTemplateProperty<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tif (!this._userProperties[key]) {\n\t\t\tconst match = this._findTemplateByKey(key);\n\n\t\t\tif (match) {\n\t\t\t\t// TODO don't stop the animation if the property didn't change\n\t\t\t\tsuper.set(key, match._settings[key]!);\n\n\t\t\t} else {\n\t\t\t\tsuper.remove(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _removeTemplatePrivateProperty<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tif (!this._userPrivateProperties[key]) {\n\t\t\tconst match = this._findTemplateByPrivateKey(key);\n\n\t\t\tif (match) {\n\t\t\t\t// TODO don't stop the animation if the property didn't change\n\t\t\t\tsuper.setPrivate(key, match._privateSettings[key]);\n\n\t\t\t} else {\n\t\t\t\tsuper.removePrivate(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _walkParents(f: (parent: Entity) => void): void {\n\t\tf(this._root._rootContainer);\n\t\tf(this);\n\t}\n\n\t// TODO faster version of this method which is specialized to just 1 key\n\tpublic _applyStateByKey(name: string): void {\n\t\tconst other = this.states.create(name, {});\n\t\tconst seen: Dirty<this[\"_settings\"]> = {};\n\n\t\tthis._eachTemplate((template) => {\n\t\t\tconst state = template.states.lookup(name);\n\n\t\t\tif (state) {\n\t\t\t\tstate._apply(other, seen);\n\t\t\t}\n\t\t});\n\n\t\t$object.each(other._settings, (key) => {\n\t\t\tif (!seen[key] && !other._userSettings[key]) {\n\t\t\t\tother.remove(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _applyTemplate(template: Template<this>, state: ApplyState<this>): void {\n\t\tthis._templateDisposers.push(template._apply(this, state));\n\n\t\t$object.each(template._settings, (key, value) => {\n\t\t\tif (!state.settings[key] && !this._userProperties[key]) {\n\t\t\t\tstate.settings[key] = true;\n\t\t\t\tsuper.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t$object.each(template._privateSettings, (key, value) => {\n\t\t\tif (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\n\t\t\t\tstate.privateSettings[key] = true;\n\t\t\t\tsuper.setPrivate(key, value);\n\t\t\t}\n\t\t});\n\n\t\tif (this._runSetup && template.setup) {\n\t\t\tthis._runSetup = false;\n\t\t\ttemplate.setup(this);\n\t\t}\n\t}\n\n\t/**\n\t * Calls the closure with each template and returns the first template which is true\n\t */\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\tif (this._template) {\n\t\t\tif (f(this._template)) {\n\t\t\t\treturn this._template;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _eachTemplate(f: (template: Template<this>) => void): void {\n\t\tthis._findStaticTemplate((template) => {\n\t\t\tf(template);\n\t\t\treturn false;\n\t\t});\n\n\t\t// _internalTemplates is sorted with most specific to the right\n\t\t$array.eachReverse(this._internalTemplates, f);\n\n\t\t// _templates is sorted with most specific to the left\n\t\t$array.each(this._templates, f);\n\t}\n\n\tpublic _applyTemplates(remove: boolean = true): void {\n\t\tif (remove) {\n\t\t\tthis._disposeTemplates();\n\t\t}\n\n\t\tconst state: ApplyState<this> = {\n\t\t\tsettings: {},\n\t\t\tprivateSettings: {},\n\t\t\tstates: {},\n\t\t};\n\n\t\tthis._eachTemplate((template) => {\n\t\t\tthis._applyTemplate(template, state);\n\t\t});\n\n\t\tif (remove) {\n\t\t\t$object.each(this._settings, (key) => {\n\t\t\t\tif (!this._userProperties[key] && !state.settings[key]) {\n\t\t\t\t\tsuper.remove(key);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$object.each(this._privateSettings, (key) => {\n\t\t\t\tif (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\n\t\t\t\t\tsuper.removePrivate(key);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _findTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\tconst value = this._findStaticTemplate(f);\n\n\t\tif (value === undefined) {\n\t\t\t// _internalTemplates is sorted with most specific to the right\n\t\t\tconst value = $array.findReverse(this._internalTemplates, f);\n\n\t\t\tif (value === undefined) {\n\t\t\t\t// _templates is sorted with most specific to the left\n\t\t\t\treturn $array.find(this._templates, f);\n\n\t\t\t} else {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tprotected _findTemplateByKey<Key extends keyof this[\"_settings\"]>(key: Key): Template<this> | undefined {\n\t\treturn this._findTemplate((template) => {\n\t\t\treturn key in template._settings;\n\t\t});\n\t}\n\n\tprotected _findTemplateByPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key): Template<this> | undefined {\n\t\treturn this._findTemplate((template) => {\n\t\t\treturn key in template._privateSettings;\n\t\t});\n\t}\n\n\tprotected _disposeTemplates() {\n\t\t$array.each(this._templateDisposers, (disposer) => {\n\t\t\tdisposer.dispose();\n\t\t});\n\n\t\tthis._templateDisposers.length = 0;\n\t}\n\n\tprotected _removeTemplates() {\n\t\t$array.each(this._templates, (template) => {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t});\n\n\t\tthis._templates.length = 0;\n\t}\n\n\tpublic _applyThemes(force: boolean = false): boolean {\n\t\tlet isConnected = false;\n\n\t\tconst defaults: Array<Array<Theme>> = [];\n\n\t\tlet themes: Array<Array<Theme>> = [];\n\n\t\tconst themeTags: Set<string> = new Set();\n\n\t\tconst tags = this.get(\"themeTagsSelf\");\n\n\t\tif (tags) {\n\t\t\t$array.each(tags, (tag) => {\n\t\t\t\tthemeTags.add(tag);\n\t\t\t});\n\t\t}\n\n\t\tthis._walkParents((entity) => {\n\t\t\tif (entity === this._root._rootContainer) {\n\t\t\t\tisConnected = true;\n\t\t\t}\n\n\t\t\tif (entity._defaultThemes.length > 0) {\n\t\t\t\tdefaults.push(entity._defaultThemes);\n\t\t\t}\n\n\t\t\tconst theme = entity.get(\"themes\");\n\n\t\t\tif (theme) {\n\t\t\t\tthemes.push(theme);\n\t\t\t}\n\n\t\t\tconst tags = entity.get(\"themeTags\");\n\n\t\t\tif (tags) {\n\t\t\t\t$array.each(tags, (tag) => {\n\t\t\t\t\tthemeTags.add(tag);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthemes = defaults.concat(themes);\n\n\t\tthis._removeTemplates();\n\n\t\tif (isConnected || force) {\n\t\t\t$array.eachReverse(this.classNames, (name) => {\n\t\t\t\tconst allRules: Array<IRule<this>> = [];\n\n\t\t\t\t$array.each(themes, (themes) => {\n\t\t\t\t\t$array.each(themes, (theme) => {\n\t\t\t\t\t\tconst rules = theme._lookupRules<this>(name);\n\n\t\t\t\t\t\tif (rules) {\n\t\t\t\t\t\t\t$array.eachReverse(rules, (rule) => {\n\t\t\t\t\t\t\t\tconst matches = rule.tags.every((tag) => {\n\t\t\t\t\t\t\t\t\treturn themeTags.has(tag);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\t\t\tconst result = $array.getFirstSortedIndex(allRules, (x) => {\n\t\t\t\t\t\t\t\t\t\tconst order = $order.compare(rule.tags.length, x.tags.length);\n\n\t\t\t\t\t\t\t\t\t\tif (order === 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn $order.compareArray(rule.tags, x.tags, $order.compare);\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn order;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tallRules.splice(result.index, 0, rule);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$array.each(allRules, (rule) => {\n\t\t\t\t\tthis._templates.push(rule.template);\n\t\t\t\t\trule.template._setObjectTemplate(this);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tthis._applyTemplates();\n\n\t\tif (isConnected || force) {\n\t\t\t// This causes it to only run the setup function the first time that the themes are applied\n\t\t\tthis._runSetup = false;\n\t\t}\n\n\t\treturn isConnected || force;\n\t}\n\n\tpublic _changed(): void { }\n\n\tpublic _beforeChanged(): void {\n\n\t\tif (this.isDirty(\"id\")) {\n\t\t\tconst id = this.get(\"id\")!;\n\t\t\tif (id) {\n\t\t\t\tthis._registerId(id);\n\t\t\t}\n\n\t\t\tconst prevId = this._prevSettings.id;\n\t\t\tif(prevId) {\n\t\t\t\tdelete this._root.entitiesById[prevId];\n\t\t\t\tdelete registry.entitiesById[prevId];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _registerId(id: string): void {\n\t\tif (this._root.entitiesById[id] && this._root.entitiesById[id] !== this) {\n\t\t\tthrow new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\n\t\t}\n\n\t\tthis._root.entitiesById[id] = this;\n\t\tregistry.entitiesById[id] = this;\n\t}\n\n\tpublic _afterChanged(): void { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addDisposer<T extends IDisposer>(disposer: T): T {\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t});\n\n\t\tthis._removeTemplates();\n\t\tthis._disposeTemplates();\n\n\t\tthis.events.dispose();\n\n\t\tthis._disposers.forEach((x) => {\n\t\t\tx.dispose();\n\t\t});\n\n\t\t$object.each(this._disposerProperties, (_, disposers) => {\n\t\t\t$array.each(disposers, (disposer) => {\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t});\n\n\t\tconst id = this.get(\"id\")!;\n\t\tif (id) {\n\t\t\tdelete this._root.entitiesById[id];\n\t\t\tdelete registry.entitiesById[id];\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns a \"disposable\" timeout.\n\t *\n\t * @param   fn     Callback\n\t * @param   delay  Delay in milliseconds\n\t * @return         Timeout disposer\n\t */\n\tpublic setTimeout(fn: () => void, delay: number): IDisposer {\n\t\tconst id = setTimeout(() => {\n\t\t\tthis.removeDispose(disposer);\n\t\t\tfn();\n\t\t}, delay);\n\n\t\tconst disposer = new Disposer(() => {\n\t\t\tclearTimeout(id);\n\t\t});\n\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removeDispose(target: IDisposer): void {\n\t\tif (!this.isDisposed()) {\n\t\t\tlet index = $array.indexOf(this._disposers, target);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._disposers.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\ttarget.dispose();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hasTag(tag: string): boolean {\n\t\treturn $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addTag(tag: string): void {\n\t\tif (!this.hasTag(tag)) {\n\t\t\tconst tags = (<any>this).get(\"themeTags\", []);\n\t\t\ttags.push(tag);\n\t\t\tthis.set(\"themeTags\", tags);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removeTag(tag: string): void {\n\t\tif (this.hasTag(tag)) {\n\t\t\tconst tags = (<any>this).get(\"themeTags\", []);\n\t\t\t$array.remove(tags, tag);\n\t\t\tthis.set(\"themeTags\", tags);\n\t\t}\n\t}\n\n\tprotected _t(text: any, locale?: ILocale, ...rest: Array<string>){\n\t\treturn this._root.language.translate(text, locale, ...rest);\n\t}\n\n\t/**\n\t * An instance of [[Root]] object.\n\t *\n\t * @readonly\n\t * @since 5.0.6\n\t * @return Root object\n\t */\n\tpublic get root(): Root {\n\t\treturn this._root;\n\t}\n\n}\n", "import type { IDisplayObject, IRendererEvents, IRendererEvent, IPointerEvent, IMargin } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Container } from \"./Container\";\nimport type { Role, AriaLive } from \"../util/Accessibility\";\nimport type { NumberFormatter } from \"../util/NumberFormatter\";\nimport type { DateFormatter } from \"../util/DateFormatter\";\nimport type { DurationFormatter } from \"../util/DurationFormatter\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { Graphics } from \"./Graphics\";\nimport type { IPoint } from \"../util/IPoint\";\nimport type { ListTemplate } from \"../util/List\";\n\nimport type { Tooltip } from \"./Tooltip\";\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../util/Entity\";\nimport { Template } from \"../util/Template\";\nimport { Percent } from \"../util/Percent\";\nimport { EventDispatcher, Events, EventListener } from \"../util/EventDispatcher\";\nimport { IDisposer, MultiDisposer, CounterDisposer } from \"../util/Disposer\";\nimport { waitForAnimations } from \"../util/Animation\";\n\nimport * as $utils from \"../util/Utils\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $object from \"../util/Object\";\nimport * as $math from \"../util/Math\";\n//import { populateString } from \"../util/PopulateString\";\n\n\n/**\n * An [[EventDispatcher]] for [[Sprite]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n */\nclass SpriteEventDispatcher<Target, E extends Events<Target, ISpriteEvents>> extends EventDispatcher<E> {\n\tprotected static RENDERER_EVENTS: { [K in keyof IRendererEvents]?: <E extends Events<Sprite, ISpriteEvents>>(this: SpriteEventDispatcher<Sprite, E>, event: IRendererEvents[K]) => void } = {\n\t\t\"click\": function(event) {\n\t\t\tif (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\n\t\t\t\tthis.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"rightclick\": function(event) {\n\t\t\tif (this.isEnabled(\"rightclick\")) {\n\t\t\t\tthis.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"middleclick\": function(event) {\n\t\t\tif (this.isEnabled(\"middleclick\")) {\n\t\t\t\tthis.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"dblclick\": function(event) {\n\t\t\tthis.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n\t\t},\n\n\t\t\"pointerover\": function(event) {\n\n\t\t\tconst sprite = this._sprite;\n\t\t\tlet dispatch = true;\n\n\t\t\tif (sprite.getPrivate(\"trustBounds\")) {\n\t\t\t\tsprite._getBounds()\n\t\t\t\tconst bounds = sprite.globalBounds();\n\n\t\t\t\tif (sprite.isType<Graphics>(\"Graphics\")) {\n\t\t\t\t\tconst strokeWidth = sprite.get(\"strokeWidth\", 1) / 2;\n\t\t\t\t\tif (strokeWidth >= 1) {\n\t\t\t\t\t\tbounds.left -= strokeWidth;\n\t\t\t\t\t\tbounds.right += strokeWidth;\n\t\t\t\t\t\tbounds.top -= strokeWidth;\n\t\t\t\t\t\tbounds.bottom += strokeWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!$math.inBounds(event.point, bounds)) {\n\t\t\t\t\tdispatch = false;\n\t\t\t\t\tsprite._root._renderer.removeHovering(sprite._display);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dispatch && this.isEnabled(\"pointerover\")) {\n\t\t\t\tthis.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerout\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerout\")) {\n\t\t\t\tthis.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerdown\": function(event) {\n\t\t\tthis.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n\t\t},\n\n\t\t\"pointerup\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerup\")) {\n\t\t\t\tthis.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointerup\": function(event) {\n\t\t\tif (this.isEnabled(\"globalpointerup\")) {\n\t\t\t\tthis.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointermove\": function(event) {\n\t\t\tif (this.isEnabled(\"globalpointermove\")) {\n\t\t\t\tthis.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"wheel\": function(event) {\n\t\t\tthis.dispatchParents(\"wheel\", {\n\t\t\t\ttype: \"wheel\",\n\t\t\t\ttarget: this._sprite,\n\t\t\t\toriginalEvent: event.event,\n\t\t\t\tpoint: event.point,\n\t\t\t});\n\t\t},\n\t};\n\n\tprotected _sprite: Sprite;\n\n\tprotected _rendererDisposers: { [K in keyof IRendererEvents]?: CounterDisposer } = {};\n\n\tprotected _dispatchParents: boolean = true;\n\n\tconstructor(sprite: Sprite) {\n\t\tsuper();\n\t\tthis._sprite = sprite;\n\t}\n\n\tprotected _makePointerEvent<K extends keyof E>(key: K, event: IRendererEvent<IPointerEvent>): ISpritePointerEvent & { type: K } {\n\t\treturn {\n\t\t\ttype: key,\n\t\t\toriginalEvent: event.event,\n\t\t\tpoint: event.point,\n\t\t\tsimulated: event.simulated,\n\t\t\tnative: event.native,\n\t\t\ttarget: this._sprite\n\t\t};\n\t}\n\n\tprotected _onRenderer<Key extends keyof IRendererEvents>(key: Key, dispatch: (this: this, event: IRendererEvents[Key]) => void): IDisposer {\n\t\t// TODO: is this OK? it'd be good not to require to set this on each individual element\n\t\tthis._sprite.set(\"interactive\", true);\n\t\tthis._sprite._display.interactive = true;\n\n\t\tlet events = this._rendererDisposers[key];\n\n\t\tif (events === undefined) {\n\t\t\tconst disposer = this._sprite._display.on(key, (e) => {\n\t\t\t\tdispatch.call(this, e);\n\t\t\t});\n\n\t\t\tevents = this._rendererDisposers[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._rendererDisposers[key];\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn events.increment();\n\t}\n\n\tprotected _on<C, Key extends keyof E>(once: boolean, type: Key | null, callback: any, context: C, shouldClone: boolean, dispatch: (type: Key, event: E[Key]) => void): EventListener {\n\t\tconst info = super._on(once, type, callback, context, shouldClone, dispatch);\n\n\t\tconst rendererEvent = (SpriteEventDispatcher.RENDERER_EVENTS as any)[type];\n\t\tif (rendererEvent !== undefined) {\n\t\t\tinfo.disposer = new MultiDisposer([\n\t\t\t\tinfo.disposer,\n\t\t\t\tthis._onRenderer(type as any, rendererEvent),\n\t\t\t]);\n\t\t}\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Will stop any bubbling up of the event to element's parents.\n\t *\n\t * Should be called in an event handler, e.g.:\n\t *\n\t * ```TypeScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t * ```JavaScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t */\n\tpublic stopParentDispatch() {\n\t\tthis._dispatchParents = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dispatchParents<Key extends keyof E>(type: Key, event: E[Key]): void {\n\t\tconst old = this._dispatchParents;\n\n\t\tthis._dispatchParents = true;\n\n\t\ttry {\n\t\t\tthis.dispatch(type, event);\n\n\t\t\tif (this._dispatchParents && this._sprite.parent) {\n\t\t\t\tthis._sprite.parent.events.dispatchParents(type as any, event);\n\t\t\t}\n\n\t\t} finally {\n\t\t\tthis._dispatchParents = old;\n\t\t}\n\t}\n}\n\n\nexport interface ISpriteSettings extends IEntitySettings {\n\n\t/**\n\t * X position relative to parent.\n\t */\n\tx?: number | Percent | null;\n\n\t/**\n\t * Y position relative to parent.\n\t */\n\ty?: number | Percent | null;\n\n\t/**\n\t * Element's absolute width in pixels (numeric value) or relative width to\n\t * parent ([[Percent]]);\n\t */\n\twidth?: number | Percent | null;\n\n\t/**\n\t * Element's absolute height in pixels (numeric value) or relative height to\n\t * parent ([[Percent]]);\n\t */\n\theight?: number | Percent | null;\n\n\t/**\n\t * Maximum allowed width in pixels.\n\t */\n\tmaxWidth?: number | null;\n\n\t/**\n\t * Maximum allowed height in pixels.\n\t */\n\tmaxHeight?: number | null;\n\n\t/**\n\t * Minimum allowed width in pixels.\n\t */\n\tminWidth?: number | null;\n\n\t/**\n\t * Minimum allowed height in pixels.\n\t */\n\tminHeight?: number | null;\n\n\t/**\n\t * Opacity. 0 - fully transparent; 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Rotation in degrees.\n\t */\n\trotation?: number;\n\n\t/**\n\t * Scale.\n\t *\n\t * Setting to a value less than 1 will shrink object.\n\t */\n\tscale?: number;\n\n\t/**\n\t * X coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterX?: number | Percent;\n\n\t/**\n\t * Y coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterY?: number | Percent;\n\n\t/**\n\t * Left margin in pixels.\n\t */\n\tmarginLeft?: number;\n\n\t/**\n\t * Right margin in pixels.\n\t */\n\tmarginRight?: number;\n\n\t/**\n\t * Top margin in pixels.\n\t */\n\tmarginTop?: number;\n\n\t/**\n\t * Bottom margin in pixels.\n\t */\n\tmarginBottom?: number;\n\n\t/**\n\t * Is element visible?\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Positioning of the element.\n\t *\n\t * `\"absolute\"` means element will not participate in parent layout scheme,\n\t * and will be positioned solely accoridng its `x` and `y` settings.\n\t */\n\tposition?: \"absolute\" | \"relative\";\n\n\t/**\n\t * Horizontal shift in pixels. Can be negative to shift leftward.\n\t */\n\tdx?: number;\n\n\t/**\n\t * Vertical shift in pixels. Can be negative to shift upward.\n\t */\n\tdy?: number;\n\n\t/**\n\t * Should this element accept user interaction events?\n\t */\n\tinteractive?: boolean;\n\n\t/**\n\t * Text to show in a tooltip when hovered.\n\t */\n\ttooltipText?: string;\n\n\t/**\n\t * HTML content to show in a tooltip when hovered.\n\t *\n\t * @since 5.2.11\n\t */\n\ttooltipHTML?: string;\n\n\t/**\n\t * Tooltip pointer X coordinate relative to the element itself.\n\t */\n\ttooltipX?: number | Percent;\n\n\t/**\n\t * Tooltip pointer Y coordinate relative to the element itself.\n\t */\n\ttooltipY?: number | Percent;\n\n\t/**\n\t * [[Tooltip]] instance.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * Tooltip position.\n\t */\n\ttooltipPosition?: \"fixed\" | \"pointer\";\n\n\t/**\n\t * If set to `false` element will not be measured and cannot participate in\n\t * layout schemes.\n\t */\n\tisMeasured?: boolean;\n\n\t/**\n\t * Allows binding element's settings to data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/template-fields/} for more info\n\t */\n\ttemplateField?: string;\n\n\t/**\n\t * If set to `true`, user will be able to drag this element. It will also\n\t * disable default drag events over the area of this element.\n\t */\n\tdraggable?: boolean;\n\n\t/**\n\t * If set to `true`, mouse wheel events will be triggered over the element. It\n\t * will also disable page scrolling using mouse wheel when pointer is over\n\t * the element.\n\t */\n\twheelable?: boolean;\n\n\t/**\n\t * An instance of [[NumberFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tnumberFormatter?: NumberFormatter | undefined;\n\n\t/**\n\t * An instance of [[DateFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdateFormatter?: DateFormatter | undefined;\n\n\t/**\n\t * An instance of [[DurationFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdurationFormatter?: DurationFormatter | undefined;\n\n\t/**\n\t * If set, element will toggle specified boolean setting between `true` and\n\t * `false` when clicked/touched.\n\t */\n\ttoggleKey?: \"disabled\" | \"active\" | \"none\" | undefined;\n\n\t/**\n\t * Indicates if element is currently active.\n\t */\n\tactive?: boolean;\n\n\t/**\n\t * Indicates if element is disabled.\n\t */\n\tdisabled?: boolean;\n\n\t/**\n\t * An SVG filter to apply to the element.\n\t *\n\t * IMPORTANT: SVG filters are not supported in some browsers, e.g. Safari.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/#SVG_filters} for more info\n\t * @ignore todo: figure out if we still need this\n\t */\n\tfilter?: string;\n\n\t/**\n\t * A named mouse cursor style to show when hovering this element.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor} for more info\n\t */\n\tcursorOverStyle?: string;\n\n\t/**\n\t * If set to `false` this element will not appear in exported snapshots of\n\t * the chart.\n\t */\n\texportable?: boolean;\n\n\t/**\n\t * Numeric layer to put element in.\n\t *\n\t * Elements with higher number will appear in front of the ones with lower\n\t * numer.\n\t *\n\t * If not set, will inherit layer from its ascendants.\n\t */\n\tlayer?: number;\n\n\t/**\n\t * Margins for the layer.\n\t *\n\t * Can be used to make the layer larger/or smaller than default chart size.\n\t *\n\t * @since @5.2.39\n\t */\n\tlayerMargin?: IMargin;\n\n\t/**\n\t * If set to `true` the element will be hidden regardless of `visible` or\n\t * even if `show()` is called.\n\t */\n\tforceHidden?: boolean;\n\n\t/**\n\t * If set to `true` the element will be inactive - absolutely oblivious\n\t * to all interactions, even if there are related events set, or\n\t * the `interactive: true` is set.\n\t *\n\t * @since 5.0.21\n\t */\n\tforceInactive?: boolean;\n\n\t/**\n\t * Defines when tooltip is shown over the element.\n\t *\n\t * Available options:\n\t * * `\"hover\"` (default) - tooltip is shown when element is hovered by a pointer or touched. It is hidden as soon as element is not hovered anymore, or touch occurs outside it.\n\t * * `\"always\"` - a tooltip will always be shown over the element, without any interactions. Please note that if you need to show tooltips for multiple elements at the same time, you need to explicitly create a `Tooltip` instance and set element's `tooltip` setting with it.\n\t * * '\"click\"' - a tooltip will only appear when target element is clicked/tapped. Tooltip will hide when clicking anywhere else on the page.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Sticky_tooltips} for more info\n\t * @default \"hover\"\n\t * @since 5.0.16\n\t */\n\tshowTooltipOn?: \"hover\" | \"always\" | \"click\";\n\n\t/**\n\t * If set to `true`, an element will try to draw itself in such way, that it\n\t * looks crisp on screen, with minimal anti-aliasing.\n\t *\n\t * It will round x/y position so it is positioned fine \"on pixel\".\n\t *\n\t * It will also adjust `strokeWidth` based on device pixel ratio or zoom,\n\t * so the line might look thinner than expected.\n\t *\n\t * NOTE: this is might not universally work, especially when set on several\n\t * objects that are supposed to fit perfectly with each other.\n\t *\n\t * @default false\n\t * @since 5.3.0\n\t */\n\tcrisp?: boolean;\n\n\t/**\n\t * Apply blur filter.\n\t *\n\t * Ranges of values in pixels: `0` to `X`.\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tblur?: number;\n\n\t/**\n\t * Modifty visual brightness.\n\t *\n\t * Range of values: `0` to `1`.\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tbrightness?: number;\n\n\t/**\n\t * Modify contrast.\n\t *\n\t * Range of values: `0` to `1`.\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tcontrast?: number;\n\n\t/**\n\t * Modify saturation.\n\t *\n\t * Range of values in pixels: `0` to `X`.\n\t *\n\t * * `0` - grayscale\n\t * * `1` - no changes\n\t * * `>1` - more saturated\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tsaturate?: number;\n\n\t/**\n\t * Apply sepia filter.\n\t *\n\t * Range of values: `0` (no changes) to `1` (complete sepia).\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tsepia?: number;\n\n\t/**\n\t * Invert colors.\n\t *\n\t * Range of values: `0` (no changes) to `1` (completely inverted colors).\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\tinvert?: number;\n\n\t/**\n\t * Rotate HUE colors in degrees.\n\t *\n\t * Range of values: `0` to `360`.\n\t *\n\t * IMPORTANT: This setting is not supported in Safari browsers.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/filters/} for more info\n\t * @since 5.5.0\n\t */\n\thue?: number;\n\n\t\t/**\n\t * An internal order by which focusable elements will be selected within the\n\t * chart.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Focusing_elements} for more info\n\t */\n\ttabindexOrder?: number;\n\n\t/**\n\t * Simulate hover on an element when it gains focus, including changing hover\n\t * appearance and displaying a tooltip if application.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Focusing_elements} for more info\n\t */\n\thoverOnFocus?: boolean;\n\n\t/**\n\t * Can element be focused, i.e. selected using TAB key.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Focusing_elements} for more info\n\t */\n\tfocusable?: boolean;\n\n\t/**\n\t * An identifier by which to group common elements into focusable groups.\n\t *\n\t * If set, only the first element in he group will be focusable via TAB key.\n\t * When it is selected, the rest of the elements in the same group can be\n\t * selected using arrow keys.\n\t *\n\t * It allows users to TAB-through chart elements quickly without the need\n\t * to TAB into each and every element.\n\t *\n\t * It's up to implementer of the charts to provide meaningful `ariaLabel` to\n\t * the element, which advertises this capability and provides adequate\n\t * instructions.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Grouping_focusable_elements} for more info\n\t * @since 5.0.6\n\t */\n\tfocusableGroup?: string | number;\n\n\t/**\n\t * If set, the text will be read out (announced) by a screen reader when\n\t * focused element is \"clicked\" (by pressing ENTER or SPACE).\n\t * \n\t * @since 5.10.8\n\t */\n\tclickAnnounceText?: string;\n\n\t/**\n\t * Element's role.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Roles} for more info\n\t */\n\trole?: Role;\n\n\t/**\n\t * `aria-live` setting.\n\t */\n\tariaLive?: AriaLive;\n\n\t/**\n\t * `aria-checked` setting.\n\t *\n\t * This setting is ignored unless `role` is one of the following:\n\t * * `\"checkbox\"`\n\t * * `\"option\"`\n\t * * `\"radio\"`\n\t * * `\"menuitemcheckbox\"`\n\t * * `\"menuitemradio\"`\n\t * * `\"treeitem\"`\n\t */\n\tariaChecked?: boolean;\n\n\t/**\n\t * `aria-current` setting.\n\t * \n\t * @see {@link https://w3c.github.io/aria/#aria-current} for more info\n\t * @since 5.9.8\n\t */\n\tariaCurrent?: string;\n\n\t/**\n\t * `aria-selected` setting.\n\t * \n\t * @see {@link https://w3c.github.io/aria/#aria-selected} for more info\n\t * @since 5.9.8\n\t */\n\tariaSelected?: boolean;\n\n\t/**\n\t * `aria-hidden` setting.\n\t */\n\tariaHidden?: boolean;\n\n\t/**\n\t * Label for the element to use for screen readers.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/#Screen_reader} for more info\n\t */\n\tariaLabel?: string;\n\n\t/**\n\t * `aria-orientation` setting.\n\t */\n\tariaOrientation?: string;\n\n\t/**\n\t * `aria-valuenow` setting.\n\t */\n\tariaValueNow?: string;\n\n\t/**\n\t * `aria-valuemin` setting.\n\t */\n\tariaValueMin?: string;\n\n\t/**\n\t * `aria-valuemax` setting.\n\t */\n\tariaValueMax?: string;\n\n\t/**\n\t * `aria-valuetext` setting.\n\t */\n\tariaValueText?: string;\n\n\t/**\n\t * `aria-controls` setting.\n\t */\n\tariaControls?: string;\n\n\t//ariaDescription?: string;\n\t//readerControls?: string;\n\n}\n\nexport interface ISpritePrivate extends IEntityPrivate {\n\t/**\n\t * @ignore\n\t */\n\tcustomData?: any;\n\n\t/**\n\t * @ignore\n\t */\n\tx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\ty?: number;\n\n\t/**\n\t * @ignore\n\t */\n\twidth?: number;\n\n\t/**\n\t * @ignore\n\t */\n\theight?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Is element currently showing a tooltip?\n\t */\n\tshowingTooltip?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\ttouchHovering?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tfocusElement?: {\n\t\tdom: HTMLDivElement,\n\t\tdisposers: Array<IDisposer>,\n\t};\n\n\t/**\n\t * An element tooltip should inherit its colors from.\n\t */\n\ttooltipTarget?: Graphics;\n\n\t/**\n\t * @ignore\n\t */\n\tlist?: ListTemplate<Sprite>;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxWidth?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxHeight?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tminWidth?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tminHeight?: number | null;\n\n\t/**\n\t * If set to `false`, its tabindex will be set to -1, so it does not get\n\t * focused with TAB, regardless whether its public setting `focusable` is\n\t * set to `true`.\n\t *\n\t * @since 5.3.16\n\t */\n\tfocusable?: boolean;\n\n\t/**\n\t * If set to `true`, the sprite will check if a mouse pointer is within\n\t * its bounds before dispatching pointer events.\n\t *\n\t * This helps to solve ghost tooltips problem that sometimes appear while\n\t * moving the pointer over interactive objects.\n\t *\n\t * This is set to `true` by default on `Rectangle` and `Circle`.\n\t *\n\t * @since 5.5.0\n\t */\n\ttrustBounds?: boolean;\n\n}\n\n/**\n * An interface defining event objects that originate from pinter interactions.\n */\nexport interface ISpritePointerEvent {\n\n\t/**\n\t * Original event object that caused the interaction, e.g. [[MouseEvent]].\n\t */\n\toriginalEvent: IPointerEvent;\n\n\t/**\n\t * A point where event originated.\n\t */\n\tpoint: IPoint;\n\n\t/**\n\t * Is it a simulated event, e.g. if the event was generated by code rather\n\t * then actual user interaction.\n\t */\n\tsimulated: boolean;\n\n\t/**\n\t * Whether event originated in chart's container or its children.\n\t */\n\tnative?: boolean;\n\n\t/**\n\t * The element on which the event occurred.\n\t */\n\ttarget: Sprite;\n\n}\n\nexport interface ISpriteEvents extends IEntityEvents {\n\n\t/**\n\t * Invoked when element's data item changes.\n\t */\n\tdataitemchanged: {\n\t\toldDataItem: DataItem<IComponentDataItem> | undefined,\n\t\tnewDataItem: DataItem<IComponentDataItem> | undefined\n\t};\n\n\t/**\n\t * Invoked when element's position (X/Y) changes.\n\t */\n\tpositionchanged: {};\n\n\t/**\n\t * Invoked when element's bounds change due to any manipulation to it.\n\t */\n\tboundschanged: {};\n\n\t/**\n\t * Invoked when element dragging starts.\n\t */\n\tdragstart: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element dragging stops.\n\t */\n\tdragstop: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element ois being dragged.\n\t */\n\tdragged: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked or tapped.\n\t */\n\tclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked width the right mouse button.\n\t */\n\trightclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked with the middle mouse button.\n\t */\n\tmiddleclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is doubleclicked or tapped twice quickly.\n\t */\n\tdblclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves over the element.\n\t */\n\tpointerover: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves outside the element.\n\t */\n\tpointerout: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is pressed or touch starts over the element.\n\t */\n\tpointerdown: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops over the element.\n\t */\n\tpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops in the window, even\n\t * outside of the element or even chart area.\n\t */\n\tglobalpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer is moving anywhere in the window, even outside of the\n\t * element or even chart area.\n\t */\n\tglobalpointermove: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when mouse wheel is spinned while pointer is over the element.\n\t */\n\twheel: {\n\t\toriginalEvent: WheelEvent;\n\t\tpoint: IPoint;\n\t};\n\n\t/**\n\t * Invoked when element gains focus.\n\t */\n\tfocus: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n\t/**\n\t * Invoked when element loses focus.\n\t */\n\tblur: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n}\n\n/**\n * A base class for all visual elements.\n *\n * @important\n */\nexport abstract class Sprite extends Entity {\n\tdeclare public _settings: ISpriteSettings;\n\tdeclare public _privateSettings: ISpritePrivate;\n\tdeclare public _events: ISpriteEvents;\n\n\tdeclare public events: SpriteEventDispatcher<this, Events<this, this[\"_events\"]>>;\n\n\tpublic abstract _display: IDisplayObject;\n\n\tpublic _adjustedLocalBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tpublic _localBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tpublic static className: string = \"Sprite\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Sprite.className]);\n\n\tpublic _parent: Container | undefined;\n\tprotected _dataItem: DataItem<IComponentDataItem> | undefined;\n\n\tprotected _templateField: Template<this> | undefined;\n\n\tprotected _sizeDirty: boolean = false;\n\n\t// Will be true only when dragging\n\tpublic _isDragging: boolean = false;\n\n\t// The event when the dragging starts\n\tprotected _dragEvent: ISpritePointerEvent | undefined;\n\n\t// The position when dragging starts\n\tprotected _dragPoint: IPoint | undefined;\n\n\tprotected _isHidden: boolean = false;\n\n\tprotected _isShowing: boolean = false;\n\n\tprotected _isHiding: boolean = false;\n\n\tprotected _isDown: boolean = false;\n\tpublic _downPoint: IPoint | undefined;\n\n\tpublic _downPoints: { [index: number]: IPoint } = {};\n\n\tpublic _toggleDp: IDisposer | undefined;\n\n\tprotected _dragDp: MultiDisposer | undefined;\n\n\tprotected _tooltipDp: MultiDisposer | undefined;\n\n\tprotected _hoverDp: MultiDisposer | undefined;\n\n\tprotected _focusDp: MultiDisposer | undefined;\n\n\tprotected _tooltipMoveDp: IDisposer | undefined;\n\n\tprotected _tooltipPointerDp: MultiDisposer | undefined;\n\n\tprotected _statesHandled: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis.setPrivateRaw(\"visible\", true);\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * Marks some setting as dirty. Could be used to trigger adapter.\n\t * @param key \n\t */\n\tpublic markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tthis._markDirtyKey(key);\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tsuper._markDirtyKey(key);\n\t\tif (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentagePositionChildren();\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tsuper._markDirtyPrivateKey(key);\n\t\tif (key == \"x\" || key == \"y\") {\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tprotected _removeTemplateField(): void {\n\t\tif (this._templateField) {\n\t\t\tthis._templateField._removeObjectTemplate(this);\n\t\t}\n\t}\n\n\tprotected _createEvents(): SpriteEventDispatcher<this, Events<this, this[\"_events\"]>> {\n\t\treturn new SpriteEventDispatcher(this);\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tlet template;\n\n\t\tconst field = this.get(\"templateField\");\n\n\t\tif (field) {\n\t\t\tconst dataItem = this.dataItem;\n\t\t\tif (dataItem) {\n\t\t\t\tconst context = dataItem.dataContext;\n\t\t\t\tif (context) {\n\t\t\t\t\ttemplate = (context as any)[field];\n\n\t\t\t\t\tif (!(template instanceof Template) && template) {\n\t\t\t\t\t\ttemplate = Template.new(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._templateField !== template) {\n\t\t\tthis._removeTemplateField();\n\n\t\t\tthis._templateField = template;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\t// TODO change this to run before the element is added to the parent, so that way\n\t//      it doesn't need to apply the themes twice\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst oldDataItem = this._dataItem\n\t\tthis._dataItem = dataItem;\n\t\tthis._processTemplateField();\n\t\tconst eventType = \"dataitemchanged\";\n\t\tif (dataItem != oldDataItem) {\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, {\n\t\t\t\t\ttype: eventType,\n\t\t\t\t\ttarget: this,\n\t\t\t\t\toldDataItem: oldDataItem,\n\t\t\t\t\tnewDataItem: dataItem\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A [[DataItem]] used for this element.\n\t *\n\t * NOTE: data item is being assigned automatically in most cases where it\n\t * matters. Use this accessor to set data item only if you know what you're\n\t * doing.\n\t *\n\t * @param  value  Data item\n\t */\n\tpublic set dataItem(value: DataItem<IComponentDataItem> | undefined) {\n\t\tthis._setDataItem(value);\n\t}\n\n\t/**\n\t * @return DataItem\n\t */\n\tpublic get dataItem(): DataItem<IComponentDataItem> | undefined {\n\t\tif (this._dataItem) {\n\t\t\treturn this._dataItem;\n\n\t\t} else {\n\t\t\tlet parent = this._parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tif (parent._dataItem) {\n\t\t\t\t\treturn parent._dataItem;\n\n\t\t\t\t} else {\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentageSizeChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentageSizeChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentagePositionChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentagePositionChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyPosition() {\n\t\tthis._root._addDirtyPosition(this);\n\t}\n\n\tprotected updatePivotPoint() {\n\t\tconst bounds = this._localBounds;\n\t\tif (bounds) {\n\t\t\tconst centerX = this.get(\"centerX\");\n\t\t\tif (centerX != null) {\n\t\t\t\tthis._display.pivot.x = bounds.left + $utils.relativeToValue(centerX!, bounds.right - bounds.left);\n\t\t\t}\n\n\t\t\tconst centerY = this.get(\"centerY\");\n\t\t\tif (centerY != null) {\n\t\t\t\tthis._display.pivot.y = bounds.top + $utils.relativeToValue(centerY!, bounds.bottom - bounds.top);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\t// handling states in beforeChanged, otherwise states is not applied without animated theme\n\t\tthis._handleStates();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst previous = this._prevSettings.tooltip;\n\t\t\tif (previous) {\n\t\t\t\tprevious.dispose();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\n\t\t\tthis._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\n\t\t\tthis.markDirtyLayer();\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipPosition\")) {\n\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\tif (tooltipMoveDp) {\n\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t}\n\n\t\t\tconst tooltipPointerDp = this._tooltipPointerDp;\n\t\t\tif (tooltipPointerDp) {\n\t\t\t\ttooltipPointerDp.dispose();\n\t\t\t\tthis._tooltipPointerDp = undefined;\n\t\t\t}\n\n\t\t\tif (this.get(\"tooltipPosition\") == \"pointer\") {\n\n\t\t\t\tif (this.isHover()) {\n\t\t\t\t\tthis._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\n\t\t\t\t\t\tthis.showTooltip(e.point);\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tthis._tooltipPointerDp = new MultiDisposer([\n\t\t\t\t\tthis.events.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\n\t\t\t\t\t\t\tthis.showTooltip(e.point);\n\t\t\t\t\t\t})\n\t\t\t\t\t}),\n\n\t\t\t\t\tthis.events.on(\"pointerout\", () => {\n\t\t\t\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\t\t\t\tif (tooltipMoveDp) {\n\t\t\t\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t})])\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleStates() {\n\t\tif (!this._statesHandled) {\n\t\t\tif (this.isDirty(\"active\")) {\n\t\t\t\tif (this.get(\"active\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"disabled\")) {\n\t\t\t\tif (this.get(\"disabled\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t\tthis._statesHandled = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst display = this._display;\n\t\tconst events = this.events;\n\n\t\tif (this.isDirty(\"draggable\")) {\n\t\t\tconst draggable = this.get(\"draggable\");\n\t\t\tif (draggable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\n\t\t\t\tthis._dragDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"pointerdown\", (ev) => {\n\t\t\t\t\t\tthis.dragStart(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointermove\", (ev) => {\n\t\t\t\t\t\tthis.dragMove(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tthis.dragStop(ev);\n\t\t\t\t\t})])\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._dragDp) {\n\t\t\t\t\tthis._dragDp.dispose();\n\t\t\t\t\tthis._dragDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdisplay.cancelTouch = draggable ? true : false;\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\n\t\t\tconst tooltipText = this.get(\"tooltipText\");\n\t\t\tconst tooltipHTML = this.get(\"tooltipHTML\");\n\t\t\tconst showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\n\t\t\tif (this._tooltipDp) {\n\t\t\t\tthis._tooltipDp.dispose();\n\t\t\t\tthis._tooltipDp = undefined;\n\t\t\t}\n\t\t\tif (tooltipText || tooltipHTML) {\n\t\t\t\tif (showTooltipOn == \"click\") {\n\t\t\t\t\tthis._tooltipDp = new MultiDisposer([\n\t\t\t\t\t\tevents.on(\"click\", () => {\n\t\t\t\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\t\t\t\tconst tooltip = this.getTooltip();\n\t\t\t\t\t\t\t\tif (tooltip && !tooltip.isHidden() && tooltip.get(\"tooltipTarget\") === this) {\n\t\t\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 10);\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t$utils.addEventListener(document, \"click\", (_ev: MouseEvent) => {\n\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t})\n\t\t\t\t\t]);\n\t\t\t\t\tthis._disposers.push(this._tooltipDp);\n\t\t\t\t}\n\t\t\t\telse if (showTooltipOn == \"always\") {\n\t\t\t\t\t// nothing\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._tooltipDp = new MultiDisposer([\n\t\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t})\n\t\t\t\t\t]);\n\t\t\t\t\tthis._disposers.push(this._tooltipDp);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tlet toggleKey = this.get(\"toggleKey\") as any;\n\t\t\tif (toggleKey && toggleKey != \"none\") {\n\t\t\t\tthis._toggleDp = events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tthis.set(toggleKey, !this.get(toggleKey));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._toggleDp) {\n\t\t\t\t\tthis._toggleDp.dispose();\n\t\t\t\t\tthis._toggleDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (this.isDirty(\"opacity\")) {\n\t\t\tdisplay.alpha = Math.max(0, this.get(\"opacity\", 1));\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"rotation\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.angle = this.get(\"rotation\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"scale\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.scale = this.get(\"scale\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.updatePivotPoint();\n\t\t}\n\n\t\tif (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n\t\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\t\tdisplay.visible = false;\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.visible = true;\n\t\t\t}\n\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentageSizeChildren();\n\n\t\t\tconst parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tif ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\n\t\t\t\t\tparent.markDirty();\n\t\t\t\t\tparent._prevWidth = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\") || this.isDirty(\"marginLeft\") || this.isDirty(\"marginTop\") || this.isDirty(\"marginRight\") || this.isDirty(\"marginBottom\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._updateSize();\n\t\t}\n\n\t\tif (this.isDirty(\"wheelable\")) {\n\t\t\tconst wheelable = this.get(\"wheelable\");\n\t\t\tif (wheelable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\t\t\t}\n\t\t\tdisplay.wheelable = wheelable ? true : false;\n\t\t}\n\n\t\t// Accessibility\n\t\tif (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"filter\")) {\n\t\t\t//this.markDirtyBounds();\n\t\t\tdisplay.filter = this.get(\"filter\");\n\t\t}\n\n\t\tlet filter = this.get(\"filter\", \"\");\n\n\t\tif (this.isDirty(\"blur\")) {\n\t\t\tconst blur = this.get(\"blur\", 0);\n\t\t\tif (blur != 0) {\n\t\t\t\tfilter += \" blur(\" + blur + \"px)\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"saturate\")) {\n\t\t\tconst saturate = this.get(\"saturate\", 1);\n\t\t\tif (saturate != 1) {\n\t\t\t\tfilter += \" saturate(\" + saturate + \")\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"brightness\")) {\n\t\t\tconst brightness = this.get(\"brightness\", 1);\n\t\t\tif (brightness != 1) {\n\t\t\t\tfilter += \" brightness(\" + brightness + \")\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"contrast\")) {\n\t\t\tconst contrast = this.get(\"contrast\", 1);\n\t\t\tif (contrast != 1) {\n\t\t\t\tfilter += \" contrast(\" + contrast + \")\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"sepia\")) {\n\t\t\tconst sepia = this.get(\"sepia\", 0);\n\t\t\tif (sepia != 0) {\n\t\t\t\tfilter += \" sepia(\" + sepia + \")\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"hue\")) {\n\t\t\tconst hue = this.get(\"hue\", 0);\n\t\t\tif (hue != 0) {\n\t\t\t\tfilter += \" hue-rotate(\" + hue + \"deg)\";\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"invert\")) {\n\t\t\tconst invert = this.get(\"invert\", 0);\n\t\t\tif (invert != 0) {\n\t\t\t\tfilter += \" invert(\" + invert + \")\";\n\t\t\t}\n\t\t}\n\n\n\t\tif (filter) {\n\t\t\tdisplay.filter = filter;\n\t\t}\n\n\t\tif (this.isDirty(\"cursorOverStyle\")) {\n\t\t\tdisplay.cursorOverStyle = this.get(\"cursorOverStyle\");\n\t\t}\n\n\t\tif (this.isDirty(\"hoverOnFocus\")) {\n\t\t\tif (this.get(\"hoverOnFocus\")) {\n\t\t\t\tthis._focusDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"focus\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"blur\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t})]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._focusDp) {\n\t\t\t\t\tthis._focusDp.dispose();\n\t\t\t\t\tthis._focusDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"focusable\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t\tthis.markDirtyAccessibility();\n\t\t\tthis._disposers.push(events.on(\"blur\", () => {\n\t\t\t\tthis.setPrivateRaw(\"touchHovering\", false);\n\t\t\t}));\n\t\t\tthis._disposers.push(events.once(\"boundschanged\", () => {\n\t\t\t\t// We might need to do this to re-evaluate accessibility attributes\n\t\t\t\t// once the element gains size (bounds)\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}));\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"focusable\")) {\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\n\t\t\t// display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n\t\t\t// @todo make sure ariaLabel gets populated in Root\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"exportable\")) {\n\t\t\tdisplay.exportable = this.get(\"exportable\");\n\t\t}\n\n\t\tif (this.isDirty(\"interactive\")) {\n\t\t\tconst events = this.events;\n\t\t\tif (this.get(\"interactive\") && !events.isDisposed()) {\n\t\t\t\tthis._hoverDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"click\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (!this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n\t\t\t\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", true);\n\t\t\t\t\t\t\t\t\tthis.events.dispatch(\"pointerover\", {\n\t\t\t\t\t\t\t\t\t\ttype: \"pointerover\",\n\t\t\t\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\t\t\t\toriginalEvent: ev.originalEvent,\n\t\t\t\t\t\t\t\t\t\tpoint: ev.point,\n\t\t\t\t\t\t\t\t\t\tsimulated: ev.simulated\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}, 10)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n\t\t\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", false);\n\t\t\t\t\t\t\t\tthis.events.dispatch(\"pointerout\", {\n\t\t\t\t\t\t\t\t\ttype: \"pointerout\",\n\t\t\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\t\t\toriginalEvent: ev.originalEvent,\n\t\t\t\t\t\t\t\t\tpoint: ev.point,\n\t\t\t\t\t\t\t\t\tsimulated: ev.simulated\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._isDown) {\n\t\t\t\t\t\t\tthis._handleUp(ev);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//this._isDown = false;\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerdown\", (e) => {\n\t\t\t\t\t\tthis._handleDown(e);\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._display.interactive = false;\n\t\t\t\tif (this._hoverDp) {\n\t\t\t\t\tthis._hoverDp.dispose();\n\t\t\t\t\tthis._hoverDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"forceInactive\")) {\n\t\t\tthis._display.inactive = this.get(\"forceInactive\", null);\n\t\t}\n\n\t\tif (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\n\t\t\tthis.showTooltip();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStart(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = e;\n\t\tthis.events.stopParentDispatch();\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStop(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = undefined;\n\t\tthis._dragPoint = undefined;\n\t\tthis.events.stopParentDispatch();\n\n\t\tif (this._isDragging) {\n\t\t\tthis._isDragging = false;\n\n\t\t\tconst type = \"dragstop\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, {\n\t\t\t\t\ttype: type,\n\t\t\t\t\ttarget: this,\n\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\tpoint: e.point,\n\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOver() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverActive\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverDisabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t}\n\t\t\tif (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOut() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleUp(e: ISpritePointerEvent) {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse if (this.states.lookup(\"down\")) {\n\t\t\t\tif (this.isHover()) {\n\t\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._downPoint = undefined;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tdelete this._downPoints[pointerId];\n\n\t\t\tif ($object.keys(this._downPoints).length == 0) {\n\t\t\t\tthis._isDown = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _hasMoved(e: ISpritePointerEvent): boolean {\n\t\t// @todo remove this once migrated to _downPoints\n\t\t// if (this._downPoint) {\n\t\t// \tconst x = Math.abs(this._downPoint.x - e.point.x);\n\t\t// \tconst y = Math.abs(this._downPoint.y - e.point.y);\n\t\t// \treturn (x > 5) || (y > 5);\n\t\t// }\n\n\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\tconst downPoint = this._downPoints[pointerId];\n\t\tif (downPoint) {\n\t\t\tconst x = Math.abs(downPoint.x - e.point.x);\n\t\t\tconst y = Math.abs(downPoint.y - e.point.y);\n\t\t\treturn (x > 5) || (y > 5);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic _hasDown(): boolean {\n\t\treturn $object.keys(this._downPoints).length > 0;\n\t}\n\n\tprotected _handleDown(e: ISpritePointerEvent) {\n\n\t\tconst parent = this.parent;\n\t\tif (parent && !this.get(\"draggable\")) {\n\t\t\tparent._handleDown(e);\n\t\t}\n\n\t\tif (this.get(\"interactive\") && !this.isHidden()) {\n\t\t\tif (this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t\tthis._downPoint = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._isDown = true;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tthis._downPoints[pointerId] = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragMove(e: ISpritePointerEvent) {\n\t\tlet dragEvent = this._dragEvent;\n\n\t\tif (dragEvent) {\n\n\t\t\tif (dragEvent.simulated && !e.simulated) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tlet angle = 0;\n\n\t\t\tlet parent = this.parent;\n\t\t\tlet scale = 1;\n\n\t\t\twhile (parent != null) {\n\t\t\t\tangle += parent.get(\"rotation\", 0);\n\t\t\t\tparent = parent.parent;\n\t\t\t\tif (parent) {\n\t\t\t\t\tscale *= parent.get(\"scale\", 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = (e.point.x - dragEvent.point.x) / scale;\n\t\t\tlet y = (e.point.y - dragEvent.point.y) / scale;\n\n\t\t\tconst events = this.events;\n\n\t\t\tif (dragEvent.simulated && !this._isDragging) {\n\t\t\t\tthis._isDragging = true;\n\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\tthis._dragPoint = {\n\t\t\t\t\tx: this.x(),\n\t\t\t\t\ty: this.y()\n\t\t\t\t};\n\n\t\t\t\tconst type = \"dragstart\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._isDragging) {\n\t\t\t\tlet dragPoint = this._dragPoint!;\n\n\t\t\t\tthis.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\n\t\t\t\tthis.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\n\n\t\t\t\tconst type = \"dragged\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tif (Math.hypot(x, y) > 5) {\n\t\t\t\t\tthis._isDragging = true;\n\t\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\t\tthis._dragPoint = {\n\t\t\t\t\t\tx: this.x(),\n\t\t\t\t\t\ty: this.y()\n\t\t\t\t\t};\n\n\t\t\t\t\tconst type = \"dragstart\";\n\t\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\t\tsimulated: e.simulated\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\n\t}\n\n\tpublic _getBounds() {\n\t\tthis._localBounds = this._display.getLocalBounds();\n\t}\n\n\t/**\n\t * Returns depth (how deep in the hierachy of the content tree) of this\n\t * element.\n\t *\n\t * @return Depth\n\t */\n\tpublic depth(): number {\n\t\tlet self: Container | undefined = this.parent;\n\t\tlet depth = 0;\n\n\t\twhile (true) {\n\t\t\tif (self) {\n\t\t\t\t++depth;\n\t\t\t\tself = self.parent;\n\n\t\t\t} else {\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySize(): void {\n\t\tthis._sizeDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyBounds(): void {\n\t\tconst display = this._display;\n\t\tif (this.get(\"isMeasured\")) {\n\t\t\tthis._root._addDirtyBounds(this);\n\t\t\tdisplay.isMeasured = true;\n\t\t\tdisplay.invalidateBounds();\n\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent && this.get(\"position\") != \"absolute\") {\n\t\t\t\tif (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\n\t\t\t\t\tparent.markDirtyBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyAccessibility(): void {\n\t\t//if (this._root.focused(this)) {\n\t\tthis._root._invalidateAccessibility(this);\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyLayer() {\n\t\t//this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n\t\tthis._display.markDirtyLayer(true);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tsuper.markDirty();\n\t\tthis.markDirtyLayer();\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst oldBounds = this._adjustedLocalBounds;\n\n\t\tlet newBounds: IBounds;\n\n\t\t// if display.visible == false, it still returns bounds\n\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\tnewBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t};\n\t\t\tthis._localBounds = newBounds;\n\t\t\tthis._adjustedLocalBounds = newBounds;\n\t\t}\n\t\telse {\n\t\t\tthis._getBounds();\n\t\t\tthis._fixMinBounds(this._localBounds);\n\t\t\tthis.updatePivotPoint();\n\t\t\tthis._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n\t\t\tnewBounds = this._adjustedLocalBounds!;\n\t\t}\n\n\t\tif (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\n\t\t\tconst eventType = \"boundschanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t\tif (this.parent) {\n\t\t\t\tthis.parent.markDirty();\n\t\t\t\tthis.parent.markDirtyBounds();\n\t\t\t}\n\n\t\t\t// Update tooltip position together with the Sprite\n\t\t\tif (this.getPrivate(\"showingTooltip\")) {\n\t\t\t\tthis.showTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _fixMinBounds(bounds: IBounds) {\n\t\tlet minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n\t\tlet minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tif (bounds.right - bounds.left < minWidth) {\n\t\t\t\tbounds.right = bounds.left + minWidth;\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\tif (bounds.bottom - bounds.top < minHeight) {\n\t\t\t\tbounds.bottom = bounds.top + minHeight;\n\t\t\t}\n\t\t}\n\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tif (privateWidth > 0) {\n\t\t\t\tbounds.right = bounds.left + privateWidth;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbounds.left = bounds.right + privateWidth;\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\tif (privateHeight > 0) {\n\t\t\t\tbounds.bottom = bounds.top + privateHeight;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbounds.top = bounds.bottom + privateHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _removeParent(parent: Container | undefined) {\n\t\tif (parent) {\n\t\t\tparent.children.removeValue(this);\n\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._statesHandled = false;\n\t}\n\n\t/**\n\t * Simulate hover over element.\n\t */\n\tpublic hover() {\n\t\tif (!this.isDisposed()) {\n\t\t\tthis.showTooltip();\n\t\t\tthis._handleOver();\n\t\t}\n\t}\n\n\t/**\n\t * Simulate unhover over element.\n\t */\n\tpublic unhover(): void {\n\t\tif (!this.isDisposed()) {\n\t\t\tthis.hideTooltip();\n\t\t\tthis._handleOut();\n\t\t}\n\t}\n\n\t/**\n\t * Shows element's [[Tooltip]].\n\t */\n\tpublic showTooltip(point?: IPoint): Promise<void> | undefined {\n\t\tif (!this.isDisposed()) {\n\t\t\tconst tooltip = this.getTooltip();\n\t\t\tconst tooltipText = this.get(\"tooltipText\");\n\t\t\tconst tooltipHTML = this.get(\"tooltipHTML\");\n\n\t\t\tif ((tooltipText || tooltipHTML) && tooltip) {\n\t\t\t\tconst tooltipPosition = this.get(\"tooltipPosition\");\n\t\t\t\tconst tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n\n\t\t\t\tif (tooltipPosition == \"fixed\" || !point) {\n\t\t\t\t\tthis._display._setMatrix();\n\t\t\t\t\tpoint = this.toGlobal(tooltipTarget._getTooltipPoint());\n\t\t\t\t}\n\n\t\t\t\ttooltip.set(\"pointTo\", point);\n\t\t\t\ttooltip.set(\"tooltipTarget\", tooltipTarget);\n\n\t\t\t\tif (!tooltip.get(\"x\")) {\n\t\t\t\t\ttooltip.set(\"x\", point.x);\n\t\t\t\t}\n\t\t\t\tif (!tooltip.get(\"y\")) {\n\t\t\t\t\ttooltip.set(\"y\", point.y);\n\t\t\t\t}\n\n\t\t\t\tif (tooltipText) {\n\t\t\t\t\ttooltip.label.set(\"text\", tooltipText);\n\t\t\t\t}\n\t\t\t\tif (tooltipHTML) {\n\t\t\t\t\ttooltip.label.set(\"html\", tooltipHTML);\n\t\t\t\t}\n\t\t\t\tconst dataItem = this.dataItem;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\ttooltip.label._setDataItem(dataItem);\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\n\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\tconst promise = tooltip.show();\n\t\t\t\tthis.setPrivateRaw(\"showingTooltip\", true);\n\t\t\t\treturn promise;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Hides element's [[Tooltip]].\n\t */\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.getTooltip();\n\t\tif (tooltip) {\n\t\t\tif (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this) || this.get(\"tooltip\") == tooltip) {\n\t\t\t\tlet timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\n\t\t\t\tconst promise = tooltip.hide(timeout);\n\t\t\t\tthis.setPrivateRaw(\"showingTooltip\", false);\n\t\t\t\treturn promise;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst bounds = this._localBounds!;\n\n\t\tif (bounds) {\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tif (!this.get(\"isMeasured\")) {\n\t\t\t\tx = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\n\t\t\t\ty = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n\t\t\t\ty = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n\t\t\t}\n\n\t\t\treturn { x, y };\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\t/**\n\t * Returns [[Tooltip]] used for this element.\n\t *\n\t * @return Tooltip\n\t */\n\tpublic getTooltip(): Tooltip | undefined {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (!tooltip) {\n\t\t\tlet parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\treturn parent.getTooltip();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn tooltip;\n\t\t}\n\t}\n\n\tpublic _updatePosition() {\n\n\t\tconst parent = this.parent;\n\n\t\tlet dx = this.get(\"dx\", 0);\n\t\tlet dy = this.get(\"dy\", 0);\n\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tlet xx = 0;\n\t\tlet yy = 0;\n\n\t\tconst position = this.get(\"position\");\n\n\t\tif (x instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\tx = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(x)) {\n\t\t\txx = x + dx;\n\t\t}\n\t\telse {\n\t\t\tif (_x != null) {\n\t\t\t\txx = _x;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\txx = parent.get(\"paddingLeft\", 0) + dx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tlet y = this.get(\"y\");\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (y instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\ty = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(y)) {\n\t\t\tyy = y + dy;\n\t\t}\n\t\telse {\n\t\t\tif (_y != null) {\n\t\t\t\tyy = _y;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\tyy = parent.get(\"paddingTop\", 0) + dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst display = this._display;\n\n\t\tif (display.x != xx || display.y != yy) {\n\t\t\tdisplay.invalidateBounds();\n\t\t\tdisplay.x = xx;\n\t\t\tdisplay.y = yy;\n\n\t\t\tconst eventType = \"positionchanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t}\n\n\t\t// Update tooltip position together with the Sprite\n\t\tif (this.getPrivate(\"showingTooltip\")) {\n\t\t\tthis.showTooltip();\n\t\t}\n\t}\n\n\t/**\n\t * Returns element's actual X position in pixels.\n\t *\n\t * @return X (px)\n\t */\n\tpublic x(): number {\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (x instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(x)) {\n\t\t\t\t\tif (_x != null) {\n\t\t\t\t\t\treturn _x;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingLeft\", this._display.x)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.x;\n\t}\n\n\t/**\n\t * Returns element's actual Y position in pixels.\n\t *\n\t * @return Y (px)\n\t */\n\tpublic y(): number {\n\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (_y != null) {\n\t\t\treturn _y;\n\t\t}\n\n\t\tlet y = this.get(\"y\");\n\t\tconst parent = this.parent;\n\n\t\tif (parent) {\n\t\t\tif (y instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(y)) {\n\t\t\t\t\tif (_y != null) {\n\t\t\t\t\t\treturn _y;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingTop\", this._display.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.y;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis._display.dispose();\n\t\tthis._removeTemplateField();\n\t\tthis._removeParent(this.parent);\n\t\tthis._root._removeFocusElement(this);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.dispose();\n\t\t}\n\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic adjustedLocalBounds(): IBounds {\n\t\tthis._fixMinBounds(this._adjustedLocalBounds);\n\t\treturn this._adjustedLocalBounds;\n\t}\n\n\t/**\n\t * Returns local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic localBounds(): IBounds {\n\t\treturn this._localBounds;\n\t}\n\n\t/**\n\t * Returns adjusted local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic bounds(): IBounds {\n\t\tconst bounds = this._adjustedLocalBounds;\n\t\tconst x = this.x();\n\t\tconst y = this.y();\n\t\treturn { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\n\t}\n\n\t/**\n\t * Returns global coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic globalBounds(): IBounds {\n\t\tconst bounds = this.localBounds();\n\n\t\tconst p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\tprotected _onShow(_duration?: number) {\n\n\t}\n\n\tprotected _onHide(_duration?: number) {\n\n\t}\n\n\t/**\n\t * Plays initial reveal animation regardless if element is currently hidden\n\t * or visible.\n\t *\n\t * @param   duration  Duration of the animation in milliseconds\n\t * @param   delay     Delay showing of the element by X milliseconds\n\t * @return            Promise\n\t */\n\tpublic async appear(duration?: number, delay?: number): Promise<void> {\n\t\tawait this.hide(0);\n\t\tif (delay) {\n\t\t\treturn new Promise<void>((success, _error) => {\n\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\tsuccess(this.show(duration));\n\t\t\t\t}, delay);\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\treturn this.show(duration);\n\t\t}\n\t}\n\n\t/**\n\t * Shows currently hidden element and returns a `Promise` which completes\n\t * when all showing animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tif (!this._isShowing) {\n\t\t\tthis._isHidden = false;\n\t\t\tthis._isShowing = true;\n\t\t\tthis._isHiding = false;\n\n\t\t\tif (this.states.lookup(\"default\")!.get(\"visible\")) {\n\t\t\t\tthis.set(\"visible\", true);\n\t\t\t}\n\t\t\tthis._onShow(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"default\", duration);\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isShowing = false;\n\t\t}\n\t}\n\n\t/**\n\t * Hides the element and returns a `Promise` which completes when all hiding\n\t * animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tif (!this._isHiding && !this._isHidden) {\n\t\t\tthis._isHiding = true;\n\t\t\tthis._isShowing = false;\n\t\t\tlet state = this.states.lookup(\"hidden\");\n\t\t\tif (!state) {\n\t\t\t\tstate = this.states.create(\"hidden\", {\n\t\t\t\t\t\"opacity\": 0,\n\t\t\t\t\t\"visible\": false\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._isHidden = true;\n\t\t\tthis._onHide(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"hidden\", duration);\n\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isHiding = false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hidden.\n\t *\n\t * @return Is hidden?\n\t */\n\tpublic isHidden(): boolean {\n\t\treturn this._isHidden;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a default state.\n\t *\n\t * @return Is showing?\n\t */\n\tpublic isShowing(): boolean {\n\t\treturn this._isShowing;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a hidden state.\n\t *\n\t * @return Is hiding?\n\t */\n\tpublic isHiding(): boolean {\n\t\treturn this._isHiding;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hovered by a pointer.\n\t *\n\t * @return Is hovered?\n\t */\n\tpublic isHover(): boolean {\n\t\treturn this._display.hovering();\n\t}\n\n\t/**\n\t * Returns `true` if this element does currently have focus.\n\t *\n\t * @return Is focused?\n\t */\n\tpublic isFocus(): boolean {\n\t\treturn this._root.focused(this);\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently being dragged.\n\t *\n\t * @return Is dragged?\n\t */\n\tpublic isDragging(): boolean {\n\t\treturn this._isDragging;\n\t}\n\n\t/**\n\t * Returns `false` if if either public or private setting `visible` is set\n\t * to `false`, or `forceHidden` is set to `true`.\n\t *\n\t * @return Visible?\n\t */\n\tpublic isVisible(): boolean {\n\t\tif (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Same as `isVisible()`, except it checks all ascendants, too.\n\t *\n\t * @since 5.2.7\n\t * @return Visible?\n\t */\n\tpublic isVisibleDeep(): boolean {\n\t\treturn this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\n\t}\n\n\t/**\n\t * Returns an actual opacity of the element, taking into account all parents.\n\t *\n\t * @return Opacity\n\t * @since 5.2.11\n\t */\n\tpublic compositeOpacity(): number {\n\t\tconst opacity = this.get(\"opacity\", 1);\n\t\treturn this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\n\t}\n\n\t/**\n\t * Returns an actual scale of the element, taking into account all parents.\n\t *\n\t * @return Opacity\n\t * @since 5.9.2\n\t */\n\tpublic compositeScale(): number {\n\t\tconst scale = this.get(\"scale\", 1);\n\t\treturn this._parent ? (this._parent.compositeScale() * scale) : scale;\n\t}\n\n\t/**\n\t * Returns an actual roation of the element, taking into account all parents.\n\t *\n\t * @return Opacity\n\t * @since 5.9.2\n\t */\n\tpublic compositeRotation(): number {\n\t\tconst rotation = this.get(\"rotation\", 0);\n\t\treturn this._parent ? (this._parent.compositeRotation() + rotation) : rotation;\n\t}\n\n\t/**\n\t * Returns width of this element in pixels.\n\t *\n\t * @return Width (px)\n\t */\n\tpublic width(): number {\n\t\tlet width = this.get(\"width\");\n\t\tlet maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\tlet minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet w = 0;\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tw = privateWidth;\n\t\t}\n\t\telse {\n\t\t\tif (width == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\tw = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tw = parent.innerWidth() * width.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tw = this._root.width() * width.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(width)) {\n\t\t\t\t\tw = width;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tw = Math.max(minWidth, w);\n\t\t}\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\tw = Math.min(maxWidth, w);\n\t\t}\n\n\t\treturn w;\n\t}\n\n\t/**\n\t * Returns maximum allowed width of this element in pixels.\n\t *\n\t * @return Maximum width (px)\n\t */\n\tpublic maxWidth(): number {\n\t\tlet maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\treturn maxWidth;\n\t\t}\n\t\telse {\n\t\t\tlet width = this.get(\"width\")\n\t\t\tif ($type.isNumber(width)) {\n\t\t\t\treturn width;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerWidth();\n\t\t}\n\t\treturn this._root.width();\n\t}\n\n\t/**\n\t * Returns maximum allowed height of this element in pixels.\n\t *\n\t * @return Maximum height (px)\n\t */\n\tpublic maxHeight(): number {\n\t\tlet maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\treturn maxHeight;\n\t\t}\n\t\telse {\n\t\t\tlet height = this.get(\"height\")\n\t\t\tif ($type.isNumber(height)) {\n\t\t\t\treturn height;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerHeight();\n\t\t}\n\t\treturn this._root.height();\n\t}\n\n\t/**\n\t * Returns height of this element in pixels.\n\t *\n\t * @return Height (px)\n\t */\n\tpublic height(): number {\n\t\tlet height = this.get(\"height\");\n\t\tlet maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\tlet minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\t\tlet h = 0;\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\th = privateHeight;\n\t\t}\n\t\telse {\n\t\t\tif (height == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\th = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\th = parent.innerHeight() * height.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\th = this._root.height() * height.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(height)) {\n\t\t\t\t\th = height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\th = Math.max(minHeight, h);\n\t\t}\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\th = Math.min(maxHeight, h);\n\t\t}\n\n\t\treturn h;\n\t}\n\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\t// templateField overrides template\n\t\tif (this._templateField && f(this._templateField)) {\n\t\t\treturn this._templateField;\n\t\t}\n\n\t\treturn super._findStaticTemplate(f);\n\t}\n\n\tpublic _walkParents(f: (parent: Sprite) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._walkParent(f);\n\t\t}\n\t}\n\n\tprotected _walkParent(f: (parent: Sprite) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._parent._walkParent(f);\n\t\t}\n\n\t\tf(this);\n\t}\n\n\t/**\n\t * Parent [[Container]] of this element.\n\t *\n\t * @return Parent container\n\t */\n\tpublic get parent(): Container | undefined {\n\t\treturn this._parent;\n\t}\n\n\tpublic _setParent(parent: Container, updateChildren: boolean = false) {\n\t\tconst prevParent = this._parent;\n\t\tif (parent !== prevParent) {\n\t\t\tthis.markDirtyBounds();\n\n\t\t\tparent.markDirty();\n\n\t\t\tthis._parent = parent;\n\n\t\t\tif (updateChildren) {\n\t\t\t\tthis._removeParent(prevParent);\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tthis._addPercentageSizeChildren();\n\t\t\t\t\tthis._addPercentagePositionChildren();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis._applyThemes();\n\t\t}\n\t}\n\n\t/**\n\t * Returns an instance of [[NumberFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return NumberFormatter instace\n\t */\n\tpublic getNumberFormatter(): NumberFormatter {\n\t\treturn this.get(\"numberFormatter\", this._root.numberFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DateFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DateFormatter instace\n\t */\n\tpublic getDateFormatter(): DateFormatter {\n\t\treturn this.get(\"dateFormatter\", this._root.dateFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DurationFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DurationFormatter instace\n\t */\n\tpublic getDurationFormatter(): DurationFormatter {\n\t\treturn this.get(\"durationFormatter\", this._root.durationFormatter);\n\t}\n\n\t/**\n\t * Converts X/Y coordinate within this element to a global coordinate.\n\t *\n\t * @param  point  Local coordinate\n\t * @return        Global coordinate\n\t */\n\tpublic toGlobal(point: IPoint): IPoint {\n\t\treturn this._display.toGlobal(point);\n\t}\n\n\t/**\n\t * Converts global X/Y coordinate to a coordinate within this element.\n\t *\n\t * @param  point  Global coordinate\n\t * @return        Local coordinate\n\t */\n\tpublic toLocal(point: IPoint): IPoint {\n\t\treturn this._display.toLocal(point);\n\t}\n\n\tpublic _getDownPoint(): IPoint | undefined {\n\t\tconst id = this._getDownPointId();\n\t\tif (id) {\n\t\t\treturn this._downPoints[id];\n\t\t}\n\n\t}\n\n\tpublic _getDownPointId(): number | undefined {\n\t\tif (this._downPoints) {\n\t\t\treturn $object.keysOrdered(this._downPoints, (a, b) => {\n\t\t\t\tif (a > b) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a < b) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t})[0];\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the end of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toFront() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, parent.children.length - 1);\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the beginning of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toBack() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, 0);\n\t\t}\n\t}\n\n}\n", "import type { IGraphics, IPattern } from \"../backend/Renderer\";\nimport type { Color } from \"../../util/Color\";\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../util/Entity\";\n\nexport interface IPatternSettings extends IEntitySettings {\n\n\t/**\n\t * Rotation of patterm in degrees. Supported values: -90 to 90.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Rotation} for more info\n\t */\n\trotation?: number;\n\n\t/**\n\t * How pattern tiles are repeated when filling the area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Repetition} for more info\n\t */\n\trepetition?: \"repeat\" | \"repeat-x\" | \"repeat-y\" | \"no-repeat\";\n\n\t/**\n\t * Width of the pattern tile, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Sizing_patterns} for more info\n\t */\n\twidth?: number;\n\n\t/**\n\t * Width of the pattern tile, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Sizing_patterns} for more info\n\t */\n\theight?: number;\n\n\t/**\n\t * Color of the pattern shape.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tcolor?: Color;\n\n\t/**\n\t * Opacity of the pattern shape.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tcolorOpacity?: number;\n\n\t/**\n\t * Width of the pattern's line elements.\n\t *\n\t * @default 1\n\t */\n\tstrokeWidth?: number;\n\n\t/**\n\t * Stroke (border or line) dash settings.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDasharray?: number[] | number;\n\n\t/**\n\t * Stroke (border or line) dash offset.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDashoffset?: number;\n\n\t/**\n\t * Color to fill gaps between pattern shapes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Opacity of the fill for gaps between pattern shapes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tfillOpacity?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcolorInherited?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tfillInherited?: boolean;\n}\n\nexport interface IPatternPrivate extends IEntityPrivate {\n}\n\nexport interface IPatternEvents extends IEntityEvents {\n}\n\n/**\n * Base class for patterns.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class Pattern extends Entity {\n\tprotected _afterNew() {\n\t\t// Applying themes because pattern will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\tdeclare public _settings: IPatternSettings;\n\tdeclare public _privateSettings: IPatternPrivate;\n\n\tpublic static className: string = \"Pattern\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Pattern.className]);\n\n\tpublic _display: IGraphics = this._root._renderer.makeGraphics();\n\tpublic _backgroundDisplay: IGraphics = this._root._renderer.makeGraphics();\n\n\tprotected _clear = false;\n\n\tprotected _pattern: IPattern | undefined | null;\n\n\tpublic get pattern(): IPattern | undefined | null {\n\t\treturn this._pattern;\n\t}\n\n\tprotected _draw(): void { }\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fillOpacity\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\n\t\tthis._checkDirtyFill();\n\t}\n\n\tprotected _checkDirtyFill() {\n\t\tif (this.isDirty(\"color\") || this.isDirty(\"fill\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tconst repetition = this.get(\"repetition\", \"\");\n\t\t\tconst width = this.get(\"width\", 100);\n\t\t\tconst height = this.get(\"height\", 100);\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tconst fillOpacity = this.get(\"fillOpacity\", 1);\n\n\t\t\tconst backgroundDisplay = this._backgroundDisplay;\n\t\t\tconst display = this._display;\n\n\t\t\tdisplay.clear();\n\t\t\tbackgroundDisplay.clear();\n\n\t\t\tif (fill && (fillOpacity > 0)) {\n\t\t\t\tbackgroundDisplay.beginFill(fill, fillOpacity);\n\t\t\t\tbackgroundDisplay.drawRect(0, 0, width, height);\n\t\t\t\tbackgroundDisplay.endFill();\n\t\t\t}\n\n\t\t\tdisplay.angle = this.get(\"rotation\", 0);\n\t\t\t//display.pivot = { x: width / 2, y: height / 2 };\n\t\t\tthis._draw();\n\n\t\t\tthis._pattern = this._root._renderer.createPattern(display, backgroundDisplay, repetition, width, height);\n\t\t}\n\n\t\tthis._clear = false;\n\t}\n}\n", "import { Pattern, IPatternSettings, IPatternPrivate, IPatternEvents } from \"./Pattern\";\n\nexport interface IPicturePatternSettings extends IPatternSettings {\n\n\t/**\n\t * A source URI of the image.\n\t *\n\t * Can be relative or absolute URL, or data-uri.\n\t */\n\tsrc?: string;\n\n\t/**\n\t * How pattern should be sized:\n\t *\n\t * * `\"image\"` (default) - pattern will be sized to actual image dimensions.\n\t * * `\"pattern\"` - image will sized to image dimensions.\n\t * * `\"none\"` - image will be placed in the pattern, regardless of either dimensions.\n\t * \n\t * @default \"image\"\n\t */\n\tfit?: \"image\" | \"pattern\" | \"none\";\n\n\t/**\n\t * Center images.\n\t *\n\t * @default true\n\t */\n\tcentered?: boolean;\n\n\n\n\tcanvas?: HTMLCanvasElement;\n\n}\n\nexport interface IPicturePatternPrivate extends IPatternPrivate {\n}\n\nexport interface IPicturePatternEvents extends IPatternEvents {\n\n\t/**\n\t * Invoked when related image is loaded.\n\t */\n\tloaded: {};\n\n}\n\n/**\n * Picture pattern.\n *\n * @since 5.2.15\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class PicturePattern extends Pattern {\n\tdeclare public _settings: IPicturePatternSettings;\n\tdeclare public _privateSettings: IPicturePatternPrivate;\n\tdeclare public _events: IPicturePatternEvents;\n\n\tpublic static className: string = \"PicturePattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([PicturePattern.className]);\n\n\tpublic _image: HTMLImageElement | undefined;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tthis._clear = true;\n\n\t\tif (this.isDirty(\"src\")) {\n\t\t\tthis._load();\n\t\t}\n\n\t\tconst canvas = this.get(\"canvas\");\n\t\tif (canvas) {\n\t\t\tthis.set(\"width\", canvas.width);\n\t\t\tthis.set(\"height\", canvas.height)\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\n\t\tconst colorOpacity = this.get(\"colorOpacity\");\n\t\tif (colorOpacity !== undefined) {\n\t\t\tthis._display.alpha = Math.max(0, colorOpacity);\n\t\t}\n\n\t\tconst image = this._image;\n\t\tif (image) {\n\t\t\tconst patternWidth = this.get(\"width\", 100);\n\t\t\tconst patternHeight = this.get(\"height\", 100);\n\n\t\t\t// Fit\n\t\t\tconst fit = this.get(\"fit\", \"image\");\n\t\t\tlet width = 0;\n\t\t\tlet height = 0;\n\t\t\tif (fit == \"pattern\") {\n\t\t\t\twidth = patternWidth;\n\t\t\t\theight = patternHeight;\n\t\t\t\tthis.markDirty();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\tif (fit == \"image\") {\n\t\t\t\t\tthis.set(\"width\", width);\n\t\t\t\t\tthis.set(\"height\", height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Position\n\t\t\tconst centered = this.get(\"centered\", true);\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\t\t\tif (centered) {\n\t\t\t\tx = patternWidth / 2 - width / 2;\n\t\t\t\ty = patternHeight / 2 - height / 2;\n\t\t\t}\n\t\t\tthis._display.image(image, width, height, x, y);\n\t\t}\n\n\t\tconst canvas = this.get(\"canvas\");\n\t\tif (canvas) {\n\t\t\tthis._display.image(canvas, canvas.width, canvas.height, 0, 0);\n\t\t}\n\n\t}\n\n\tprotected _load() {\n\t\tconst src = this.get(\"src\");\n\t\tif (src) {\n\t\t\tconst image = new Image();\n\t\t\t//image.crossOrigin = \"Anonymous\";\n\t\t\timage.src = src!;\n\t\t\timage.decode().then(() => {\n\t\t\t\tthis._image = image;\n\t\t\t\tthis._draw();\n\t\t\t\tif (this.events.isEnabled(\"loaded\")) {\n\t\t\t\t\tthis.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\n\t\t\t\t}\n\t\t\t}).catch((_error: any) => {\n\t\t\t\t// TODO: maybe raise error?\n\t\t\t});\n\t\t}\n\t}\n\n}", "import type { IDisposer } from \"../../util/Disposer\";\nimport type { IPoint } from \"../../util/IPoint\";\nimport type { Color } from \"../../util/Color\";\nimport type { Percent } from \"../../util/Percent\";\nimport type { Matrix } from \"../../util/Matrix\";\nimport type { IBounds } from \"../../util/IBounds\";\n\nexport interface IGradient {\n\taddColorStop(offset: number, color: string): void;\n}\n\n/**\n * Represents an object describing color switching point in a gradiend.\n *F\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport interface IGradientStop {\n\n\t/**\n\t * Color.\n\t */\n\tcolor?: Color;\n\n\t/**\n\t * Offset defines where in the gradient the color should kick in. Values\n\t * from 0 to 1 are possible with 0 meaning start, 0.5 half-way through the\n\t * gradient, etc.\n\t */\n\toffset?: number;\n\n\t/**\n\t * Transparency of the color. 0 - completely transparent, 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Sets lightness of the color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/#Brightness} for more info\n\t */\n\tlighten?: number;\n\n\t/**\n\t * Sets brightness of the color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/#Brightness} for more info\n\t */\n\tbrighten?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcolorInherited?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\topacityInherited?: boolean;\n\n}\n\nexport interface IPattern {\n}\n\nexport type IPointerEvent = PointerEvent | MouseEvent | Touch;\n\nexport type Id = number | null;\n\nexport interface IRendererEvent<E> {\n\tevent: E;\n\tpoint: IPoint;\n\tid: Id;\n\tsimulated: boolean;\n\tnative: boolean;\n}\n\nexport interface IRendererEvents {\n\tclick: IRendererEvent<IPointerEvent>;\n\trightclick: IRendererEvent<IPointerEvent>;\n\tmiddleclick: IRendererEvent<IPointerEvent>;\n\tdblclick: IRendererEvent<IPointerEvent>;\n\tglobalpointermove: IRendererEvent<IPointerEvent>,\n\tglobalpointerup: IRendererEvent<IPointerEvent>,\n\tpointerover: IRendererEvent<IPointerEvent>;\n\tpointerout: IRendererEvent<IPointerEvent>;\n\tpointerdown: IRendererEvent<IPointerEvent>;\n\tpointermove: IRendererEvent<IPointerEvent>;\n\tpointerup: IRendererEvent<IPointerEvent>;\n\twheel: IRendererEvent<WheelEvent>;\n}\n\nexport interface IDisplayObject extends IDisposer {\n\tmask: IGraphics | null;\n\tvisible: boolean;\n\tinteractive: boolean;\n\tinactive: boolean | null;\n\twheelable: boolean;\n\tcancelTouch: boolean;\n\tisMeasured: boolean;\n\tbuttonMode: boolean;\n\talpha: number;\n\tangle: number;\n\tscale: number;\n\tcrisp: boolean;\n\tx: number;\n\ty: number;\n\tpivot: IPoint;\n\tfilter?: string;\n\tcursorOverStyle?: string;\n\texportable?: boolean;\n\n\t_setMatrix(): void;\n\tgetLayer(): ILayer;\n\tsetLayer(order: number | undefined, margin: IMargin | undefined): void;\n\tmarkDirtyLayer(deep?: boolean): void;\n\tclear(): void;\n\tinvalidateBounds(): void;\n\ttoLocal(point: IPoint): IPoint;\n\ttoGlobal(point: IPoint): IPoint;\n\tgetLocalBounds(): IBounds;\n\tgetAdjustedBounds(bounds?: IBounds): IBounds;\n\ton<C, Key extends keyof IRendererEvents>(key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer;\n\thovering(): boolean;\n\tgetCanvas(): HTMLCanvasElement;\n\n\t/**\n\t * @ignore\n\t */\n\tgetLocalMatrix(): Matrix;\n}\n\nexport interface IContainer extends IDisplayObject {\n\tinteractiveChildren: boolean;\n\t_renderer:IRenderer;\n\taddChild(child: IDisplayObject): void;\n\taddChildAt(child: IDisplayObject, index: number): void;\n\tremoveChild(child: IDisplayObject): void;\n}\n\n\n/**\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\n */\nexport enum BlendMode {\n\tADD = \"lighter\",\n\tCOLOR = \"color\",\n\tCOLOR_BURN = \"color-burn\",\n\tCOLOR_DODGE = \"color-dodge\",\n\tDARKEN = \"darken\",\n\tDIFFERENCE = \"difference\",\n\tDST_OVER = \"destination-over\",\n\tEXCLUSION = \"exclusion\",\n\tHARD_LIGHT = \"hard-light\",\n\tHUE = \"hue\",\n\tLIGHTEN = \"lighten\",\n\tLUMINOSITY = \"luminosity\",\n\tMULTIPLY = \"multiply\",\n\tNORMAL = \"source-over\",\n\tOVERLAY = \"overlay\",\n\tSATURATION = \"saturation\",\n\tSCREEN = \"screen\",\n\tSOFT_LIGHT = \"soft-light\",\n\tSRC_ATOP = \"source-atop\",\n\tXOR = \"xor\",\n}\n\nexport interface IGraphics extends IDisplayObject {\n\tblendMode: BlendMode;\n\n\tclear(): void;\n\n\tbeginFill(color?: Color | IGradient | IPattern, alpha?: number): void;\n\tendFill(): void;\n\tbeginPath(): void;\n\n\tlineStyle(width?: number, color?: Color | IGradient | IPattern, alpha?: number, lineJoin?: \"miter\" | \"round\" | \"bevel\", lineCap?: \"butt\" | \"round\" | \"square\"): void;\n\tsetLineDash(dash?: number[]): void;\n\tsetLineDashOffset(dashOffset?: number): void;\n\tendStroke(): void;\n\n\tdrawRect(x: number, y: number, width: number, height: number): void;\n\tdrawCircle(x: number, y: number, radius: number): void;\n\tdrawEllipse(x: number, y: number, radiusX: number, radiusY: number): void;\n\tarc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;\n\tarcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n\tlineTo(x: number, y: number): void;\n\tmoveTo(x: number, y: number): void;\n\tclosePath(): void;\n\tbezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): void;\n\tquadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): void;\n\tsvgPath(path: string): void;\n\timage(image: HTMLImageElement | HTMLCanvasElement, width: number, height: number, x: number, y: number): void;\n\tshadow(color: Color, blur?: number, offsetX?: number, offsetY?: number, opacity?: number): void;\n}\n\n/**\n * @ignore\n */\nexport interface IText extends IDisplayObject {\n\tresolution: number;\n\ttext: string;\n\tstyle: ITextStyle;\n\ttextVisible: boolean;\n\ttruncated?: boolean;\n}\n\n/**\n * @ignore\n */\nexport interface IRadialText extends IText {\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\tradius?: number;\n\tstartAngle?: number;\n\trelativeAngle?: number;\n\tinside?: boolean;\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\tkerning?: number;\n}\n\nexport interface ITextStyle {\n\t//wordWrapWidth: number = 100;\n\tfill?: Color | IGradient | IPattern;\n\ttextAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tverticalAlign?: \"baseline\" | \"sub\" | \"super\";\n\tfontFamily?: string;\n\tfontSize?: string | number;\n\tfontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'\n\tfontStyle?: 'normal' | 'italic' | 'oblique';\n\tfontVariant?: \"normal\" | \"small-caps\";\n\ttextDecoration?: \"underline\" | \"line-through\";\n\tshadowColor?: Color | null;\n\tshadowBlur?: number;\n\tshadowOffsetX?: number;\n\tshadowOffsetY?: number;\n\tshadowOpacity?: number;\n\n\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tlineHeight?: number | Percent;\n\tbaselineRatio?: number;\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\tdirection?: \"ltr\" | \"rtl\";\n\ttextBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\toversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\";\n\tbreakWords?: boolean;\n\tellipsis?: string;\n\tmaxWidth?: number;\n\tmaxHeight?: number;\n\tminScale?: number;\n}\n\nexport interface IPicture extends IDisplayObject {\n\timage: HTMLImageElement | undefined;\n\twidth?: number | undefined;\n\theight?: number | undefined;\n\tshadowColor?: Color;\n\tshadowBlur?: number;\n\tshadowOffsetX?: number;\n\tshadowOffsetY?: number;\n\tshadowOpacity?: number;\n}\n\nexport interface IRenderer extends IDisposer {\n\tdebugGhostView: boolean;\n\ttapToActivate: boolean;\n\ttapToActivateTimeout: number;\n\tresolution: number;\n\tremoveHovering(graphics:IDisplayObject):void;\n\tinteractionsEnabled: boolean;\n\tcreateLinearGradient(x1: number, y1: number, x2: number, y2: number): IGradient;\n\tcreateRadialGradient(x1: number, y1: number, radius1: number, x2: number, y2: number, radius2: number): IGradient;\n\tcreatePattern(graphics: IGraphics, background: IGraphics, repetition: string, width: number, height: number): IPattern;\n\tmakeContainer(): IContainer;\n\tmakeGraphics(): IGraphics;\n\tmakeText(text: string, style: ITextStyle): IText;\n\tmakeRadialText(text: string, style: ITextStyle): IText;\n\tmakeTextStyle(): ITextStyle;\n\tmakePicture(image: HTMLImageElement | undefined): IPicture;\n\tresize(canvasWidth: number, canvasHeight: number, domWidth: number, domHeight: number): void;\n\trender(root: IDisplayObject): void;\n\tgetCanvas(root: IDisplayObject, options?: ICanvasOptions): HTMLCanvasElement;\n\tview: HTMLElement;\n\tgetEvent<A extends IPointerEvent>(originalEvent: A, adjustPoint?: boolean): IRendererEvent<A>;\n\tgetObjectAtPoint(point: IPoint): IDisplayObject | undefined;\t\n\tresetImageArray():void;\n}\n\nexport interface ICanvasOptions {\n\tmaintainPixelRatio?: boolean;\n\tminWidth?: number;\n\tmaxWidth?: number;\n\tminHeight?: number;\n\tmaxHeight?: number;\n}\n\nexport interface IMargin {\n\tleft: number;\n\tright: number;\n\ttop: number;\n\tbottom: number;\n}\n\n/**\n * @ignore\n */\nexport interface ILayer {\n\tvisible: boolean;\n\torder: number;\n\twidth: number | undefined;\n\theight: number | undefined;\n\tdirty: boolean;\n\tmargin: IMargin | undefined;\n}\n", "import type { Color } from \"../util/Color\";\nimport type { Pattern } from \"../render/patterns/Pattern\";\nimport type { Gradient } from \"../render/gradients/Gradient\";\n\nimport { PicturePattern } from \"../render/patterns/PicturePattern\";\nimport { ISpriteSettings, ISpritePrivate, ISpriteEvents, Sprite } from \"./Sprite\";\nimport { IGraphics, BlendMode } from \"./backend/Renderer\";\n\nimport * as $type from \"../util/Type\";\nimport * as $array from \"../util/Array\";\n\n\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\", \"shadowBlur\", \"shadowColor\", \"shadowOpacity\", \"shadowOffsetX\", \"shadowOffsetY\", \"blur\", \"sepia\", \"invert\", \"brightness\", \"hue\", \"contrast\", \"saturate\"];\n\nexport interface IGraphicsSettings extends ISpriteSettings {\n\n\t/**\n\t * Fill color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more information\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Stroke (border or line) color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more information\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Fill pattern.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more information\n\t */\n\tfillPattern?: Pattern;\n\n\t/**\n\t * Stroke (border or line) pattern.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more information\n\t */\n\tstrokePattern?: Pattern;\n\n\t/**\n\t * Fill gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more information\n\t */\n\tfillGradient?: Gradient;\n\n\t/**\n\t * Stroke (border or line) gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more information\n\t */\n\tstrokeGradient?: Gradient;\n\n\t/**\n\t * Stroke (border or line) dash settings.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDasharray?: number[] | number;\n\n\t/**\n\t * Stroke (border or line) dash offset.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDashoffset?: number;\n\n\t/**\n\t * Opacity of the fill. 0 - fully transparent; 1 - fully opaque.\n\t */\n\tfillOpacity?: number;\n\n\t/**\n\t * Opacity of the stroke (border or line). 0 - fully transparent; 1 - fully opaque.\n\t */\n\tstrokeOpacity?: number;\n\n\t/**\n\t * Width of the stroke (border or line) in pixels.\n\t */\n\tstrokeWidth?: number;\n\n\t/**\n\t * Indicates if stroke of a Graphics should stay the same when it's scale changes. Note, this doesn't take into account parent container scale changes.\n\t * @default false\n\t */\n\tnonScalingStroke?: boolean;\n\n\t/**\n\t * Drawing function.\n\t *\n\t * Must use renderer (`display` parameter) methods to draw.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/#Custom_draw_functions} for more info\n\t */\n\tdraw?: (display: IGraphics, graphics: Graphics) => void;\n\n\t/**\n\t * Rendering mode.\n\t *\n\t * @default BlendMode.NORMAL (\"source-over\")\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation} for more information\n\t * @ignore\n\t */\n\tblendMode?: BlendMode;\n\n\t/**\n\t * Draw a shape using an SVG path.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths} for more information\n\t */\n\tsvgPath?: string;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n\t/**\n\t * A method to be used on anchor points (joints) of the multi-point line.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin} for more info\n\t * @default \"miter\"\n\t * @since 5.2.10\n\t */\n\tlineJoin?: \"miter\" | \"round\" | \"bevel\";\n\n\t/**\n\t * This setting determines the shape used to draw the end points of lines.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap} for more info\n\t * @default \"butt\"\n\t * @since 5.10.8\n\t */\n\tlineCap?: \"butt\" | \"round\" | \"square\";\n}\n\nexport interface IGraphicsPrivate extends ISpritePrivate {\n\n}\n\nexport interface IGraphicsEvents extends ISpriteEvents {\n\n}\n\n/**\n * Base class used for drawing shapes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Graphics extends Sprite {\n\n\tdeclare public _settings: IGraphicsSettings;\n\tdeclare public _privateSettings: IGraphicsPrivate;\n\tdeclare public _events: IGraphicsEvents;\n\n\tpublic _display: IGraphics = this._root._renderer.makeGraphics();\n\n\tprotected _clear = false;\n\n\tpublic static className: string = \"Graphics\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Graphics.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"lineCap\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\n\t\tthis._display.crisp = this.get(\"crisp\", false);\n\n\t\tif (this.isDirty(\"fillGradient\")) {\n\t\t\tconst gradient = this.get(\"fillGradient\");\n\t\t\tif (gradient) {\n\t\t\t\tthis._display.isMeasured = true;\n\t\t\t\tconst gradientTarget = gradient.get(\"target\");\n\t\t\t\tif (gradientTarget) {\n\t\t\t\t\tthis._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\n\t\t\t\t\t\tthis._markDirtyKey(\"fill\");\n\t\t\t\t\t}))\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\tgradientTarget.events.on(\"positionchanged\", () => {\n\t\t\t\t\t\t\tthis._markDirtyKey(\"fill\");\n\t\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"strokeGradient\")) {\n\t\t\tconst gradient = this.get(\"strokeGradient\");\n\t\t\tif (gradient) {\n\t\t\t\tthis._display.isMeasured = true;\n\t\t\t\tconst gradientTarget = gradient.get(\"target\");\n\t\t\t\tif (gradientTarget) {\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\tgradientTarget.events.on(\"boundschanged\", () => {\n\t\t\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t\t\t}))\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\tgradientTarget.events.on(\"positionchanged\", () => {\n\t\t\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.markDirtyLayer();\n\t\t\tthis._display.clear();\n\n\t\t\tlet strokeDasharray = this.get(\"strokeDasharray\");\n\t\t\tif ($type.isNumber(strokeDasharray)) {\n\t\t\t\tif (strokeDasharray < 0.5) {\n\t\t\t\t\tstrokeDasharray = [0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstrokeDasharray = [strokeDasharray]\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._display.setLineDash(strokeDasharray as number[]);\n\n\t\t\tconst strokeDashoffset = this.get(\"strokeDashoffset\");\n\t\t\tif (strokeDashoffset) {\n\t\t\t\tthis._display.setLineDashOffset(strokeDashoffset);\n\t\t\t}\n\n\t\t\tconst blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\n\t\t\tthis._display.blendMode = blendMode;\n\n\t\t\tconst draw = this.get(\"draw\");\n\n\t\t\tif (draw && typeof draw === \"function\") {\n\t\t\t\tdraw(this._display, this);\n\t\t\t}\n\n\t\t\tconst svgPath = this.get(\"svgPath\");\n\t\t\tif (svgPath != null) {\n\t\t\t\tthis._display.svgPath(svgPath!);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tif (this._clear) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tconst fillGradient = this.get(\"fillGradient\");\n\t\t\tconst fillPattern = this.get(\"fillPattern\");\n\t\t\tconst fillOpacity = this.get(\"fillOpacity\");\n\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tconst strokeGradient = this.get(\"strokeGradient\");\n\t\t\tconst strokePattern = this.get(\"strokePattern\");\n\n\t\t\tconst shadowColor = this.get(\"shadowColor\");\n\t\t\tconst shadowBlur = this.get(\"shadowBlur\");\n\t\t\tconst shadowOffsetX = this.get(\"shadowOffsetX\");\n\t\t\tconst shadowOffsetY = this.get(\"shadowOffsetY\");\n\t\t\tconst shadowOpacity = this.get(\"shadowOpacity\");\n\n\t\t\tif (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\n\t\t\t\tthis._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\n\t\t\t}\n\n\t\t\tif (fill && !fillGradient) {\n\t\t\t\tthis._display.beginFill(fill, fillOpacity);\n\t\t\t\tthis._display.endFill();\n\t\t\t}\n\n\t\t\tif (fillGradient) {\n\t\t\t\tif (fill) {\n\t\t\t\t\tconst stops = fillGradient.get(\"stops\", []);\n\t\t\t\t\tif (stops.length) {\n\t\t\t\t\t\t$array.each(stops, (stop: any) => {\n\t\t\t\t\t\t\tif ((!stop.color || stop.colorInherited) && fill) {\n\t\t\t\t\t\t\t\tstop.color = fill;\n\t\t\t\t\t\t\t\tstop.colorInherited = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stop.opacity == null || stop.opacityInherited) {\n\t\t\t\t\t\t\t\tstop.opacity = fillOpacity;\n\t\t\t\t\t\t\t\tstop.opacityInherited = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst gradient = fillGradient.getFill(this);\n\t\t\t\tif (gradient) {\n\t\t\t\t\tthis._display.beginFill(gradient, fillOpacity);\n\t\t\t\t\tthis._display.endFill();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillPattern) {\n\t\t\t\tconst pattern = fillPattern.pattern;\n\t\t\t\tif (pattern) {\n\t\t\t\t\tthis._display.beginFill(pattern, fillOpacity);\n\t\t\t\t\tthis._display.endFill();\n\n\t\t\t\t\tif (fillPattern instanceof PicturePattern) {\n\t\t\t\t\t\tfillPattern.events.once(\"loaded\", () => {\n\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\tthis.markDirty();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (stroke || strokeGradient || strokePattern) {\n\t\t\t\tconst strokeOpacity = this.get(\"strokeOpacity\");\n\t\t\t\tlet strokeWidth = this.get(\"strokeWidth\", 1);\n\n\t\t\t\tif (this.get(\"nonScalingStroke\")) {\n\t\t\t\t\tstrokeWidth = strokeWidth / this.get(\"scale\", 1)\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"crisp\")) {\n\t\t\t\t\tstrokeWidth /= this._root._renderer.resolution;\n\t\t\t\t}\n\n\t\t\t\tconst lineJoin = this.get(\"lineJoin\");\n\t\t\t\tconst lineCap = this.get(\"lineCap\");\n\n\t\t\t\tif (stroke && !strokeGradient) {\n\t\t\t\t\tthis._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin, lineCap);\n\t\t\t\t\tthis._display.endStroke();\n\t\t\t\t}\n\n\n\t\t\t\tif (strokeGradient) {\n\t\t\t\t\tconst stops = strokeGradient.get(\"stops\", []);\n\t\t\t\t\tif (stops.length) {\n\t\t\t\t\t\t$array.each(stops, (stop: any) => {\n\t\t\t\t\t\t\tif ((!stop.color || stop.colorInherited) && stroke) {\n\t\t\t\t\t\t\t\tstop.color = stroke;\n\t\t\t\t\t\t\t\tstop.colorInherited = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stop.opacity == null || stop.opacityInherited) {\n\t\t\t\t\t\t\t\tstop.opacity = strokeOpacity;\n\t\t\t\t\t\t\t\tstop.opacityInherited = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tconst gradient = strokeGradient.getFill(this);\n\t\t\t\t\tif (gradient) {\n\t\t\t\t\t\tthis._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin, lineCap);\n\t\t\t\t\t\tthis._display.endStroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (strokePattern) {\n\t\t\t\t\t/*\n\t\t\t\t\tlet changed = false;\n\t\t\t\t\t\n\t\t\t\t\tif (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\n\t\t\t\t\t\tstrokePattern.set(\"color\", stroke);\n\t\t\t\t\t\tstrokePattern.set(\"colorInherited\", true);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\t// @todo: is this OK?\n\t\t\t\t\t\tstrokePattern._changed();\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t\tlet pattern = strokePattern.pattern;\n\n\t\t\t\t\tif (pattern) {\n\t\t\t\t\t\tthis._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin, lineCap);\n\t\t\t\t\t\tthis._display.endStroke();\n\n\t\t\t\t\t\tif (strokePattern instanceof PicturePattern) {\n\t\t\t\t\t\t\tstrokePattern.events.once(\"loaded\", () => {\n\t\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\t\tthis.markDirty();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.getPrivate(\"showingTooltip\")) {\n\t\t\t\tthis.showTooltip();\n\t\t\t}\n\t\t}\n\n\t\tthis._clear = false;\n\t}\n\n}\n", "import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\n\nexport interface IRectangleSettings extends IGraphicsSettings {\n}\n\nexport interface IRectanglePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a rectangle.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Rectangle extends Graphics {\n\n\tdeclare public _settings: IRectangleSettings;\n\tdeclare public _privateSettings: IRectanglePrivate;\n\n\tpublic static className: string = \"Rectangle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Rectangle.className]);\n\n\tpublic _afterNew(){\n\t\tsuper._afterNew();\n\t\tthis._display.isMeasured = true;\n\t\tthis.setPrivateRaw(\"trustBounds\", true);\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear && !this.get(\"draw\")) {\n\t\t\tthis._draw();\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tthis._display.drawRect(0, 0, this.width(), this.height());\n\t}\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n}\n", "import type { Container } from \"./Container\";\nimport type { Sprite } from \"./Sprite\";\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../util/Entity\";\n\nexport interface ILayoutSettings extends IEntitySettings {\n}\n\nexport interface ILayoutPrivate extends IEntityPrivate {\n}\n\nexport function eachChildren(container: Container, f: (sprite: Sprite) => void): void {\n    if (container.get(\"reverseChildren\", false)) {\n        container.children.eachReverse(f);\n    } else {\n        container.children.each(f);\n    }\n}\n\n/**\n * Base class for [[Container]] layouts.\n */\nexport abstract class Layout extends Entity {\n\tdeclare public _settings: ILayoutSettings;\n\tdeclare public _privateSettings: ILayoutPrivate;\n\n\tpublic static className: string = \"Layout\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Layout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateContainer(_container: Container): void;\n}\n", "import { Layout, eachChildren } from \"./Layout\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { Container } from \"./Container\";\n\n/**\n * A horizontal children layout for [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\n */\nexport class HorizontalLayout extends Layout {\n\n\tpublic static className: string = \"HorizontalLayout\";\n\tpublic static classNames: Array<string> = Layout.classNames.concat([HorizontalLayout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateContainer(container: Container): void {\n\n\t\tlet paddingLeft = container.get(\"paddingLeft\", 0);\n\n\t\tlet availableWidth = container.innerWidth();\n\n\t\tlet totalPercent = 0;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childWidth = child.get(\"width\");\n\t\t\t\t\tif (childWidth instanceof Percent) {\n\t\t\t\t\t\ttotalPercent += childWidth.value;\n\n\t\t\t\t\t\tlet w = availableWidth * childWidth.value;\n\t\t\t\t\t\tlet minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\n\t\t\t\t\t\tif (minWidth > w) {\n\t\t\t\t\t\t\tavailableWidth -= minWidth;\n\t\t\t\t\t\t\ttotalPercent -= childWidth.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\n\t\t\t\t\t\tif (w > maxWidth) {\n\t\t\t\t\t\t\tavailableWidth -= maxWidth;\n\t\t\t\t\t\t\ttotalPercent -= childWidth.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!$type.isNumber(childWidth)) {\n\t\t\t\t\t\t\tchildWidth = child.width();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tavailableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (availableWidth <= 0 || availableWidth == Infinity) {\n\t\t\tavailableWidth = .1;\n\t\t}\n\n\t\t//if (availableWidth > 0) {\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childWidth = child.get(\"width\");\n\t\t\t\t\tif (childWidth instanceof Percent) {\n\t\t\t\t\t\tlet privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\n\t\t\t\t\t\tlet minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\n\t\t\t\t\t\tlet maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\n\t\t\t\t\t\tprivateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\n\n\t\t\t\t\t\tchild.setPrivate(\"width\", privateWidth);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (child._prevSettings.width instanceof Percent) {\n\t\t\t\t\t\t\tchild.setPrivate(\"width\", undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t//}\n\n\t\tlet prevX = paddingLeft;\n\n\t\teachChildren(container, (child) => {\n\n\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\tif (child.isVisible()) {\n\t\t\t\t\tlet bounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet marginLeft = child.get(\"marginLeft\", 0);\n\t\t\t\t\tlet marginRight = child.get(\"marginRight\", 0);\n\n\t\t\t\t\tlet maxWidth = child.get(\"maxWidth\");\n\n\t\t\t\t\tlet left = bounds.left;\n\t\t\t\t\tlet right = bounds.right;\n\t\t\t\t\tif (maxWidth) {\n\t\t\t\t\t\tif (right - left > maxWidth) {\n\t\t\t\t\t\t\tright = left + maxWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet x = prevX + marginLeft - left;\n\t\t\t\t\tchild.setPrivate(\"x\", x);\n\t\t\t\t\tprevX = x + right + marginRight;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchild.setPrivate(\"x\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n", "import { Layout, eachChildren } from \"./Layout\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { Container } from \"./Container\";\n\n\n/**\n * A vertical children layout for [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\n */\nexport class VerticalLayout extends Layout {\n\n\tpublic static className: string = \"VerticalLayout\";\n\tpublic static classNames: Array<string> = Layout.classNames.concat([VerticalLayout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateContainer(container: Container): void {\n\t\tlet paddingTop = container.get(\"paddingTop\", 0);\n\n\t\tlet availableHeight = container.innerHeight();\n\t\tlet totalPercent = 0;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childHeight = child.get(\"height\");\n\t\t\t\t\tif (childHeight instanceof Percent) {\n\t\t\t\t\t\ttotalPercent += childHeight.value;\n\n\t\t\t\t\t\tlet h = availableHeight * childHeight.value;\n\t\t\t\t\t\tlet minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\n\t\t\t\t\t\tif (minHeight > h) {\n\t\t\t\t\t\t\tavailableHeight -= minHeight;\n\t\t\t\t\t\t\ttotalPercent -= childHeight.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\n\t\t\t\t\t\tif (h > maxHeight) {\n\t\t\t\t\t\t\tavailableHeight -= maxHeight;\n\t\t\t\t\t\t\ttotalPercent -= childHeight.value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!$type.isNumber(childHeight)) {\n\t\t\t\t\t\t\tchildHeight = child.height();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tavailableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (availableHeight <= 0 || availableHeight == Infinity) {\n\t\t\tavailableHeight = .1;\n\t\t}\n\n\t\t//if (availableHeight > 0) {\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childHeight = child.get(\"height\");\n\n\t\t\t\t\tif (childHeight instanceof Percent) {\n\t\t\t\t\t\tlet privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\n\n\t\t\t\t\t\tlet minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\n\t\t\t\t\t\tlet maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\n\t\t\t\t\t\tprivateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\n\n\t\t\t\t\t\tchild.setPrivate(\"height\", privateHeight);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(child._prevSettings.height instanceof Percent){\n\t\t\t\t\t\t\tchild.setPrivate(\"height\", undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t//}\n\n\t\tlet prevY = paddingTop;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\tif (child.isVisible()) {\n\t\t\t\t\tlet bounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet marginTop = child.get(\"marginTop\", 0);\n\n\t\t\t\t\tlet top = bounds.top;\n\t\t\t\t\tlet bottom = bounds.bottom;\n\n\t\t\t\t\tlet maxHeight = child.get(\"maxHeight\");\n\t\t\t\t\tif (maxHeight) {\n\t\t\t\t\t\tif (bottom - top > maxHeight) {\n\t\t\t\t\t\t\tbottom = top + maxHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet marginBottom = child.get(\"marginBottom\", 0);\n\t\t\t\t\tlet y = prevY + marginTop - top;\n\t\t\t\t\tchild.setPrivate(\"y\", y);\n\t\t\t\t\tprevY = y + bottom + marginBottom;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchild.setPrivate(\"y\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n", "import { Layout, ILayoutSettings, ILayoutPrivate, eachChildren } from \"./Layout\";\nimport * as $array from \"../util/Array\";\nimport * as $math from \"../util/Math\";\nimport type { Container } from \"./Container\";\n\n\nexport interface IGridLayoutSettings extends ILayoutSettings {\n\n\t/**\n\t * If set to `true` all columns in the grid will be equal width.\n\t *\n\t * @default false\n\t */\n\tfixedWidthGrid?: boolean;\n\n\t/**\n\t * Maximum number of columns in the grid.\n\t */\n\tmaxColumns?: number;\n\n}\n\nexport interface IGridLayoutPrivate extends ILayoutPrivate {\n}\n\n/**\n * A grid children layout for [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\n */\nexport class GridLayout extends Layout {\n\n\tpublic static className: string = \"GridLayout\";\n\tpublic static classNames: Array<string> = Layout.classNames.concat([GridLayout.className]);\n\n\tdeclare public _settings: IGridLayoutSettings;\n\tdeclare public _privateSettings: IGridLayoutPrivate;\n\n\n\tprotected _afterNew() {\n\t\tthis._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateContainer(container: Container): void {\n\t\tlet paddingLeft = container.get(\"paddingLeft\", 0);\n\t\tlet paddingRight = container.get(\"paddingRight\", 0);\n\t\tlet paddingTop = container.get(\"paddingTop\", 0);\n\n\t\tlet availableWidth = container.maxWidth() - paddingLeft - paddingRight;\n\n\t\tlet minCellWidth = availableWidth;\n\t\tlet maxCellWidth = 1;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif(child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")){\n\t\t\t\tif (child.get(\"position\") != \"absolute\") {\n\t\t\t\t\tlet childWidth = child.width();\n\n\t\t\t\t\tif (childWidth < minCellWidth) {\n\t\t\t\t\t\tminCellWidth = childWidth;\n\t\t\t\t\t}\n\t\t\t\t\tif (childWidth > maxCellWidth) {\n\t\t\t\t\t\tmaxCellWidth = childWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tminCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\n\t\tmaxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\n\n\t\tlet columnCount = 1;\n\t\tif (this.get(\"fixedWidthGrid\")) {\n\t\t\tcolumnCount = availableWidth / maxCellWidth;\n\t\t}\n\t\telse {\n\t\t\tcolumnCount = availableWidth / minCellWidth;\n\t\t}\n\n\t\tcolumnCount = Math.max(1, Math.floor(columnCount));\n\t\tcolumnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\n\n\t\tlet columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\n\n\t\tlet prevY = paddingTop;\n\n\t\tlet column = 0;\n\t\tlet maxColumnHeight = 0;\n\n\t\tcolumnCount = columnWidths.length;\n\n\t\tlet prevX = paddingLeft;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.get(\"position\") == \"relative\" && child.isVisible()) {\n\t\t\t\tconst marginTop = child.get(\"marginTop\", 0);\n\t\t\t\tconst marginBottom = child.get(\"marginBottom\", 0);\n\n\t\t\t\tlet bounds = child.adjustedLocalBounds();\n\n\t\t\t\tlet marginLeft = child.get(\"marginLeft\", 0);\n\t\t\t\tlet marginRight = child.get(\"marginRight\", 0);\n\t\t\t\tlet x = prevX + marginLeft - bounds.left;\n\t\t\t\tlet y = prevY + marginTop - bounds.top;\n\n\t\t\t\tchild.setPrivate(\"x\", x);\n\t\t\t\tchild.setPrivate(\"y\", y);\n\n\t\t\t\tprevX += columnWidths[column] + marginRight;\n\n\t\t\t\tmaxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\n\n\t\t\t\tcolumn++;\n\n\t\t\t\tif (column >= columnCount) {\n\t\t\t\t\tcolumn = 0;\n\t\t\t\t\tprevX = paddingLeft;\n\t\t\t\t\tprevY += maxColumnHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getColumnWidths(container: Container, columnCount: number, maxCellWidth: number, availableWidth: number): number[] {\n\t\tlet totalWidth = 0;\n\t\tlet columnWidths: Array<number> = [];\n\t\tlet column = 0;\n\n\t\teachChildren(container, (child) => {\n\t\t\tlet bounds = child.adjustedLocalBounds();\n\t\t\tif (child.get(\"position\") != \"absolute\" && child.isVisible()) {\n\t\t\t\tif (this.get(\"fixedWidthGrid\")) {\n\t\t\t\t\tcolumnWidths[column] = maxCellWidth;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\n\t\t\t\t}\n\n\t\t\t\tif (column < container.children.length - 1) {\n\t\t\t\t\tcolumn++;\n\t\t\t\t\tif (column == columnCount) {\n\t\t\t\t\t\tcolumn = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t$array.each(columnWidths, (w) => {\n\t\t\ttotalWidth += w;\n\t\t})\n\n\t\tif (totalWidth > availableWidth) {\n\t\t\tif (columnCount > 2) {\n\t\t\t\tcolumnCount -= 1;\n\t\t\t\treturn this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn [availableWidth];\n\t\t\t}\n\t\t}\n\n\t\treturn columnWidths;\n\t}\n}\n", "import { Color } from \"./Color\"\nimport type { ITextStyle } from \"../render/backend/Renderer\"\nimport * as $type from \"./Type\";\n\n/**\n * Defines an interface for an object that holds a chunk of text.\n */\nexport interface ITextChunk {\n\n\t/**\n\t * Type of the chunk.\n\t */\n\t\"type\": \"value\" | \"text\" | \"format\" | \"image\",\n\n\t/**\n\t * Text.\n\t */\n\t\"text\": string\n\n}\n\nexport class TextFormatter {\n\n\tpublic static prefix = \"__amcharts__\";\n\n\t/**\n\t * Replaces brackets with temporary placeholders.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Input text\n\t * @return Escaped text\n\t */\n\tpublic static escape(text: string): string {\n\t\treturn text.\n\t\t\treplace(/\\[\\[/g, this.prefix + \"1\").\n\t\t\treplace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\n\t\t\treplace(/\\]\\]/g, this.prefix + \"2\").\n\t\t\treplace(/\\{\\{/g, this.prefix + \"3\").\n\t\t\treplace(/\\}\\}/g, this.prefix + \"4\").\n\t\t\treplace(/\\'\\'/g, this.prefix + \"5\");\n\t}\n\n\t/**\n\t * Replaces placeholders back to brackets.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Escaped text\n\t * @return Unescaped text\n\t */\n\tpublic static unescape(text: string): string {\n\t\treturn text.\n\t\t\treplace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\n\t\t\treplace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\n\t\t\treplace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\n\t\t\treplace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\n\t\t\treplace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\n\t}\n\n\t/**\n\t * Cleans up the text text for leftover double square brackets.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Input text\n\t * @return Cleaned up text\n\t */\n\tpublic static cleanUp(text: string): string {\n\t\treturn text.\n\t\t\treplace(/\\[\\[/g, \"[\").\n\t\t\treplace(/\\]\\]/g, \"]\").\n\t\t\treplace(/\\{\\{/g, \"{\").\n\t\t\treplace(/\\}\\}/g, \"}\").\n\t\t\treplace(/\\'\\'/g, \"'\");\n\t}\n\n\t/**\n\t * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\n\t *\n\t * If the second parameter `quotedBlocks` is set to `true` this method will\n\t * also single out text blocks enclosed within single quotes that no\n\t * formatting should be applied to, and they should be displayed as is.\n\t *\n\t * Default for the above is `false`, so that you can use single quote in text\n\t * without escaping it.\n\t *\n\t * If enabled, single quotes can be escaped by doubling it - adding two\n\t * single quotes, which will be replaced by a one single quote in the final\n\t * output.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text          Text to chunk\n\t * @param quotedBlocks  Use quoted blocks\n\t * @param noFormatting  Formatting blocks will be treated as regular text\n\t * @return Array of string chunks\n\t */\n\tpublic static chunk(text: string, quotedBlocks: boolean = false, noFormatting: boolean = false): ITextChunk[] {\n\n\t\t// Init result\n\t\tlet res: ITextChunk[] = [];\n\n\t\t// Replace double (escaped) square spaces and quotes with temporary codes\n\t\ttext = this.escape(text);\n\n\t\t// Deal with style blocks\n\t\tlet chunks = quotedBlocks ? text.split(\"'\") : [text];\n\t\tfor (let i: number = 0; i < chunks.length; i++) {\n\t\t\tlet chunk = chunks[i];\n\n\t\t\t// Empty?\n\t\t\tif (chunk === \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((i % 2) === 0) {\n\n\t\t\t\t// Text outside quotes\n\t\t\t\t// Parse for style blocks which are \"text\" chunks, the rest chunks are\n\t\t\t\t// \"value\"\n\n\t\t\t\tchunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\n\t\t\t\tchunk = chunk.replace(/\\[\\]/g, \"[ ]\");\n\t\t\t\tlet chunks2 = chunk.split(/[\\[\\]]+/);\n\t\t\t\tfor (let i2: number = 0; i2 < chunks2.length; i2++) {\n\t\t\t\t\tlet chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\n\n\t\t\t\t\t// Placeholder?\n\t\t\t\t\tif (chunk2 === $type.PLACEHOLDER) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Empty?\n\t\t\t\t\tif (chunk2 === \"\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Block or value\n\t\t\t\t\tif ((i2 % 2) === 0) {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"value\",\n\t\t\t\t\t\t\t\"text\": chunk2\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": noFormatting ? \"value\" : \"format\",\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t// A text within doublequotes\n\t\t\t\t// All chunks are \"text\"\n\n\t\t\t\tlet chunks2 = chunk.split(/[\\[\\]]+/);\n\t\t\t\tfor (let i2: number = 0; i2 < chunks2.length; i2++) {\n\t\t\t\t\tlet chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\n\n\t\t\t\t\t// Empty?\n\t\t\t\t\tif (chunk2 === \"\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Block or text\n\t\t\t\t\tif ((i2 % 2) === 0) {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": chunk2\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.isImage(chunk2)) {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"image\",\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"format\",\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Checks if supplied format contains image information and should be\n\t * formatted as such.\n\t * I.e.: `[img: myImage.png]`\n\t *\n\t * @ignore\n\t * @param  text  Format\n\t * @return true if it is an image\n\t */\n\tpublic static isImage(text: string): boolean {\n\t\treturn text.match(/img[ ]?:/) ? true : false;\n\t}\n\n\tpublic static getTextStyle(style: string): ITextStyle {\n\n\t\t// let textStyle: string[] = [];\n\t\t// let textFill: string | undefined;\n\t\tlet format: ITextStyle = {};\n\n\t\tif (style == \"\" || style == \"[ ]\") {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Pre-process quoted text\n\t\tconst q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\n\t\tif (q) {\n\t\t\tfor (let i: number = 0; i < q.length; i++) {\n\t\t\t\tstyle = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\n\t\t\t}\n\t\t}\n\n\t\t// Get style parts\n\t\tlet b: string[] | null = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\n\n\t\t// Empty?\n\t\tif (!b) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Check each part\n\t\tfor (let i: number = 0; i < b.length; i++) {\n\n\t\t\tif (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\n\t\t\t\t(<any>format).fontWeight = b[i];\n\t\t\t}\n\t\t\telse if (b[i].match(/^(underline|line-through)$/i)) {\n\t\t\t\t(<any>format).textDecoration = b[i];\n\t\t\t}\n\t\t\telse if (b[i] == \"/\") {\n\t\t\t\t// Just closing tag\n\t\t\t\t// Do nothing\n\t\t\t}\n\t\t\telse if (!b[i].match(/:/)) {\n\t\t\t\t// Color\n\t\t\t\tformat.fill = Color.fromString(b[i]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\n\t\t\t\t(<any>format)[p[0]] = p[1];\n\t\t\t\t//textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\n\t\t\t\t//b[i] = b[i].replace(/\\+/g, \" \");\n\t\t\t}\n\n\t\t}\n\n\t\treturn format;\n\t}\n\n}\n", "import { List } from \"./List\";\nimport type { IDisposer } from \"./Disposer\";\nimport type { Container } from \"../render/Container\";\nimport type { Sprite } from \"../render/Sprite\";\nimport * as $array from \"./Array\";\n\n/**\n * A version of [[List]] to hold children of the [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\n */\nexport class Children<A extends Sprite> extends List<A> implements IDisposer {\n\tprivate _disposed: boolean = false;\n\tprivate _container: Container;\n\tprivate _events: IDisposer;\n\n\tpublic constructor(container: Container) {\n\t\tsuper();\n\n\t\tthis._container = container;\n\n\t\tthis._events = this.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (x) => {\n\t\t\t\t\tthis._onRemoved(x);\n\t\t\t\t});\n\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._onInserted(change.newValue);\n\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._onRemoved(change.oldValue);\n\t\t\t\tthis._onInserted(change.newValue, change.index);\n\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._onInserted(change.newValue, change.index);\n\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._onRemoved(change.oldValue);\n\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._onRemoved(change.value);\n\t\t\t\tthis._onInserted(change.value, change.newIndex);\n\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _onInserted(child: A, index?: number) {\n\t\tchild._setParent(this._container, true);\n\t\tconst childrenDisplay = this._container._childrenDisplay;\n\t\tif (index === undefined) {\n\t\t\tchildrenDisplay.addChild(child._display);\n\n\t\t} else {\n\t\t\tchildrenDisplay.addChildAt(child._display, index);\n\t\t}\n\t}\n\n\tprotected _onRemoved(child: A) {\n\t\tthis._container._childrenDisplay.removeChild(child._display);\n\t\tthis._container.markDirtyBounds();\n\t\tthis._container.markDirty();\n\t}\n\n\t/**\n\t * Returns `true` if obejct is disposed.\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Permanently dispose this object.\n\t */\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\tthis._events.dispose();\n\n\t\t\t$array.each(this.values, (child) => {\n\t\t\t\tchild.dispose();\n\t\t\t});\n\t\t}\n\t}\n}\n", "/** @ignore *//** */\n\nimport * as $type from \"./Type\";\nimport * as $utils from \"./Utils\";\nimport { Sprite } from \"../render/Sprite\";\nimport { TextFormatter } from \"./TextFormatter\";\n\n/**\n * @ignore\n */\nexport function populateString(target: Sprite, string: string): string {\n\tif (string != null) {\n\t\tstring = \"\" + string;\n\t\tstring = TextFormatter.escape(string);\n\t\tlet tags = string.match(/\\{([^}]+)\\}/g);\n\t\tlet i;\n\t\tif (tags) {\n\t\t\tfor (i = 0; i < tags.length; i++) {\n\t\t\t\tlet tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\n\t\t\t\tlet value = getTagValue(target, tag, \"\");\n\n\t\t\t\tif (value == null) {\n\t\t\t\t\tvalue = \"\";\n\t\t\t\t}\n\n\t\t\t\tstring = string.split(tags[i]).join(value);\n\t\t\t}\n\t\t}\n\t\tstring = TextFormatter.unescape(string);\n\t}\n\telse {\n\t\tstring = \"\";\n\t}\n\n\t// TODO: apply adapter?\n\treturn string;\n}\n\n/**\n * @ignore\n */\nfunction getTagValue(target: Sprite, tagName: string, format?: string): string {\n\tlet value: any;\n\tconst dataItem = target.dataItem;\n\n\t// Parse parts\n\tlet parts: any[] = [];\n\tlet reg = /(format[a-zA-Z]*)\\((.*)\\)|([^.]+)/g;\n\tlet matches;\n\n\twhile (true) {\n\t\tmatches = reg.exec(tagName);\n\n\t\tif (matches === null) {\n\t\t\tbreak;\n\t\t}\n\n\t\tif (matches[3]) {\n\t\t\t// Simple property\n\t\t\tparts.push({\n\t\t\t\tprop: matches[3]\n\t\t\t});\n\n\t\t\t// Check if maybe we should force a formatter on this value\n\t\t\tconst dateFields = target.getDateFormatter().get(\"dateFields\", []);\n\t\t\tconst numericFields = target.getNumberFormatter().get(\"numericFields\", []);\n\t\t\tconst durationFields = target.getDurationFormatter().get(\"durationFields\", []);\n\t\t\tif ((<any>dateFields).indexOf(matches[3]) !== -1) {\n\t\t\t\tparts.push({\n\t\t\t\t\tmethod: \"formatDate\",\n\t\t\t\t\tparams: []\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ((<any>numericFields).indexOf(matches[3]) !== -1) {\n\t\t\t\tparts.push({\n\t\t\t\t\tmethod: \"formatNumber\",\n\t\t\t\t\tparams: []\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ((<any>durationFields).indexOf(matches[3]) !== -1) {\n\t\t\t\tparts.push({\n\t\t\t\t\tmethod: \"formatDuration\",\n\t\t\t\t\tparams: []\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Method\n\t\t\t// Parse parameters\n\t\t\tlet params: any[] = [];\n\t\t\tif ($utils.trim(matches[2]) != \"\") {\n\t\t\t\tlet reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\n\t\t\t\tlet matches2;\n\n\t\t\t\twhile (true) {\n\t\t\t\t\tmatches2 = reg2.exec(matches[2]);\n\n\t\t\t\t\tif (matches2 === null) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tparams.push(matches2[1] || matches2[2] || matches2[3])\n\t\t\t\t}\n\t\t\t}\n\t\t\tparts.push({\n\t\t\t\tmethod: matches[1],\n\t\t\t\tparams: params\n\t\t\t})\n\t\t}\n\t}\n\n\t// Check if we can retrieve the value from data item\n\tif (dataItem) {\n\n\n\t\t// Check values\n\t\tvalue = getTagValueFromObject(target, parts, dataItem._settings);\n\n\t\t// Check properties\n\t\tif (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\n\t\t\tvalue = getTagValueFromObject(target, parts, dataItem);\n\t\t}\n\n\t\t// Check data context\n\t\tlet dataContext: any = dataItem.dataContext;\n\n\t\tif (value == null && dataContext) {\n\t\t\tvalue = getTagValueFromObject(target, parts, dataContext);\n\n\t\t\t// Maybe it's a literal dot-separated name of the key in dataContext?\n\t\t\tif (value == null) {\n\t\t\t\tvalue = getTagValueFromObject(target, [{\n\t\t\t\t\tprop: tagName\n\t\t\t\t}], dataContext);\n\t\t\t}\n\n\t\t\t// scond data context level sometimes exist (tree map)\n\t\t\tif (value == null && dataContext.dataContext) {\n\t\t\t\tvalue = getTagValueFromObject(target, parts, dataContext.dataContext);\n\t\t\t}\n\t\t}\n\n\t\t// Check component's data item\n\t\tif (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\n\t\t\tvalue = getTagValue(dataItem.component, tagName, format);\n\t\t}\n\t}\n\n\t// Check sprite's properties\n\tif (value == null) {\n\t\tvalue = getTagValueFromObject(target, parts, target);\n\t}\n\n\t// Finally, check the parent\n\tif (value == null && target.parent) {\n\t\tvalue = getTagValue(target.parent, tagName, format);\n\t}\n\n\treturn value;\n}\n\n/**\n * @ignore\n */\nfunction getCustomDataValue(target: Sprite, prop: string): any {\n\tconst customData = target.getPrivate(\"customData\");\n\tif ($type.isObject(customData)) {\n\t\treturn (<any>customData)[prop];\n\t}\n}\n\n/**\n * @ignore\n */\nexport function getTagValueFromObject(target: Sprite, parts: any[], object: any, format?: string): any {\n\tlet current: any = object;\n\tlet formatApplied = false;\n\tfor (let i = 0, len = parts.length; i < len; i++) {\n\t\tlet part = parts[i];\n\t\tif (part.prop) {\n\t\t\t// Regular property\n\t\t\tif (current instanceof Sprite) {\n\t\t\t\tlet tmp = current.get(part.prop);\n\t\t\t\tif (tmp == null) tmp = current.getPrivate(part.prop);\n\t\t\t\tif (tmp == null) tmp = getCustomDataValue(current, part.prop);\n\t\t\t\tif (tmp == null) tmp = (<any>current)[part.prop];\n\t\t\t\tcurrent = tmp;\n\t\t\t}\n\t\t\telse if (current.get) {\n\t\t\t\tlet tmp = current.get(part.prop);\n\t\t\t\tif (tmp == null) tmp = (<any>current)[part.prop];\n\t\t\t\tcurrent = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurrent = current[part.prop];\n\t\t\t}\n\n\t\t\tif (current == null) {\n\t\t\t\t// Not set, return undefined\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Method\n\n\t\t\tswitch (part.method) {\n\t\t\t\tcase \"formatNumber\":\n\t\t\t\t\tlet numberValue = $type.toNumber(current);\n\t\t\t\t\tif (numberValue != null) {\n\t\t\t\t\t\tcurrent = target.getNumberFormatter().format(\n\t\t\t\t\t\t\tnumberValue,\n\t\t\t\t\t\t\tformat || part.params[0] || undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tformatApplied = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"formatDate\":\n\t\t\t\t\tlet dateValue = $type.toDate(current);\n\t\t\t\t\tif (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\n\t\t\t\t\t\t// Was not able to get date out of value, quitting and letting\n\t\t\t\t\t\t// calling method try another value\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (dateValue != null) {\n\t\t\t\t\t\tcurrent = target.getDateFormatter().format(\n\t\t\t\t\t\t\tdateValue,\n\t\t\t\t\t\t\tformat || part.params[0] || undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tformatApplied = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"formatDuration\":\n\t\t\t\t\tlet durationValue = $type.toNumber(current);\n\t\t\t\t\tif (durationValue != null) {\n\t\t\t\t\t\tcurrent = target.getDurationFormatter().format(\n\t\t\t\t\t\t\tdurationValue,\n\t\t\t\t\t\t\tformat || part.params[0] || undefined,\n\t\t\t\t\t\t\tpart.params[1] || undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tformatApplied = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"urlEncode\":\n\t\t\t\tcase \"encodeURIComponent\":\n\t\t\t\t\tcurrent = encodeURIComponent(current);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (current[part.method]) {\n\t\t\t\t\t\tcurrent[part.method].apply(object, part.params);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Apply default format if it wasn't applied explicitly\n\tif (!formatApplied) {\n\n\t\tlet formatParts = [{\n\t\t\tmethod: \"\",\n\t\t\tparams: format\n\t\t}];\n\n\t\tif (format == null) {\n\n\t\t\t// Format is not set\n\t\t\t// Determine from the type of the value\n\t\t\tif ($type.isNumber(current)) {\n\t\t\t\tformatParts[0].method = \"formatNumber\";\n\t\t\t\tformatParts[0].params = \"\";\n\t\t\t}\n\t\t\telse if ($type.isDate(current)) {\n\t\t\t\tformatParts[0].method = \"formatDate\";\n\t\t\t\tformatParts[0].params = \"\";\n\t\t\t}\n\n\t\t}\n\t\telse {\n\n\t\t\t// Format set\n\t\t\t// Try to determine formatter based on the format\n\t\t\tlet formatterType: string = $utils.getFormat(format);\n\n\t\t\t// format\n\t\t\tif (formatterType === \"number\") {\n\t\t\t\tformatParts[0].method = \"formatNumber\";\n\t\t\t}\n\t\t\telse if (formatterType === \"date\") {\n\t\t\t\tformatParts[0].method = \"formatDate\";\n\t\t\t}\n\t\t\telse if (formatterType === \"duration\") {\n\t\t\t\tformatParts[0].method = \"formatDuration\";\n\t\t\t}\n\n\t\t}\n\n\t\t// Apply format\n\t\tif (formatParts[0].method) {\n\t\t\tcurrent = getTagValueFromObject(target, formatParts, current);\n\t\t}\n\n\t}\n\n\treturn current;\n}", "import type { Graphics } from \"./Graphics\";\nimport type { Layout } from \"./Layout\";\nimport type { IContainer } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Scrollbar } from \"./Scrollbar\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\n\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite, ISpriteSettings, ISpritePrivate, ISpriteEvents } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\nimport { populateString } from \"../util/PopulateString\";\nimport type { IDisposer } from \"../util/Disposer\";\n\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n\nexport interface IContainerSettings extends ISpriteSettings {\n\n\t/**\n\t * Left padding in pixels.\n\t */\n\tpaddingLeft?: number;\n\n\t/**\n\t * Right padding in pixels.\n\t */\n\tpaddingRight?: number;\n\n\t/**\n\t * Top padding in pixels.\n\t */\n\tpaddingTop?: number;\n\n\t/**\n\t * Bottom padding in pixels.\n\t */\n\tpaddingBottom?: number;\n\n\t/**\n\t * Background element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Background} for more info\n\t */\n\tbackground?: Graphics;\n\n\t/**\n\t * A method to layout\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Layout} for more info\n\t */\n\tlayout?: Layout | null;\n\n\t/**\n\t * An element to use as a container's mask (clipping region).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Masks} for more info\n\t */\n\tmask?: Graphics | null;\n\n\t/**\n\t * If set to `true` all content going outside the bounds of the container\n\t * will be clipped.\n\t */\n\tmaskContent?: boolean;\n\n\t/**\n\t * If set to `true` all descendants - not just direct children, but every\n\t * element in it - will become \"interactive\".\n\t */\n\tinteractiveChildren?: boolean;\n\n\t/**\n\t * If set to `true`, applying a state on a container will also apply the same\n\t * state on its children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#States} for more info\n\t */\n\tsetStateOnChildren?: boolean;\n\n\t/**\n\t * Setting this to an instance of [[Scrollbar]] will enable vertical\n\t * scrolling of content if it does not fit into the Container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Scrollbar} for more info\n\t */\n\tverticalScrollbar?: Scrollbar;\n\n\t/**\n\t * If set to `true` its children will be laid out in opposite order.\n\t *\n\t * @since 5.1.1\n\t */\n\treverseChildren?: boolean;\n\n\t/**\n\t * HTML content of the container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/html-content/} for more info\n\t * @since 5.2.11\n\t */\n\thtml?: string;\n\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\nexport interface IContainerPrivate extends ISpritePrivate {\n\t/**\n\t * A `<div>` element used for HTML content of the `Container`.\n\t */\n\thtmlElement?: HTMLDivElement;\n\t\n\t/**\n\t * A wrapper `<div>` for `htmlElement`.\n\t *\n\t * @since 5.11.2\n\t */\n\thtmlElementWrapper?: HTMLDivElement;\n\n\t/**\n\t * @ignore\n\t */\n\twrapperContainer?: Container;\n}\n\n/**\n * A basic element that can have child elements, maintain their layout, and\n * have a background.\n *\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\n * full-fledged charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\n * @important\n */\nexport class Container extends Sprite {\n\n\tdeclare public _settings: IContainerSettings;\n\tdeclare public _privateSettings: IContainerPrivate;\n\tdeclare public _events: IContainerEvents;\n\n\tpublic _display: IContainer = this._root._renderer.makeContainer();\n\n\tpublic _childrenDisplay: IContainer = this._root._renderer.makeContainer();\n\n\t/**\n\t * List of Container's child elements.\n\t */\n\tpublic children: Children<Sprite> = new Children(this);\n\n\tpublic _percentageSizeChildren: Array<Sprite> = [];\n\tpublic _percentagePositionChildren: Array<Sprite> = [];\n\n\tpublic static className: string = \"Container\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Container.className]);\n\n\tpublic _prevWidth: number = 0;\n\tpublic _prevHeight: number = 0;\n\n\tprotected _contentWidth: number = 0;\n\tprotected _contentHeight: number = 0;\n\n\tprotected _contentMask: Rectangle | undefined;\n\n\tprotected _vsbd0: IDisposer | undefined;\n\tprotected _vsbd1: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._display.addChild(this._childrenDisplay);\n\t}\n\n\tprotected _dispose() {\n\t\t$array.eachReverse(this.allChildren(), (child) => {\n\t\t\tchild.dispose();\n\t\t});\n\n\t\tif (this.getPrivate(\"htmlElement\")) {\n\t\t\tthis._root._removeHTMLContent(this);\n\t\t}\n\n\t\tsuper._dispose();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"interactiveChildren\")) {\n\t\t\tthis._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"layout\")) {\n\t\t\tthis._prevWidth = 0;\n\t\t\tthis._prevHeight = 0;\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this._prevSettings.layout) {\n\t\t\t\tthis.children.each((child) => {\n\t\t\t\t\tchild.removePrivate(\"x\");\n\t\t\t\t\tchild.removePrivate(\"y\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n\t\t\tthis.children.each((child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t})\n\t\t}\n\n\t\tif (this.isDirty(\"maskContent\")) {\n\n\t\t\tconst childrenDisplay = this._childrenDisplay;\n\n\t\t\tlet contentMask = this._contentMask;\n\t\t\tif (this.get(\"maskContent\")) {\n\t\t\t\tif (!contentMask) {\n\t\t\t\t\tcontentMask = Rectangle.new(this._root, {\n\t\t\t\t\t\tx: -.5,\n\t\t\t\t\t\ty: -.5,\n\t\t\t\t\t\twidth: this.width() + 1,\n\t\t\t\t\t\theight: this.height() + 1\n\t\t\t\t\t});\n\t\t\t\t\tthis._contentMask = contentMask;\n\t\t\t\t\tchildrenDisplay.addChildAt(contentMask._display, 0);\n\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (contentMask) {\n\t\t\t\t\tchildrenDisplay.removeChild(contentMask._display);\n\t\t\t\t\tchildrenDisplay.mask = null;\n\t\t\t\t\tcontentMask.dispose();\n\t\t\t\t\tthis._contentMask = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\tchild.markDirtyPosition();\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\tthis.updateBackground();\n\t}\n\n\tprotected updateBackground() {\n\t\tconst background = this.get(\"background\");\n\t\tlet bounds = this._localBounds;\n\n\t\tif (bounds && !this.isHidden()) {\n\t\t\tlet x = bounds.left;\n\t\t\tlet y = bounds.top;\n\t\t\tlet w = bounds.right - x;\n\t\t\tlet h = bounds.bottom - y;\n\n\t\t\tlet maxWidth = this.get(\"maxWidth\");\n\t\t\tlet maxHeight = this.get(\"maxHeight\");\n\n\t\t\tif (maxHeight) {\n\t\t\t\tif (h > maxHeight) {\n\t\t\t\t\th = maxHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (maxWidth) {\n\t\t\t\tif (w > maxWidth) {\n\t\t\t\t\tw = maxWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet width = this.width();\n\t\t\tlet height = this.height();\n\n\t\t\tif (background) {\n\t\t\t\tbackground.setAll({ width: w, height: h, x: x, y: y });\n\t\t\t\tif (this._display.interactive) {\n\t\t\t\t\tbackground._display.interactive = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst contentMask = this._contentMask;\n\t\t\tif (contentMask) {\n\t\t\t\tcontentMask.setAll({ width: width + 1, height: height + 1 });\n\t\t\t}\n\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar.set(\"height\", height);\n\t\t\t\tverticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n\t\t\t\tverticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n\n\t\t\t\tconst bg = verticalScrollbar.get(\"background\");\n\t\t\t\tif (bg) {\n\t\t\t\t\tbg.setAll({ width: verticalScrollbar.width(), height: height })\n\t\t\t\t}\n\n\t\t\t\tlet visible = true;\n\t\t\t\tif (this._contentHeight <= height) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t\tverticalScrollbar.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _applyThemes(force: boolean = false): boolean {\n\t\tif (super._applyThemes(force)) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild._applyThemes(force);\n\t\t\t});\n\n\t\t\treturn true;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic _applyState(name: string): void {\n\t\tsuper._applyState(name);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.apply(name);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _applyStateAnimated(name: string, duration?: number): void {\n\t\tsuper._applyStateAnimated(name, duration);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.applyAnimate(name, duration);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns container's inner width (width without padding) in pixels.\n\t *\n\t * @return Inner width (px)\n\t */\n\tpublic innerWidth(): number {\n\t\treturn this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n\t}\n\n\t/**\n\t * Returns container's inner height (height without padding) in pixels.\n\t *\n\t * @return Inner height (px)\n\t */\n\tpublic innerHeight(): number {\n\t\treturn this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n\t}\n\n\tpublic _getBounds() {\n\t\tif (!this.get(\"html\")) {\n\t\t\tlet width = this.get(\"width\");\n\t\t\tlet height = this.get(\"height\");\n\n\t\t\tlet pWidth = this.getPrivate(\"width\");\n\t\t\tlet pHeight = this.getPrivate(\"height\");\n\n\t\t\tlet bounds: IBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tright: this.width(),\n\t\t\t\tbottom: this.height()\n\t\t\t};\n\n\t\t\tlet layout = this.get(\"layout\");\n\t\t\tlet horizontal = false;\n\t\t\tlet vertical = false;\n\t\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\t\thorizontal = true;\n\t\t\t}\n\n\t\t\tif (layout instanceof VerticalLayout) {\n\t\t\t\tvertical = true;\n\t\t\t}\n\n\t\t\tif ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\n\t\t\t\t// void\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet m = Number.MAX_VALUE;\n\n\t\t\t\tlet l = m;\n\t\t\t\tlet r = -m;\n\t\t\t\tlet t = m;\n\t\t\t\tlet b = -m;\n\n\t\t\t\tconst paddingLeft = this.get(\"paddingLeft\", 0);\n\t\t\t\tconst paddingTop = this.get(\"paddingTop\", 0);\n\t\t\t\tconst paddingRight = this.get(\"paddingRight\", 0);\n\t\t\t\tconst paddingBottom = this.get(\"paddingBottom\", 0);\n\n\t\t\t\tthis.children.each((child) => {\n\t\t\t\t\tif (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n\t\t\t\t\t\tlet childBounds = child.adjustedLocalBounds();\n\t\t\t\t\t\tlet childX = child.x();\n\t\t\t\t\t\tlet childY = child.y();\n\t\t\t\t\t\tlet cl = childX + childBounds.left;\n\t\t\t\t\t\tlet cr = childX + childBounds.right;\n\t\t\t\t\t\tlet ct = childY + childBounds.top;\n\t\t\t\t\t\tlet cb = childY + childBounds.bottom;\n\n\t\t\t\t\t\tif (horizontal) {\n\t\t\t\t\t\t\tcl -= child.get(\"marginLeft\", 0);\n\t\t\t\t\t\t\tcr += child.get(\"marginRight\", 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\t\tct -= child.get(\"marginTop\", 0);\n\t\t\t\t\t\t\tcb += child.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cl < l) {\n\t\t\t\t\t\t\tl = cl;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (cr > r) {\n\t\t\t\t\t\t\tr = cr;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (ct < t) {\n\t\t\t\t\t\t\tt = ct;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (cb > b) {\n\t\t\t\t\t\t\tb = cb;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (l == m) {\n\t\t\t\t\tl = 0;\n\t\t\t\t}\n\n\t\t\t\tif (r == -m) {\n\t\t\t\t\tr = 0;\n\t\t\t\t}\n\n\t\t\t\tif (t == m) {\n\t\t\t\t\tt = 0;\n\t\t\t\t}\n\n\t\t\t\tif (b == -m) {\n\t\t\t\t\tb = 0;\n\t\t\t\t}\n\n\t\t\t\tbounds.left = l - paddingLeft;\n\t\t\t\tbounds.top = t - paddingTop;\n\t\t\t\tbounds.right = r + paddingRight;\n\t\t\t\tbounds.bottom = b + paddingBottom;\n\n\t\t\t\tconst minWidth = this.get(\"minWidth\");\n\n\t\t\t\tif ($type.isNumber(minWidth) && minWidth > 0) {\n\t\t\t\t\tif (bounds.right - bounds.left < minWidth) {\n\t\t\t\t\t\tif (bounds.right >= minWidth) {\n\t\t\t\t\t\t\tbounds.left = bounds.right - minWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbounds.right = bounds.left + minWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst minHeight = this.get(\"minHeight\");\n\n\t\t\t\tif ($type.isNumber(minHeight) && minHeight > 0) {\n\t\t\t\t\tif (bounds.bottom - bounds.top < minHeight) {\n\t\t\t\t\t\tif (bounds.bottom >= minHeight) {\n\t\t\t\t\t\t\tbounds.top = bounds.bottom - minHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbounds.bottom = bounds.top + minHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._contentWidth = bounds.right - bounds.left;\n\t\t\tthis._contentHeight = bounds.bottom - bounds.top;\n\n\t\t\tif ($type.isNumber(width)) {\n\t\t\t\tbounds.left = 0;\n\t\t\t\tbounds.right = width;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(pWidth)) {\n\t\t\t\tbounds.left = 0;\n\t\t\t\tbounds.right = pWidth;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(height)) {\n\t\t\t\tbounds.top = 0;\n\t\t\t\tbounds.bottom = height;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(pHeight)) {\n\t\t\t\tbounds.top = 0;\n\t\t\t\tbounds.bottom = pHeight;\n\t\t\t}\n\n\t\t\tthis._localBounds = bounds;\n\t\t}\n\t\telse {\n\t\t\tlet bounds = this._localBounds;\n\t\t\tif (bounds) {\n\t\t\t\tthis._contentWidth = bounds.right - bounds.left;\n\t\t\t\tthis._contentHeight = bounds.bottom - bounds.top;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst layout = this.get(\"layout\");\n\n\t\tif (layout) {\n\t\t\tlayout.updateContainer(this);\n\t\t}\n\n\t\tsuper._updateBounds();\n\n\t\tthis.updateBackground();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty(): void {\n\t\tsuper.markDirty();\n\t\tthis._root._addDirtyParent(this);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst innerWidth = this.innerWidth();\n\t\tconst innerHeight = this.innerHeight();\n\n\t\tif (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n\t\t\tlet layout = this.get(\"layout\");\n\t\t\tlet horizontal = false;\n\t\t\tlet vertical = false;\n\t\t\tif (layout) {\n\t\t\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\t\t\thorizontal = true;\n\t\t\t\t}\n\t\t\t\tif (layout instanceof VerticalLayout) {\n\t\t\t\t\tvertical = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\t\tif (!horizontal) {\n\t\t\t\t\tlet width = child.get(\"width\");\n\t\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"width\", width.value * innerWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!vertical) {\n\t\t\t\t\tlet height = child.get(\"height\");\n\t\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"height\", height.value * innerHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t\tchild.markDirtyBounds();\n\t\t\t})\n\n\t\t\tthis._prevWidth = innerWidth;\n\t\t\tthis._prevHeight = innerHeight;\n\n\t\t\tthis._sizeDirty = true;\n\t\t\tthis.updateBackground();\n\t\t}\n\n\t\tthis._handleStates();\n\t}\n\n\tpublic _updateHTMLContent() {\n\t\tconst html = this.get(\"html\", \"\");\n\t\tif (html && html !== \"\") {\n\t\t\tthis._root._setHTMLContent(this, populateString(this, html));\n\t\t}\n\t\telse {\n\t\t\tthis._root._removeHTMLContent(this);\n\t\t}\n\t\tthis._root._positionHTMLElement(this);\n\t}\n\n\t/**\n\t * If scrolling is enabled on the Container (by adding `verticalScrollbar`)\n\t * the Container will scroll in such way so that target element becomes\n\t * visible if its currently outside of view.\n\t * \n\t * @param  child  Target child\n\t * @since 5.10.5\n\t */\n\tpublic scrollToChild(child: Sprite) {\n\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\tif (verticalScrollbar) {\n\t\t\tlet y = child.y();\n\t\t\tlet h = this.innerHeight();\n\t\t\tlet ch = child.height();\n\t\t\tlet contentH = this._contentHeight;\n\t\t\tlet max = 1 - (h - ch / 2) / contentH;\n\n\t\t\tif (y + ch * .7 + this._childrenDisplay.y > h || y - ch * .3 + this._childrenDisplay.y < 0) {\n\t\t\t\tlet pos = Math.max(0, Math.min(max, (y - ch / 2) / contentH));\n\t\t\t\tverticalScrollbar.animate({ key: \"start\", to: pos, duration: verticalScrollbar.get(\"animationDuration\", 0), easing: verticalScrollbar.get(\"animationEasing\") });\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\n\n\t\tif (this.isDirty(\"html\")) {\n\t\t\tthis._updateHTMLContent();\n\t\t}\n\n\t\tif (this.isDirty(\"verticalScrollbar\")) {\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar._setParent(this);\n\n\t\t\t\tverticalScrollbar.startGrip.setPrivate(\"visible\", false);\n\t\t\t\tverticalScrollbar.endGrip.setPrivate(\"visible\", false);\n\n\t\t\t\tthis.set(\"maskContent\", true);\n\t\t\t\tthis.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\n\n\t\t\t\tlet background = this.get(\"background\");\n\n\t\t\t\tif (!background) {\n\t\t\t\t\tbackground = this.set(\"background\", Rectangle.new(this._root, {\n\t\t\t\t\t\tthemeTags: [\"background\"],\n\t\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\t\tfill: this._root.interfaceColors.get(\"alternativeBackground\")\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tthis._vsbd0 = this.events.on(\"wheel\", (event) => {\n\t\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t\t\t\t// some page element is over the chart.\n\t\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet shiftY = wheelEvent.deltaY / 5000;\n\t\t\t\t\tconst start = verticalScrollbar.get(\"start\", 0);\n\t\t\t\t\tconst end = verticalScrollbar.get(\"end\", 1);\n\n\t\t\t\t\tif (start + shiftY <= 0) {\n\t\t\t\t\t\tshiftY = -start;\n\t\t\t\t\t}\n\t\t\t\t\tif (end + shiftY >= 1) {\n\t\t\t\t\t\tshiftY = 1 - end;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (start + shiftY >= 0 && end + shiftY <= 1) {\n\t\t\t\t\t\tverticalScrollbar.set(\"start\", start + shiftY);\n\t\t\t\t\t\tverticalScrollbar.set(\"end\", end + shiftY);\n\t\t\t\t\t}\n\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._vsbd0);\n\n\t\t\t\tthis._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\n\t\t\t\t\tlet h = this._contentHeight;\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tconst contentMask = this._contentMask;\n\n\t\t\t\t\tchildrenDisplay.y = -verticalScrollbar.get(\"start\", 0) * h;\n\t\t\t\t\tchildrenDisplay.markDirtyLayer();\n\n\t\t\t\t\tif (contentMask) {\n\t\t\t\t\t\tcontentMask._display.y = -childrenDisplay.y;\n\t\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._vsbd1);\n\n\t\t\t\tthis._display.addChild(verticalScrollbar._display);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst previous = this._prevSettings.verticalScrollbar\n\t\t\t\tif (previous) {\n\t\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\t\tif (this._vsbd0) {\n\t\t\t\t\t\tthis._vsbd0.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tif (this._vsbd1) {\n\t\t\t\t\t\tthis._vsbd1.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tchildrenDisplay.y = 0;\n\n\t\t\t\t\tthis.setPrivate(\"height\", undefined);\n\t\t\t\t\tthis.set(\"maskContent\", false);\n\t\t\t\t\tthis.set(\"paddingRight\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"background\")) {\n\t\t\t// TODO maybe this should dispose ?\n\t\t\tconst previous = this._prevSettings[\"background\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t}\n\n\t\t\tconst background = this.get(\"background\");\n\t\t\tif (background instanceof Sprite) {\n\t\t\t\tbackground.set(\"isMeasured\", false);\n\t\t\t\tbackground._setParent(this);\n\t\t\t\tthis._display.addChildAt(background._display, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"mask\")) {\n\n\t\t\tconst mask = this.get(\"mask\");\n\n\t\t\tconst previous = this._prevSettings[\"mask\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\tif (previous != mask) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mask) {\n\t\t\t\tconst parent = mask.parent;\n\t\t\t\tif (parent) {\n\t\t\t\t\tparent.children.removeValue(mask);\n\t\t\t\t}\n\n\t\t\t\tmask._setParent(this);\n\t\t\t\tthis._display.addChildAt(mask._display, 0);\n\t\t\t\tthis._childrenDisplay.mask = mask._display;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tsuper._processTemplateField();\n\t\tthis.children.each((child) => {\n\t\t\tchild._processTemplateField();\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic walkChildren(f: (child: Sprite) => void): void {\n\t\tthis.children.each((child) => {\n\t\t\tif (child instanceof Container) {\n\t\t\t\tchild.walkChildren(f);\n\t\t\t}\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic eachChildren(f: (child: Sprite) => void): void {\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tf(background);\n\t\t}\n\n\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\");\n\t\tif (verticalScrollbar) {\n\t\t\tf(verticalScrollbar);\n\t\t}\n\n\t\tconst mask = this.get(\"mask\");\n\t\tif (mask) {\n\t\t\tf(mask);\n\t\t}\n\n\t\tthis.children.values.forEach((child) => {\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic allChildren(): Array<Sprite> {\n\t\tconst output: Array<Sprite> = [];\n\n\t\tthis.eachChildren((x) => {\n\t\t\toutput.push(x);\n\t\t});\n\n\t\treturn output;\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst updated = (dataItem !== this._dataItem);\n\t\tsuper._setDataItem(dataItem);\n\t\tconst html = this.get(\"html\", \"\");\n\t\tif (html && html !== \"\" && updated) {\n\t\t\tthis._root._setHTMLContent(this, populateString(this, html));\n\t\t}\n\t}\n}\n", "import type { Color } from \"../util/Color\";\nimport type { Percent } from \"../util/Percent\";\nimport type { IText } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { NumberFormatter } from \"../util/NumberFormatter\";\nimport type { DateFormatter } from \"../util/DateFormatter\";\nimport type { DurationFormatter } from \"../util/DurationFormatter\";\nimport type { Gradient } from \"../render/gradients/Gradient\";\n\nimport { Sprite, ISpriteSettings, ISpritePrivate } from \"./Sprite\";\nimport { populateString } from \"../util/PopulateString\";\n\nimport * as $array from \"../util/Array\";\nimport * as $utils from \"../util/Utils\";\nimport { Disposer } from \"../util/Disposer\";\n\n/**\n * @ignore Text is an internal class. Use Label instead.\n */\nexport interface ITextSettings extends ISpriteSettings {\n\ttext?: string;\n\tfill?: Color;\n\n\t/**\n\t * Fill gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more information\n\t * @since 5.10.1\n\t */\n\tfillGradient?: Gradient;\n\n\tfillOpacity?: number;\n\ttextAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tfontFamily?: string;\n\tfontSize?: string | number;\n\tfontWeight?: \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\"\n\tfontStyle?: \"normal\" | \"italic\" | \"oblique\";\n\tfontVariant?: \"normal\" | \"small-caps\";\n\ttextDecoration?: \"underline\" | \"line-through\";\n\tshadowColor?: Color | null;\n\tshadowBlur?: number;\n\tshadowOffsetX?: number;\n\tshadowOffsetY?: number;\n\tshadowOpacity?: number;\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tlineHeight?: Percent | number;\n\tbaselineRatio?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\topacity?: number;\n\tdirection?: \"ltr\" | \"rtl\";\n\ttextBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\toversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\";\n\tbreakWords?: boolean;\n\tellipsis?: string;\n\tminScale?: number;\n\tpopulateText?: boolean;\n\tignoreFormatting?: boolean;\n\tmaxChars?: number;\n}\n\n/**\n * @ignore\n */\nexport interface ITextPrivate extends ISpritePrivate {\n\n\t/**\n\t * @ignore\n\t */\n\ttooltipElement?: HTMLDivElement;\n\n}\n\n/**\n * @ignore Text is an internal class. Use Label instead.\n */\nexport class Text extends Sprite {\n\n\tdeclare public _settings: ITextSettings;\n\tdeclare public _privateSettings: ITextPrivate;\n\n\tpublic textStyle = this._root._renderer.makeTextStyle();\n\n\tpublic _display: IText = this._root._renderer.makeText(\"\", this.textStyle);\n\n\tprotected _textStyles: Array<keyof ITextSettings> = [\n\t\t\"textAlign\",\n\t\t\"fontFamily\",\n\t\t\"fontSize\",\n\t\t\"fontStyle\",\n\t\t\"fontWeight\",\n\t\t\"fontStyle\",\n\t\t\"fontVariant\",\n\t\t\"textDecoration\",\n\t\t\"shadowColor\",\n\t\t\"shadowBlur\",\n\t\t\"shadowOffsetX\",\n\t\t\"shadowOffsetY\",\n\t\t\"shadowOpacity\",\n\t\t// \"leading\",\n\t\t// \"letterSpacing\",\n\t\t\"lineHeight\",\n\t\t\"baselineRatio\",\n\t\t//\"padding\",\n\t\t// \"stroke\",\n\t\t// \"strokeThickness\",\n\t\t// \"trim\",\n\t\t// \"wordWrap\",\n\t\t\"direction\",\n\t\t\"textBaseline\",\n\t\t\"oversizedBehavior\",\n\t\t\"breakWords\",\n\t\t\"ellipsis\",\n\t\t\"minScale\",\n\t\t\"maxChars\"\n\t];\n\n\tprotected _originalScale: number | undefined;\n\n\tpublic static className: string = \"Text\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Text.className]);\n\n\tpublic _updateBounds(): void {\n\t\tif (!this.get(\"text\")) {\n\n\t\t\tlet newBounds: IBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0,\n\t\t\t};\n\t\t\tthis._adjustedLocalBounds = newBounds;\n\t\t}\n\t\telse {\n\t\t\tsuper._updateBounds();\n\t\t\tlet fillGradient = this.get(\"fillGradient\");\n\t\t\tif (fillGradient) {\n\t\t\t\tthis._display.style.fill = fillGradient.getFill(this);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tthis._display.clear();\n\n\t\tlet textStyle = <any>this.textStyle;\n\n\t\tif (this.isDirty(\"opacity\")) {\n\t\t\tlet opacity = this.get(\"opacity\", 1);\n\t\t\tthis._display.alpha = opacity;\n\t\t}\n\n\t\tif (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\n\t\t\tthis._display.text = this._getText();\n\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this.get(\"role\") == \"tooltip\") {\n\t\t\t\tthis._root.updateTooltip(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"tooltipElement\")) {\n\t\t\tconst tooltipElement = this.getPrivate(\"tooltipElement\");\n\t\t\tif (tooltipElement) {\n\t\t\t\tthis._disposers.push(new Disposer(() => {\n\t\t\t\t\tthis._root._removeTooltipElement(this);\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"width\")) {\n\t\t\ttextStyle.wordWrapWidth = this.width();\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"oversizedBehavior\")) {\n\t\t\ttextStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"breakWords\")) {\n\t\t\ttextStyle.breakWords = this.get(\"breakWords\", false);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"ellipsis\")) {\n\t\t\ttextStyle.ellipsis = this.get(\"ellipsis\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"ignoreFormatting\")) {\n\t\t\ttextStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"minScale\")) {\n\t\t\ttextStyle.minScale = this.get(\"minScale\", 0);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tconst fillGradient = this.get(\"fillGradient\");\n\t\t\tconst fillOpacity = this.get(\"fillOpacity\");\n\t\t\tif (fillGradient) {\n\t\t\t\tif (fill) {\n\t\t\t\t\tconst stops = fillGradient.get(\"stops\", []);\n\t\t\t\t\tif (stops.length) {\n\t\t\t\t\t\t$array.each(stops, (stop: any) => {\n\t\t\t\t\t\t\tif ((!stop.color || stop.colorInherited) && fill) {\n\t\t\t\t\t\t\t\tstop.color = fill;\n\t\t\t\t\t\t\t\tstop.colorInherited = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stop.opacity == null || stop.opacityInherited) {\n\t\t\t\t\t\t\t\tstop.opacity = fillOpacity;\n\t\t\t\t\t\t\t\tstop.opacityInherited = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttextStyle.fill = fillGradient.getFill(this);\n\t\t\t}\n\t\t\telse if (fill) {\n\t\t\t\ttextStyle.fill = fill;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillOpacity\")) {\n\t\t\tlet fillOpacity = this.get(\"fillOpacity\", 1);\n\t\t\tif (fillOpacity) {\n\t\t\t\ttextStyle.fillOpacity = fillOpacity;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\n\t\t\ttextStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\n\t\t\ttextStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\t$array.each(this._textStyles, (styleName) => {\n\t\t\tif (this._dirty[styleName]) {\n\t\t\t\ttextStyle[styleName] = this.get(styleName);\n\t\t\t\tthis.markDirtyBounds();\n\t\t\t}\n\t\t})\n\n\t\ttextStyle[\"fontSize\"] = this.get(\"fontSize\");\n\t\ttextStyle[\"fontFamily\"] = this.get(\"fontFamily\");\n\t\tthis._display.style = textStyle;\n\n\t\tif (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\n\t\t\tthis._root.updateTooltip(this);\n\t\t}\n\t}\n\n\tpublic _getText(): string {\n\t\tlet text = this.get(\"text\", \"\");\n\t\tif (this.get(\"maxChars\")) {\n\t\t\ttext = $utils.truncateTextWithEllipsis(text, this.get(\"maxChars\", 100000000), this.get(\"breakWords\"), this.get(\"ellipsis\"));\n\t\t}\n\t\treturn this.get(\"populateText\") ? populateString(this, text) : text;\n\t}\n\n\tpublic _getAccessibleText(): string {\n\t\tconst ariaLabel = this.get(\"ariaLabel\");\n\t\tif (ariaLabel !== undefined) {\n\t\t\treturn this.get(\"populateText\") ? populateString(this, ariaLabel) : ariaLabel;\n\t\t}\n\t\treturn this._getText();\n\t}\n\n\t/**\n\t * Forces the text to be re-evaluated and re-populated.\n\t */\n\tpublic markDirtyText(): void {\n\t\tthis._display.text = this._getText();\n\t\tif (this.get(\"role\") == \"tooltip\") {\n\t\t\tthis._root.updateTooltip(this);\n\t\t}\n\t\tthis.markDirtyBounds();\n\t\tthis.markDirty();\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tif (this.get(\"populateText\")) {\n\t\t\tthis.markDirtyText();\n\t\t}\n\t}\n\n\tpublic getNumberFormatter(): NumberFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getNumberFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getNumberFormatter();\n\t\t}\n\t}\n\n\tpublic getDateFormatter(): DateFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getDateFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getDateFormatter();\n\t\t}\n\t}\n\n\tpublic getDurationFormatter(): DurationFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getDurationFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getDurationFormatter();\n\t\t}\n\t}\n}\n", "import type { Color } from \"../util/Color\";\nimport type { Percent } from \"../util/Percent\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { Gradient } from \"../render/gradients/Gradient\";\n\nimport { Text } from \"../render/Text\";\nimport { p50, p100 } from \"../util/Percent\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"./Container\";\n\nimport * as  $array from \"../../core/util/Array\";\nimport * as  $type from \"../../core/util/Type\";\n\n\nexport interface ILabelSettings extends IContainerSettings {\n\n\t/**\n\t * Labels' text.\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/text-styling/} for text styling info\n\t * \n\t */\n\ttext?: string;\n\n\t/**\n\t * Text color.\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Text opacity.\n\t *\n\t * @default 1\n\t * @ince 5.2.39\n\t */\n\tfillOpacity?: number;\n\n\t/**\n\t * Fill gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more information\n\t * @since 5.10.1\n\t */\n\tfillGradient?: Gradient;\n\n\t/**\n\t * Alignment.\n\t */\n\ttextAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\n\t/**\n\t * Font family to use for the label.\n\t *\n\t * Multiple fonts can be separated by commas.\n\t */\n\tfontFamily?: string;\n\n\t/**\n\t * Font size in misc any supported CSS format (pixel, point, em, etc.).\n\t */\n\tfontSize?: string | number;\n\n\t/**\n\t * Font weight.\n\t */\n\tfontWeight?: \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\";\n\n\t/**\n\t * Font style.\n\t */\n\tfontStyle?: \"normal\" | \"italic\" | \"oblique\";\n\n\t/**\n\t * Font variant.\n\t */\n\tfontVariant?: \"normal\" | \"small-caps\";\n\n\t/**\n\t * Text decoration.\n\t *\n\t * Supported options `\"underline\"`, `\"line-through\"`.\n\t *\n\t * @since 5.0.15\n\t */\n\ttextDecoration?: \"underline\" | \"line-through\";\n\n\t/**\n\t * Line height in percent or absolute pixels.\n\t */\n\tlineHeight?: Percent | number;\n\n\t/**\n\t * How mouch of the height should be considered to go below baseline.\n\t *\n\t * @default 0.19\n\t */\n\tbaselineRatio?: number;\n\n\t/**\n\t * Opacity of the label.\n\t *\n\t * 0 - fully transparent; 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Text direction.\n\t *\n\t * @default \"ltr\"\n\t */\n\tdirection?: \"ltr\" | \"rtl\";\n\n\t/**\n\t * A base line to use when aligning text chunks vertically.\n\t */\n\ttextBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\n\t/**\n\t * How to handle labels that do not fit into its designated space.\n\t *\n\t * LIMITATIONS: on circular labels, the only values supported are `\"hide\"` and\n\t * `\"truncate\"`. The latter will ignore `breakWords` setting.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/#Oversized_text} for more info\n\t */\n\toversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\";\n\n\t/**\n\t * Whether words can be broken when truncating or wrapping text.\n\t *\n\t * @default false\n\t */\n\tbreakWords?: boolean;\n\n\t/**\n\t * Ellipsis characters to use when truncating text.\n\t *\n\t * Will use Unicode ellipsis symbol (`\"…\"`) by default, which might not be\n\t * available in all fonts. If ellipsis looks broken, use different\n\t * characters. E.g.:\n\t *\n\t * ```TypeScript\n\t * label.set(\"ellipsis\", \"...\");\n\t * ```\n\t * ```JavaScript\n\t * label.set(\"ellipsis\", \"...\");\n\t * ```\n\t *\n\t *\n\t * @default \"…\"\n\t */\n\tellipsis?: string;\n\n\t/**\n\t * Minimum relative scale allowed for label when scaling down\n\t * when `oversizedBehavior` is set to `\"fit\"`.\n\t *\n\t * If fitting the label would require it to scale beyond `minScale` it would\n\t * be hidden instead.\n\t */\n\tminScale?: number;\n\n\t/**\n\t * If set to `true` the label will parse `text` for data placeholders and\n\t * will try to populate them with actual data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/#Data_placeholders} for more info\n\t */\n\tpopulateText?: boolean;\n\n\t/**\n\t * If set to `true`, will ignore in-line formatting blocks and will display\n\t * text exactly as it is.\n\t *\n\t * @default false\n\t */\n\tignoreFormatting?: boolean;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n\t/**\n\t * Maximum number of characters to allow in label.\n\t *\n\t * If the `text` is longer than `maxChars`, the text will be truncated\n\t * using the `breakWords` and `ellipsis` settings.\n\t * \n\t * @since 5.7.2\n\t */\n\tmaxChars?: number;\n\n\t// The following migh be supported some day:\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\t// leading?: number;\n\t// letterSpacing?: number;\n}\n\nexport interface ILabelPrivate extends IContainerPrivate {\n}\n\nexport interface ILabelEvents extends IContainerEvents {\n}\n\n/**\n * Creates a label with support for in-line styling and data bindings.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\n */\nexport class Label extends Container {\n\n\tdeclare public _settings: ILabelSettings;\n\tdeclare public _privateSettings: ILabelPrivate;\n\tdeclare public _events: ILabelEvents;\n\n\tprotected _text!: Text;\n\n\tprotected _textKeys: Array<string> = [\n\t\t\"text\",\n\t\t\"fill\",\n\t\t\"fillGradient\",\n\t\t\"fillOpacity\",\n\t\t\"textAlign\",\n\t\t\"fontFamily\",\n\t\t\"fontSize\",\n\t\t\"fontStyle\",\n\t\t\"fontWeight\",\n\t\t\"fontStyle\",\n\t\t\"fontVariant\",\n\t\t\"textDecoration\",\n\t\t\"shadowColor\",\n\t\t\"shadowBlur\",\n\t\t\"shadowOffsetX\",\n\t\t\"shadowOffsetY\",\n\t\t\"shadowOpacity\",\n\t\t// \"leading\",\n\t\t// \"letterSpacing\",\n\t\t\"lineHeight\",\n\t\t\"baselineRatio\",\n\t\t//\"padding\",\n\t\t// \"stroke\",\n\t\t// \"strokeThickness\",\n\t\t// \"trim\",\n\t\t// \"wordWrap\",\n\t\t\"direction\",\n\t\t\"textBaseline\",\n\t\t\"oversizedBehavior\",\n\t\t\"breakWords\",\n\t\t\"ellipsis\",\n\t\t\"minScale\",\n\t\t\"populateText\",\n\t\t\"role\",\n\t\t\"ignoreFormatting\",\n\t\t\"maxChars\",\n\t\t\"ariaLabel\"\n\t];\n\n\tpublic static className: string = \"Label\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Label.className]);\n\n\t/**\n\t * @ignore Text is not to be used directly\n\t */\n\tpublic get text(): Text {\n\t\treturn this._text;\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis._makeText();\n\n\t\t$array.each(this._textKeys, (property) => {\n\t\t\tconst propValue = this.get(property as any);\n\t\t\tif (propValue != undefined) {\n\t\t\t\tthis._text.set(property as any, propValue);\n\t\t\t}\n\t\t});\n\n\t\tif (this.get(\"html\", \"\") !== \"\") {\n\t\t\tthis._text.set(\"text\", \"\");\n\t\t}\n\n\t\tthis.onPrivate(\"maxWidth\", () => {\n\t\t\tthis._setMaxDimentions();\n\t\t});\n\n\t\tthis.onPrivate(\"maxHeight\", () => {\n\t\t\tthis._setMaxDimentions();\n\t\t});\n\t}\n\n\tpublic _makeText() {\n\t\tthis._text = this.children.push(Text.new(this._root, {}));\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst text = this._text;\n\n\t\t$array.each(this._textKeys, (property) => {\n\t\t\tthis._text.set(property as any, this.get(property as any));\n\t\t})\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isDirty(\"rotation\")) {\n\t\t\tthis._setMaxDimentions();\n\t\t}\n\n\t\t// Do not show regular text if HTML is used\n\t\tif (this.get(\"html\", \"\") !== \"\") {\n\t\t\ttext.set(\"text\", \"\");\n\t\t}\n\t\telse {\n\t\t\ttext.set(\"text\", this.get(\"text\"));\n\t\t\tthis._maybeUpdateHTMLColor();\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"fillGradient\")) {\n\t\t\tthis._maybeUpdateHTMLColor();\n\t\t}\n\n\t\tif (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\n\t\t\tconst textAlign = this.get(\"textAlign\");\n\t\t\tlet x: number | Percent | undefined;\n\t\t\tif (this.get(\"width\") != null) {\n\t\t\t\tif (textAlign == \"right\") {\n\t\t\t\t\tx = p100;\n\t\t\t\t}\n\t\t\t\telse if (textAlign == \"center\") {\n\t\t\t\t\tx = p50;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (textAlign == \"left\" || textAlign == \"start\") {\n\t\t\t\t\tx = this.get(\"paddingLeft\", 0);\n\t\t\t\t}\n\t\t\t\telse if (textAlign == \"right\" || textAlign == \"end\") {\n\t\t\t\t\tx = -this.get(\"paddingRight\", 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.set(\"x\", x);\n\t\t}\n\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tbackground.setPrivate(\"visible\", text._display.textVisible);\n\t\t}\n\t}\n\n\tprotected _maybeUpdateHTMLColor() {\n\t\tconst htmlElement = this.getPrivate(\"htmlElement\");\n\t\tif (htmlElement && this.get(\"fill\")) {\n\t\t\thtmlElement.style.color = this.get(\"fill\")!.toCSSHex();\n\t\t\t//@todo support gradient\n\t\t}\n\t}\n\n\tprotected _setMaxDimentions() {\n\t\tconst rotation = this.get(\"rotation\");\n\t\tconst vertical = rotation == 90 || rotation == 270 || rotation == -90;\n\t\tconst text = this._text;\n\n\t\tconst maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\ttext.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\n\t\t}\n\t\telse {\n\t\t\ttext.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\n\t\t}\n\n\t\tconst maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\ttext.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\n\t\t}\n\t\telse {\n\t\t\ttext.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\n\t\t}\n\n\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\ttext.markDirtyBounds();\n\t\t});\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tthis._markDirtyKey(\"text\");\n\t\tthis._markDirtyKey(\"html\");\n\t\tconst text = this._text;\n\t\tif (text.get(\"populateText\")) {\n\t\t\ttext.markDirtyText();\n\t\t}\n\t\tconst html = this.get(\"html\");\n\t\tif (html && html !== \"\") {\n\t\t\tthis._updateHTMLContent();\n\t\t}\n\t}\n\n\t/**\n\t * Returns text with populated placeholders and formatting if `populateText` is\n\t * set to `true`.\n\t *\n\t * @return Populated text\n\t */\n\tpublic getText(): string {\n\t\treturn this._text._getText();\n\t}\n\n\t/**\n\t * Returns \"aria-label\" text with populated placeholders and formatting\n\t * if `populateText` is set to `true`.\n\t *\n\t * @return Populated text\n\t */\n\tpublic getAccessibleText(): string {\n\t\treturn this._text._getAccessibleText();\n\t}\n}\n", "import * as $type from \"../util/Type\";\nimport * as $math from \"../util/Math\";\nimport * as $utils from \"../util/Utils\";\nimport { Rectangle, IRectangleSettings, IRectanglePrivate } from \"./Rectangle\";\n\n\nexport interface IRoundedRectangleSettings extends IRectangleSettings {\n\n\t/**\n\t * Radius of the top-left corner in pixels.\n\t */\n\tcornerRadiusTL?: number;\n\n\t/**\n\t * Radius of the top-right corner in pixels.\n\t */\n\tcornerRadiusTR?: number;\n\n\t/**\n\t * Radius of the botttom-right corner in pixels.\n\t */\n\tcornerRadiusBR?: number;\n\n\t/**\n\t * Radius of the bottom-left corner in pixels.\n\t */\n\tcornerRadiusBL?: number;\n\n}\n\nexport interface IRoundedRectanglePrivate extends IRectanglePrivate {\n}\n\n/**\n * Draws a rectangle with rounded corners.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class RoundedRectangle extends Rectangle {\n\n\tdeclare public _settings: IRoundedRectangleSettings;\n\tdeclare public _privateSettings: IRoundedRectanglePrivate;\n\n\tpublic static className: string = \"RoundedRectangle\";\n\tpublic static classNames: Array<string> = Rectangle.classNames.concat([RoundedRectangle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tlet width = this.width();\n\t\tlet height = this.height();\n\n\t\tlet w = width;\n\t\tlet h = height;\n\n\t\tlet wSign = w / Math.abs(width);\n\t\tlet hSign = h / Math.abs(height);\n\n\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\n\n\t\t\tlet minSide = Math.min(w, h) / 2;\n\n\t\t\tlet crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\n\t\t\tlet crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\n\t\t\tlet crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\n\t\t\tlet crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\n\n\t\t\tlet maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\n\n\t\t\tcrtl = $math.fitToRange(crtl, 0, maxcr);\n\t\t\tcrtr = $math.fitToRange(crtr, 0, maxcr);\n\t\t\tcrbr = $math.fitToRange(crbr, 0, maxcr);\n\t\t\tcrbl = $math.fitToRange(crbl, 0, maxcr);\n\n\t\t\tconst display = this._display;\n\t\t\tdisplay.moveTo(crtl * wSign, 0);\n\t\t\tdisplay.lineTo(w - crtr * wSign, 0);\n\t\t\tif (crtr > 0) {\n\t\t\t\tdisplay.arcTo(w, 0, w, crtr * hSign, crtr);\n\t\t\t}\n\t\t\tdisplay.lineTo(w, h - crbr * hSign);\n\t\t\tif (crbr > 0) {\n\t\t\t\tdisplay.arcTo(w, h, w - crbr * wSign, h, crbr);\n\t\t\t}\n\t\t\tdisplay.lineTo(crbl * wSign, h);\n\t\t\tif (crbl > 0) {\n\t\t\t\tdisplay.arcTo(0, h, 0, h - crbl * hSign, crbl);\n\t\t\t}\n\t\t\tdisplay.lineTo(0, crtl * hSign);\n\t\t\tif (crtl > 0) {\n\t\t\t\tdisplay.arcTo(0, 0, crtl * wSign, 0, crtl);\n\t\t\t}\n\t\t\tdisplay.closePath();\n\t\t}\n\t}\n}\n", "import type { Label } from \"../render/Label\";\nimport type { Graphics } from \"../render/Graphics\";\n\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IButtonSettings extends IContainerSettings {\n\n\t/**\n\t * A [[Label]] element for the button to show as a label.\n\t */\n\tlabel?: Label;\n\n\t/**\n\t * A [[Graphics]] element for the button to show as icon.\n\t */\n\ticon?: Graphics;\n\n}\n\nexport interface IButtonPrivate extends IContainerPrivate {\n}\n\n/**\n * Draws an interactive button.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\n * @important\n */\nexport class Button extends Container {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\n\n\t\tsuper._afterNew();\n\n\t\tif (!this._settings.background) {\n\t\t\tthis.set(\"background\", RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\n\t\t\t}));\n\t\t}\n\n\t\tthis.setPrivate(\"trustBounds\", true);\n\t}\n\n\tdeclare public _settings: IButtonSettings;\n\tdeclare public _privateSettings: IButtonPrivate;\n\n\tpublic static className: string = \"Button\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Button.className]);\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"icon\")) {\n\t\t\tconst previous = this._prevSettings.icon;\n\t\t\tconst icon = this.get(\"icon\")!;\n\t\t\tif (icon !== previous) {\n\t\t\t\tthis._disposeProperty(\"icon\");\n\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (icon) {\n\t\t\t\t\tthis.children.push(icon);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.icon = icon;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"label\")) {\n\t\t\tconst previous = this._prevSettings.label;\n\t\t\tconst label = this.get(\"label\")!;\n\t\t\tif (label !== previous) {\n\t\t\t\tthis._disposeProperty(\"label\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (label) {\n\t\t\t\t\tthis.children.push(label);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.label = label;\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { ICounterRef } from \"./Counter\";\nimport { List } from \"./List\";\nimport type { DataProcessor } from \"./DataProcessor\";\n\n/**\n * Defines interface for a [[List]] with a data processor.\n */\nexport interface IDataWithProcessor {\n\n\t/**\n\t * An optional processor for data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n\t */\n\tprocessor?: DataProcessor;\n\n}\n\n/**\n * A [[List]] that holds components data.\n * \n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\n */\nexport class ListData<T> extends List<T> implements ICounterRef, IDataWithProcessor {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic incrementRef(): void { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic decrementRef(): void { }\n\n\t/**\n\t * An optional processor for data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n\t */\n\tpublic processor?: DataProcessor;\n\n\tprotected _onPush(newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onPush(newValue);\n\t}\n\n\tprotected _onInsertIndex(index: number, newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onInsertIndex(index, newValue);\n\t}\n\n\tprotected _onSetIndex(index: number, oldValue: T, newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onSetIndex(index, oldValue, newValue);\n\t}\n}\n\n/**\n * @deprecated\n * @todo remove\n */\nexport class JsonData<T> implements ICounterRef, IDataWithProcessor {\n\tpublic incrementRef(): void { }\n\tpublic decrementRef(): void { }\n\n\tpublic processor?: DataProcessor;\n\tprotected _value: T;\n\n\tconstructor(value: T) {\n\t\tthis._value = value;\n\t}\n\n\t// TODO: how do we go about calling processor here?\n\n}\n", "import { Settings } from \"../util/Entity\";\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"./Container\";\nimport { ListData } from \"../util/Data\";\nimport * as $array from \"../util/Array\";\nimport * as $object from \"../util/Object\";\nimport type * as $ease from \"../util/Ease\";\nimport type { Bullet } from \"./Bullet\";\n\n/**\n * A base element that holds data bit (data item) for any [[Component]].\n */\nexport class DataItem<P extends IComponentDataItem> extends Settings {\n\tdeclare public _settings: P;\n\n\t/**\n\t * A data item's owener [[Component]].\n\t */\n\tpublic component: Component;\n\n\t/**\n\t * A reference to actual item in source data this item is based on.\n\t */\n\tpublic dataContext: unknown;\n\n\t/**\n\t * @todo requires description\n\t */\n\tpublic bullets: Array<Bullet> | undefined;\n\n\t/**\n\t * A set of \"open\" values.\n\t */\n\tpublic open: { [index: string]: any } | undefined;\n\n\t/**\n\t * A set of \"close\" values.\n\t */\n\tpublic close: { [index: string]: any } | undefined;\n\n\tconstructor(component: Component, dataContext: unknown, settings: P) {\n\t\tsuper(settings);\n\n\t\tthis.dataContext = dataContext;\n\t\tthis.component = component;\n\t\tthis._settings.visible = true;\n\t\tthis._checkDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty(): void {\n\t\tthis.component.markDirtyValues(this);\n\t}\n\n\tpublic _startAnimation(): void {\n\t\tthis.component._root._addAnimation(this);\n\t}\n\n\tprotected _animationTime(): number | null {\n\t\treturn this.component._root.animationTime;\n\t}\n\n\tprotected _dispose() {\n\t\tif (this.component) {\n\t\t\tthis.component.disposeDataItem(this);\n\t\t}\n\t\tsuper._dispose();\n\t}\n\n\t/**\n\t * Shows a data item that's currently hidden.\n\t */\n\tpublic show(duration?: number) {\n\t\tthis.setRaw(\"visible\", true);\n\t\tif (this.component) {\n\t\t\tthis.component.showDataItem(this, duration);\n\t\t}\n\t}\n\n\t/**\n\t * Hides a data item that's currently visible.\n\t */\n\tpublic hide(duration?: number) {\n\t\tthis.setRaw(\"visible\", false);\n\t\tif (this.component) {\n\t\t\tthis.component.hideDataItem(this, duration);\n\t\t}\n\t}\n\n\tpublic isHidden() {\n\t\treturn !this.get(\"visible\");\n\t}\n}\n\n\nexport interface IComponentDataItem {\n\tvisible?: boolean;\n}\n\nexport interface IComponentSettings extends IContainerSettings {\n\n\t/**\n\t * A duration of the animation from one setting value to another, in\n\t * milliseconds.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_data_values} for more info\n\t */\n\tinterpolationDuration?: number;\n\n\t/**\n\t * Easing function to use for cross setting value animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\tinterpolationEasing?: $ease.Easing;\n\n}\n\nexport interface IComponentPrivate extends IContainerPrivate {\n}\n\nexport interface IComponentEvents extends IContainerEvents {\n\tdatavalidated: {}\n}\n\n/**\n * A base class for elements that make use of data.\n */\nexport abstract class Component extends Container {\n\tpublic static className: string = \"Component\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Component.className]);\n\n\tdeclare public _settings: IComponentSettings;\n\tdeclare public _privateSettings: IComponentPrivate;\n\tdeclare public _dataItemSettings: IComponentDataItem;\n\tdeclare public _events: IComponentEvents;\n\n\tprotected _data: ListData<unknown> = new ListData();\n\n\tprotected _dataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\tpublic _mainDataItems = this._dataItems;\n\n\tprotected valueFields: Array<string> = [];\n\tprotected fields: Array<string> = [\"id\"];\n\n\tprotected _valueFields!: Array<string>;\n\tprotected _valueFieldsF!: { [index: string]: { fieldKey: string, workingKey: string } };\n\n\tprotected _fields!: Array<string>;\n\tprotected _fieldsF!: { [index: string]: string };\n\n\tpublic _valuesDirty: boolean = false;\n\n\tprotected _dataChanged: boolean = false;\n\n\tprotected _dataGrouped = false;\n\n\t/**\n\t * Indicates if the component has already been initialized.\n\t */\n\tpublic inited: boolean = false;\n\n\t/**\n\t * Component's data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\n\t */\n\tpublic set data(data: ListData<unknown>) {\n\t\tdata.incrementRef();\n\t\tthis._data.decrementRef();\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @return  Data\n\t */\n\tpublic get data(): ListData<unknown> {\n\t\treturn this._data;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis._data.decrementRef();\n\t}\n\n\tprotected _onDataClear() {\n\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis._data.incrementRef();\n\t\tthis._updateFields();\n\n\t\tthis._disposers.push(this.data.events.onAll((change) => {\n\t\t\tconst dataItems = this._mainDataItems;\n\t\t\tthis.markDirtyValues();\n\t\t\tthis._markDirtyGroup();\n\t\t\tthis._dataChanged = true;\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t});\n\n\t\t\t\tdataItems.length = 0;\n\t\t\t\tthis._onDataClear();\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tconst dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\n\t\t\t\tdataItems.push(dataItem);\n\t\t\t\tthis.processDataItem(dataItem);\n\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tconst dataItem = dataItems[change.index];\n\t\t\t\tconst properties = this._makeDataItem(change.newValue);\n\t\t\t\tif (dataItem.bullets && dataItem.bullets.length == 0) {\n\t\t\t\t\tdataItem.bullets = undefined;\n\t\t\t\t}\n\n\t\t\t\t$object.keys(properties).forEach((key) => {\n\t\t\t\t\tdataItem.animate({\n\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\tto: properties[key],\n\t\t\t\t\t\tduration: this.get(\"interpolationDuration\", 0),\n\t\t\t\t\t\teasing: this.get(\"interpolationEasing\"),\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tdataItem.dataContext = change.newValue;\n\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tconst dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\n\t\t\t\tdataItems.splice(change.index, 0, dataItem);\n\t\t\t\tthis.processDataItem(dataItem);\n\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tconst dataItem = dataItems[change.index];\n\t\t\t\tdataItem.dispose();\n\t\t\t\tdataItems.splice(change.index, 1);\n\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tconst dataItem = dataItems[change.oldIndex];\n\t\t\t\tdataItems.splice(change.oldIndex, 1);\n\t\t\t\tdataItems.splice(change.newIndex, 0, dataItem);\n\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\n\t\t\tthis._afterDataChange();\n\t\t}));\n\t}\n\n\tprotected _updateFields() {\n\t\tif (this.valueFields) {\n\t\t\tthis._valueFields = [];\n\t\t\tthis._valueFieldsF = {};\n\n\t\t\t$array.each(this.valueFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueFields.push(<any>key);\n\t\t\t\t\tthis._valueFieldsF[key as string] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.fields) {\n\t\t\tthis._fields = [];\n\t\t\tthis._fieldsF = {};\n\n\t\t\t$array.each(this.fields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._fields.push(<any>key);\n\t\t\t\t\tthis._fieldsF[key as string] = key + \"Field\";\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * A list of component's data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get dataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._dataItems;\n\t}\n\n\tprotected processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) { }\n\n\n\tpublic _makeDataItem(data: unknown): this[\"_dataItemSettings\"] {\n\t\t//const output: this[\"_dataItemSettings\"] = {};\n\t\tconst output: any = {}; // temporary to solve error\n\t\tif (this._valueFields) {\n\t\t\t$array.each(this._valueFields, (key) => {\n\t\t\t\tconst field = this.get(<any>(this._valueFieldsF[key].fieldKey));\n\t\t\t\toutput[key] = (data as any)[field];\n\n\t\t\t\toutput[this._valueFieldsF[key].workingKey] = output[key];\n\t\t\t});\n\t\t}\n\t\tif (this._fields) {\n\t\t\t$array.each(this._fields, (key) => {\n\t\t\t\tconst field = this.get(<any>(this._fieldsF[key]));\n\t\t\t\toutput[key] = (data as any)[field];\n\t\t\t});\n\t\t}\n\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a new data item and processes it.\n\t * \n\t * @param   data         Data item settings\n\t * @param   dataContext  Data context\n\t * @return               New data item\n\t */\n\tpublic makeDataItem(data: this[\"_dataItemSettings\"], dataContext?: any): DataItem<this[\"_dataItemSettings\"]> {\n\t\tlet dataItem = new DataItem(this, dataContext, data);\n\t\tthis.processDataItem(dataItem);\n\t\treturn dataItem;\n\t}\n\n\t/**\n\t * Adds new explicit data item to series.\n\t * \n\t * @param   data         Data item settings\n\t * @param   dataContext  Data context\n\t * @return               New data item\n\t */\n\tpublic pushDataItem(data: this[\"_dataItemSettings\"], dataContext?: any): DataItem<this[\"_dataItemSettings\"]> {\n\t\tconst dataItem = this.makeDataItem(data, dataContext);\n\t\tthis._mainDataItems.push(dataItem);\n\t\treturn dataItem;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * Shows component's data item.\n\t *\n\t * @param   dataItem   Data item\n\t * @param   _duration  Animation duration in milliseconds\n\t * @return             Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, _duration?: number): Promise<void> {\n\t\tdataItem.set(\"visible\", true);\n\t}\n\n\t/**\n\t * Hides component's data item.\n\t *\n\t * @param   dataItem   Data item\n\t * @param   _duration  Animation duration in milliseconds\n\t * @return             Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, _duration?: number): Promise<void> {\n\t\tdataItem.set(\"visible\", false);\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._valuesDirty = false;\n\t}\n\n\tprotected _afterDataChange() {\n\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._dataChanged) {\n\t\t\tconst type = \"datavalidated\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t\tthis._dataChanged = false;\n\t\t}\n\n\t\tthis.inited = true;\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.markDirty();\n\t\tthis._valuesDirty = true;\n\t}\n\n\tpublic _markDirtyGroup() {\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySize() {\n\t\tthis._sizeDirty = true;\n\t\tthis.markDirty();\n\t}\n\n}\n", "import type { Time } from \"../../core/util/Animation\";\r\nimport type { Animation } from \"../../core/util/Entity\";\r\nimport type { IDisposer } from \"../../core/util/Disposer\";\r\nimport type { IPoint } from \"../../core/util/IPoint\";\r\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\r\n\r\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\r\nimport { p100 } from \"../../core/util/Percent\";\r\nimport { Rectangle } from \"../../core/render/Rectangle\";\r\nimport { color } from \"../../core/util/Color\";\r\n\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $type from \"../../core/util/Type\";\r\n\r\nexport interface IZoomableContainerSettings extends IContainerSettings {\r\n\r\n\t/**\r\n\t * Maximum zoom-in level.\r\n\t * \r\n\t * @default 32\r\n\t */\r\n\tmaxZoomLevel?: number;\r\n\r\n\t/**\r\n\t * Maximum zoom-out level.\r\n\t * \r\n\t * @default 1\r\n\t */\r\n\tminZoomLevel?: number;\r\n\r\n\t/**\r\n\t * Zoom level increase/decrease factor with each zoom action.\r\n\t * \r\n\t * @defult 2\r\n\t */\r\n\tzoomStep?: number;\r\n\r\n\t/**\r\n\t * Pinch-zooming is enabled on touch devices.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tpinchZoom?: boolean;\r\n\r\n\t/**\r\n\t * Animation duration (ms) for zoom animations.\r\n\t *\r\n\t * @default 600\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * Easing function to use for zoom animations.\r\n\t * \r\n\t * @default am5.ease.out(am5.ease.cubic)\r\n\t */\r\n\tanimationEasing?: (t: Time) => Time;\r\n\r\n\t/**\r\n\t * How much of a content can go outside the viewport.\r\n\t *\r\n\t * @default 0.4\r\n\t */\r\n\tmaxPanOut?: number;\r\n\r\n}\r\n\r\nexport interface IZoomableContainerPrivate extends IContainerPrivate {\r\n}\r\n\r\nexport interface IZoomableContainerEvents extends IContainerEvents {\r\n}\r\n\r\n/**\r\n * A version of [[Container]] which adds zooming capabilities.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomableContainer extends Container {\r\n\tpublic static className: string = \"ZoomableContainer\";\r\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomableContainer.className]);\r\n\r\n\tdeclare public _settings: IZoomableContainerSettings;\r\n\tdeclare public _privateSettings: IZoomableContainerPrivate;\r\n\tdeclare public _events: IZoomableContainerEvents;\r\n\r\n\tprotected _za?: Animation<this[\"_settings\"][\"scale\"]>;\r\n\tprotected _txa?: Animation<this[\"_settings\"][\"x\"]>;\r\n\tprotected _tya?: Animation<this[\"_settings\"][\"y\"]>;\r\n\r\n\r\n\tprotected _movePoints: { [index: number]: IPoint } = {};\r\n\tprotected _downScale: number = 1;\r\n\tprotected _downX: number = 0;\r\n\tprotected _downY: number = 0;\r\n\r\n\tprotected _pinchDP?: IDisposer;\r\n\r\n\t/**\r\n\t * All elements must be added to `contents.children` instead of `children` of\r\n\t * [[ZoomableContainer]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Zoomable_container} for more info\r\n\t */\r\n\tpublic contents = this.children.push(Container.new(this._root, {\r\n\t\twidth: p100,\r\n\t\theight: p100,\r\n\t\tx: 0,\r\n\t\ty: 0,\r\n\t\tdraggable: true,\r\n\t\tbackground: Rectangle.new(this._root, {\r\n\t\t\tfill: color(0xffffff),\r\n\t\t\tfillOpacity: 0\r\n\t\t})\r\n\t}))\r\n\r\n\tprotected _wheelDp: IDisposer | undefined;\r\n\r\n\tprotected _afterNew(): void {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst events = this.contents.events;\r\n\r\n\t\tthis._disposers.push(events.on(\"pointerdown\", (event) => {\r\n\t\t\tthis._handleThisDown(event);\r\n\t\t}));\r\n\r\n\t\tthis._disposers.push(events.on(\"globalpointerup\", (event) => {\r\n\t\t\tthis._handleThisUp(event);\r\n\t\t}));\r\n\r\n\t\tthis._disposers.push(events.on(\"globalpointermove\", (event) => {\r\n\t\t\tthis._handleThisMove(event);\r\n\t\t}));\r\n\r\n\t\tconst bg = this.contents.get(\"background\");\r\n\t\tif (bg) {\r\n\t\t\tbg.adapters.add(\"width\", (width) => {\r\n\t\t\t\treturn Number(width) * 20;\r\n\t\t\t})\r\n\t\t\tbg.adapters.add(\"height\", (height) => {\r\n\t\t\t\treturn Number(height) * 20;\r\n\t\t\t})\r\n\t\t\tbg.adapters.add(\"x\", (x) => {\r\n\t\t\t\treturn Number(x) - bg.width() / 2;\r\n\t\t\t})\r\n\t\t\tbg.adapters.add(\"y\", (y) => {\r\n\t\t\t\treturn Number(y) - bg.height() / 2;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst contents = this.contents;\r\n\r\n\t\tcontents.adapters.add(\"x\", (x) => {\r\n\t\t\tconst scale = contents.get(\"scale\", 1);\r\n\t\t\tif($type.isNumber(x) && scale >= 1){\r\n\t\t\t\tlet maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n\t\t\t\tlet w = contents.width();\r\n\r\n\t\t\t\tx = Math.min(w * maxPanOut, x);\r\n\t\t\t\tx = Math.max(this.width() - w * scale * (1 + maxPanOut), x);\r\n\t\t\t}\r\n\t\t\treturn x;\r\n\t\t})\r\n\r\n\t\tcontents.adapters.add(\"y\", (y) => {\r\n\t\t\tconst scale = contents.get(\"scale\", 1);\r\n\t\t\tif($type.isNumber(y) && scale >= 1){\r\n\t\t\t\tlet maxPanOut = this.get(\"maxPanOut\", 0.4);\r\n\t\t\t\tlet h = contents.height();\r\n\r\n\t\t\t\ty = Math.min(h * maxPanOut, y);\r\n\t\t\t\ty = Math.max(this.height() - h * scale * (1 + maxPanOut), y);\r\n\t\t\t}\r\n\t\t\treturn y;\r\n\t\t})\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\t\tif (this.isDirty(\"wheelable\")) {\r\n\t\t\tthis._handleSetWheel();\r\n\t\t}\r\n\r\n\t\tthis.contents._display.cancelTouch = this.get(\"pinchZoom\", false);\r\n\t}\r\n\r\n\r\n\tprotected _handleSetWheel() {\r\n\t\tif (this.get(\"wheelable\")) {\r\n\t\t\tif (this._wheelDp) {\r\n\t\t\t\tthis._wheelDp.dispose();\r\n\t\t\t}\r\n\r\n\t\t\tthis._wheelDp = this.events.on(\"wheel\", (event) => {\r\n\t\t\t\tconst wheelEvent = event.originalEvent;\r\n\r\n\t\t\t\t// Ignore wheel event if it is happening on a non-ZoomableContainer element, e.g. if\r\n\t\t\t\t// some page element is over the ZoomableContainer.\r\n\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\r\n\t\t\t\t\twheelEvent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst point = this.toLocal(event.point);\r\n\r\n\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaY, point);\r\n\t\t\t});\r\n\r\n\t\t\tthis._disposers.push(this._wheelDp);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._wheelDp) {\r\n\t\t\t\tthis._wheelDp.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleWheelZoom(delta: number, point: IPoint) {\r\n\t\tlet step = this.get(\"zoomStep\", 2);\r\n\t\tlet zoomLevel = this.contents.get(\"scale\", 1);\r\n\r\n\t\tlet newZoomLevel = zoomLevel;\r\n\t\tif (delta > 0) {\r\n\t\t\tnewZoomLevel = zoomLevel / step;\r\n\t\t}\r\n\t\telse if (delta < 0) {\r\n\t\t\tnewZoomLevel = zoomLevel * step;\r\n\t\t}\r\n\r\n\t\tif (newZoomLevel != zoomLevel) {\r\n\t\t\tthis.zoomToPoint(point, newZoomLevel)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to specific X/Y point.\r\n\t * \r\n\t * @param   point  Center point\r\n\t * @param   level  Zoom level\r\n\t * @return         Zoom Animation object\r\n\t */\r\n\tpublic zoomToPoint(point: IPoint, level: number): Animation<this[\"_settings\"][\"scale\"]> | undefined {\r\n\t\tif (level) {\r\n\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\r\n\t\t}\r\n\r\n\t\tconst zoomLevel = this.contents.get(\"scale\", 1);\r\n\r\n\t\tlet x = point.x;\r\n\t\tlet y = point.y;\r\n\r\n\t\tlet cx = x;\r\n\t\tlet cy = y;\r\n\r\n\t\tconst contents = this.contents;\r\n\r\n\t\tlet tx = contents.x();\r\n\t\tlet ty = contents.y();\r\n\r\n\t\tlet xx = cx - ((x - tx) / zoomLevel * level);\r\n\t\tlet yy = cy - ((y - ty) / zoomLevel * level);\r\n\r\n\t\tthis._animateTo(xx, yy, level);\r\n\r\n\t\treturn this._za;\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the container contents in by `zoomStep`.\r\n\t * \r\n\t * @return Zoom Animation object\r\n\t */\r\n\tpublic zoomIn(): Animation<this[\"_settings\"][\"scale\"]> | undefined {\r\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.contents.get(\"scale\", 1) * this.get(\"zoomStep\", 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the container contents out by `zoomStep`.\r\n\t * \r\n\t * @return Zoom Animation object\r\n\t */\r\n\tpublic zoomOut(): Animation<this[\"_settings\"][\"scale\"]> | undefined {\r\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.contents.get(\"scale\", 1) / this.get(\"zoomStep\", 2));\r\n\t}\r\n\r\n\t/**\r\n\t * Fully zooms out the container contents.\r\n\t * \r\n\t * @return Zoom Animation object\r\n\t */\r\n\tpublic goHome() {\r\n\t\treturn this._animateTo(0, 0, 1);\r\n\t}\r\n\r\n\tprotected _animateTo(x: number, y: number, scale: number) {\r\n\t\tconst duration = this.get(\"animationDuration\", 0);\r\n\t\tconst easing = this.get(\"animationEasing\");\r\n\r\n\t\tconst contents = this.contents;\r\n\t\tthis._txa = contents.animate({ key: \"x\", to: x, duration: duration, easing: easing });\r\n\t\tthis._tya = contents.animate({ key: \"y\", to: y, duration: duration, easing: easing });\r\n\t\tthis._za = contents.animate({ key: \"scale\", to: scale, duration: duration, easing: easing });\r\n\t}\r\n\r\n\r\n\tprotected _handleThisUp(_event: ISpritePointerEvent) {\r\n\t\tthis._downPoints = {}\r\n\t}\r\n\r\n\tprotected _handleThisDown(event: ISpritePointerEvent) {\r\n\r\n\t\tconst contents = this.contents;\r\n\r\n\t\tthis._downScale = contents.get(\"scale\", 1);\r\n\t\tconst downPoints = contents._downPoints;\r\n\r\n\t\tlet count = $object.keys(downPoints).length;\r\n\r\n\t\tif (count == 1) {\r\n\t\t\t// workaround to solve a problem when events are added to some children of chart container (rotation stops working)\r\n\t\t\tlet downPoint = downPoints[1];\r\n\t\t\tif (!downPoint) {\r\n\t\t\t\tdownPoint = downPoints[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\r\n\t\t\t\tcount = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (count > 0) {\r\n\t\t\tthis._downX = contents.x();\r\n\t\t\tthis._downY = contents.y();\r\n\r\n\t\t\tconst downId = contents._getDownPointId();\r\n\t\t\tif (downId) {\r\n\t\t\t\tlet movePoint = this._movePoints[downId];\r\n\t\t\t\tif (movePoint) {\r\n\t\t\t\t\tcontents._downPoints[downId] = movePoint;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _handleThisMove(event: ISpritePointerEvent) {\r\n\t\tconst originalEvent = event.originalEvent as any;\r\n\r\n\t\tconst pointerId = originalEvent.pointerId;\r\n\r\n\t\tif (this.get(\"pinchZoom\")) {\r\n\t\t\tif (pointerId) {\r\n\t\t\t\tthis._movePoints[pointerId] = event.point;\r\n\r\n\t\t\t\tif ($object.keys(this.contents._downPoints).length > 1) {\r\n\t\t\t\t\tthis._handlePinch();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePinch() {\r\n\t\tlet i = 0;\r\n\t\tlet downPoints: Array<IPoint> = [];\r\n\t\tlet movePoints: Array<IPoint> = [];\r\n\r\n\t\t$object.each(this.contents._downPoints, (k, point) => {\r\n\t\t\tdownPoints[i] = point;\r\n\t\t\tlet movePoint = this._movePoints[k];\r\n\t\t\tif (movePoint) {\r\n\t\t\t\tmovePoints[i] = movePoint;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t});\r\n\r\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\r\n\r\n\t\t\tthis.contents._isDragging = false;\r\n\r\n\t\t\tlet downPoint0 = downPoints[0];\r\n\t\t\tlet downPoint1 = downPoints[1];\r\n\r\n\t\t\tlet movePoint0 = movePoints[0];\r\n\t\t\tlet movePoint1 = movePoints[1];\r\n\r\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\r\n\t\t\t\tdownPoint0 = this.toLocal(downPoint0);\r\n\t\t\t\tdownPoint1 = this.toLocal(downPoint1);\r\n\r\n\t\t\t\tmovePoint0 = this.toLocal(movePoint0);\r\n\t\t\t\tmovePoint1 = this.toLocal(movePoint1);\r\n\r\n\t\t\t\tlet initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\r\n\t\t\t\tlet currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\r\n\r\n\t\t\t\tlet level = currentDistance / initialDistance * this._downScale;\r\n\t\t\t\tlet moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\r\n\t\t\t\tlet downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\r\n\r\n\t\t\t\tlet tx = this._downX || 0;\r\n\t\t\t\tlet ty = this._downY || 0;\r\n\r\n\t\t\t\tlet zoomLevel = this._downScale;\r\n\r\n\t\t\t\tlet xx = moveCenter.x - (- tx + downCenter.x) / zoomLevel * level;\r\n\t\t\t\tlet yy = moveCenter.y - (- ty + downCenter.y) / zoomLevel * level;\r\n\r\n\t\t\t\tthis.contents.setAll({\r\n\t\t\t\t\tx: xx,\r\n\t\t\t\t\ty: yy,\r\n\t\t\t\t\tscale: level\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}", "/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport * as $type from \"./Type\";\nimport * as $utils from \"./Utils\";\nimport type { Timezone } from \"./Timezone\";\nimport type { Root } from \"../Root\";\n\nexport type TimeUnit = \"millisecond\" | \"second\" | \"minute\" | \"hour\" | \"day\" | \"week\" | \"month\" | \"year\";\n\nexport interface ITimeInterval {\n\ttimeUnit: TimeUnit;\n\tcount: number;\n}\n\n\n/**\n * Returns a `Promise` which can be used to execute code after number of\n * milliseconds.\n *\n * @param   ms  Sleep duration in ms\n * @return      Promise\n */\nexport function sleep(ms: number): Promise<void> {\n\treturn new Promise((resolve, _reject) => {\n\t\tsetTimeout(resolve, ms);\n\t});\n}\n\n\n/**\n * Maps time period names to their numeric representations in milliseconds.\n *\n * @ignore Exclude from docs\n */\nexport let timeUnitDurations: { [Key in TimeUnit]: number } = {\n\tmillisecond: 1,\n\tsecond: 1000,\n\tminute: 60000,\n\thour: 3600000,\n\tday: 86400000,\n\tweek: 604800000,\n\tmonth: 365.242 / 12 * 86400000,\n\tyear: 31536000000\n};\n\n/**\n * Returns the next time unit that goes after source `unit`.\n *\n * E.g. \"hour\" is the next unit after \"minute\", etc.\n *\n * @ignore Exclude from docs\n * @param unit  Source time unit\n * @return Next time unit\n */\nexport function getNextUnit(unit: TimeUnit): TimeUnit | undefined {\n\tswitch (unit) {\n\t\tcase \"year\":\n\t\t\treturn;\n\t\tcase \"month\":\n\t\t\treturn \"year\";\n\n\t\tcase \"week\":\n\t\t\treturn \"month\";\n\n\t\tcase \"day\":\n\t\t\treturn \"month\"; // not a mistake\n\n\t\tcase \"hour\":\n\t\t\treturn \"day\";\n\n\t\tcase \"minute\":\n\t\t\treturn \"hour\";\n\n\t\tcase \"second\":\n\t\t\treturn \"minute\"\n\n\t\tcase \"millisecond\":\n\t\t\treturn \"second\";\n\t}\n}\n\n/**\n * Returns number of milliseconds in the `count` of time `unit`.\n *\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\n * \"month\", and \"year\".\n *\n * @param unit   Time unit\n * @param count  Number of units\n * @return Milliseconds\n */\nexport function getDuration(unit: TimeUnit, count?: number): number {\n\tif (count == null) {\n\t\tcount = 1;\n\t}\n\treturn timeUnitDurations[unit] * count;\n}\n\n/**\n * @ignore\n */\nexport function getIntervalDuration(interval: ITimeInterval | undefined) {\n\tif (interval) {\n\t\treturn timeUnitDurations[interval.timeUnit] * interval.count;\n\t}\n\treturn 0;\n}\n\n\nexport function getDateIntervalDuration(interval: ITimeInterval, date: Date, firstDateOfWeek?: number, utc?: boolean, timezone?: Timezone) {\n\tconst unit = interval.timeUnit;\n\tconst count = interval.count;\n\tif (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\n\t\treturn timeUnitDurations[interval.timeUnit] * interval.count;\n\t}\n\telse {\n\t\tconst firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\n\t\tlet lastTime = firstTime + count * getDuration(unit) * 1.05;\n\t\tlastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\n\t\treturn lastTime - firstTime;\n\t}\n}\n\n/**\n * Returns current `Date` object.\n *\n * @return Current date\n */\nexport function now(): Date {\n\treturn new Date();\n}\n\n/**\n * Returns current timestamp.\n *\n * @return Current timestamp\n */\nexport function getTime(): number {\n\treturn now().getTime();\n}\n\n/**\n * Returns a copy of the `Date` object.\n *\n * @param date  Source date\n * @return Copy\n */\nexport function copy(date: Date): Date {\n\treturn new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\n}\n\n/**\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\n * represent a \"range\" of time, rather the same time date.\n *\n * @param timeOne  timestamp\n * @param timeTwo  timestamp\n * @param unit     Time unit to check\n * @return Range?\n */\nexport function checkChange(timeOne: number, timeTwo: number, unit: TimeUnit, utc?: boolean, timezone?: Timezone): boolean {\n\t// quick\n\tif ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\n\t\treturn true;\n\t}\n\n\tlet dateOne = new Date(timeOne);\n\tlet dateTwo = new Date(timeTwo);\n\n\tif (timezone) {\n\t\tdateOne = timezone.convertLocal(dateOne);\n\t\tdateTwo = timezone.convertLocal(dateTwo);\n\t}\n\n\tlet timeZoneOffset1 = 0;\n\tlet timeZoneOffset2 = 0;\n\n\tif (!utc && unit != \"millisecond\") {\n\t\ttimeZoneOffset1 = dateOne.getTimezoneOffset();\n\t\tdateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\n\n\t\ttimeZoneOffset2 = dateTwo.getTimezoneOffset();\n\t\tdateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\n\t}\n\n\tlet changed = false;\n\tswitch (unit) {\n\t\tcase \"year\":\n\t\t\tif (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"month\":\n\t\t\tif (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\telse if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"day\":\n\t\t\tif (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\telse if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase \"hour\":\n\t\t\tif (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"minute\":\n\t\t\tif (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase \"second\":\n\t\t\tif (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"millisecond\":\n\t\t\tif (dateOne.getTime() != dateTwo.getTime()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tif (changed) {\n\t\treturn changed;\n\t}\n\n\tlet nextUnit = getNextUnit(unit);\n\tif (nextUnit) {\n\t\treturn checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\n\n/**\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\n *\n * @param date   Source date\n * @param unit   Time unit\n * @param count  Number of units to add\n * @return Modified date\n */\nexport function add(date: Date, unit: TimeUnit, count: number, utc?: boolean, timezone?: Timezone): Date {\n\tlet timeZoneOffset = 0;\n\n\tif (!utc && unit != \"millisecond\") {\n\t\ttimeZoneOffset = date.getTimezoneOffset();\n\n\t\tif (timezone) {\n\t\t\ttimeZoneOffset -= timezone.offsetUTC(date);\n\t\t}\n\n\t\tdate.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\n\t}\n\n\n\tswitch (unit) {\n\t\tcase \"day\":\n\t\t\tlet day: number = date.getUTCDate();\n\t\t\tdate.setUTCDate(day + count);\n\t\t\tbreak;\n\n\t\tcase \"second\":\n\t\t\tlet seconds: number = date.getUTCSeconds();\n\t\t\tdate.setUTCSeconds(seconds + count);\n\t\t\tbreak;\n\n\t\tcase \"millisecond\":\n\t\t\tlet milliseconds: number = date.getUTCMilliseconds();\n\t\t\tdate.setUTCMilliseconds(milliseconds + count);\n\t\t\tbreak;\n\n\t\tcase \"hour\":\n\t\t\tlet hours: number = date.getUTCHours();\n\t\t\tdate.setUTCHours(hours + count);\n\t\t\tbreak;\n\n\t\tcase \"minute\":\n\t\t\tlet minutes: number = date.getUTCMinutes();\n\t\t\tdate.setUTCMinutes(minutes + count);\n\t\t\tbreak;\n\n\t\tcase \"year\":\n\t\t\tlet year: number = date.getUTCFullYear();\n\t\t\tdate.setUTCFullYear(year + count);\n\t\t\tbreak;\n\n\t\tcase \"month\":\n\t\t\tconst endDays = date.getUTCDate();\n\t\t\tconst startDays = new Date(date.getUTCFullYear(), date.getUTCMonth(), 0).getUTCDate();\n\t\t\tlet month: number = date.getUTCMonth();\n\t\t\tif (endDays > startDays) {\n\t\t\t\tdate.setUTCMonth(month + count, startDays);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdate.setUTCMonth(month + count);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"week\":\n\t\t\tlet wday: number = date.getUTCDate();\n\t\t\tdate.setUTCDate(wday + count * 7);\n\t\t\tbreak;\n\t}\n\n\n\tif (!utc && unit != \"millisecond\") {\n\t\tdate.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\n\t\tif (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\n\n\t\t\tlet newTimeZoneOffset = date.getTimezoneOffset();\n\n\t\t\tif (timezone) {\n\t\t\t\tnewTimeZoneOffset += timezone.offsetUTC(date);\n\t\t\t}\n\n\t\t\tif (newTimeZoneOffset != timeZoneOffset) {\n\t\t\t\tlet diff = newTimeZoneOffset - timeZoneOffset;\n\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + diff);\n\n\t\t\t\t// solves issues if new time falls back to old time zone\n\t\t\t\tif (date.getTimezoneOffset() != newTimeZoneOffset) {\n\t\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() - diff);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn date;\n}\n\n/**\n * @ignore\n */\nexport function roun(time: number, unit: TimeUnit, count: number, root: Root, firstTime?: number): number {\n\tlet firstDate;\n\tif (firstTime != null) {\n\t\tfirstDate = new Date(firstTime);\n\t}\n\treturn round(new Date(time), unit, count, root.locale.firstDayOfWeek, root.utc, firstDate, root.timezone).getTime();\n}\n\n\n/**\n * \"Rounds\" the date to specific time unit.\n *\n * @param date             Source date\n * @param unit             Time unit\n * @param count            Number of units to round to\n * @param firstDateOfWeek  First day of week\n * @param utc              Use UTC timezone\n * @param firstDate        First date to round to\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\n * @param timezone         Use specific named timezone when rounding\n * @return New date\n */\nexport function round(date: Date, unit: TimeUnit, count: number, firstDateOfWeek?: number, utc?: boolean, firstDate?: Date, timezone?: Timezone): Date {\n\tif (!timezone || utc) {\n\n\t\tlet timeZoneOffset = 0;\n\n\t\tif (!utc && unit != \"millisecond\") {\n\t\t\ttimeZoneOffset = date.getTimezoneOffset();\n\t\t\tdate.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\n\t\t}\n\n\t\tswitch (unit) {\n\n\t\t\tcase \"day\":\n\t\t\t\tlet day = date.getUTCDate();\n\n\t\t\t\tif (count > 1) {\n\t\t\t\t\t//\tday = Math.floor(day / count) * count;\n\t\t\t\t\tif (firstDate) {\n\t\t\t\t\t\tfirstDate = round(firstDate, \"day\", 1);\n\n\t\t\t\t\t\tlet difference = date.getTime() - firstDate.getTime();\n\t\t\t\t\t\tlet unitCount = Math.floor(difference / getDuration(\"day\") / count);\n\t\t\t\t\t\tlet duration = getDuration(\"day\", unitCount * count);\n\t\t\t\t\t\tdate.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdate.setUTCDate(day);\n\t\t\t\t}\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"second\":\n\t\t\t\tlet seconds = date.getUTCSeconds();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tseconds = Math.floor(seconds / count) * count;\n\t\t\t\t}\n\t\t\t\tdate.setUTCSeconds(seconds, 0);\n\t\t\t\tbreak;\n\n\t\t\tcase \"millisecond\":\n\t\t\t\tif (count == 1) {\n\t\t\t\t\treturn date; // much better for perf!\n\t\t\t\t}\n\n\t\t\t\tlet milliseconds = date.getUTCMilliseconds();\n\t\t\t\tmilliseconds = Math.floor(milliseconds / count) * count;\n\t\t\t\tdate.setUTCMilliseconds(milliseconds);\n\t\t\t\tbreak;\n\n\t\t\tcase \"hour\":\n\n\t\t\t\tlet hours = date.getUTCHours();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\thours = Math.floor(hours / count) * count;\n\t\t\t\t}\n\t\t\t\tdate.setUTCHours(hours, 0, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"minute\":\n\n\t\t\t\tlet minutes = date.getUTCMinutes();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tminutes = Math.floor(minutes / count) * count;\n\t\t\t\t}\n\n\t\t\t\tdate.setUTCMinutes(minutes, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"month\":\n\n\t\t\t\tlet month = date.getUTCMonth();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tmonth = Math.floor(month / count) * count;\n\t\t\t\t}\n\n\t\t\t\tdate.setUTCMonth(month, 1);\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"year\":\n\n\t\t\t\tlet year = date.getUTCFullYear();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tyear = Math.floor(year / count) * count;\n\t\t\t\t}\n\t\t\t\tdate.setUTCFullYear(year, 0, 1);\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\t\t\t\tbreak;\n\n\t\t\tcase \"week\":\n\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tif (firstDate) {\n\t\t\t\t\t\tfirstDate = round(firstDate, \"week\", 1);\n\n\t\t\t\t\t\tlet difference = date.getTime() - firstDate.getTime();\n\t\t\t\t\t\tlet unitCount = Math.floor(difference / getDuration(\"week\") / count);\n\t\t\t\t\t\tlet duration = getDuration(\"week\", unitCount * count);\n\n\t\t\t\t\t\tdate.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet wday = date.getUTCDate();\n\t\t\t\tlet weekDay = date.getUTCDay();\n\n\t\t\t\tif (!$type.isNumber(firstDateOfWeek)) {\n\t\t\t\t\tfirstDateOfWeek = 1;\n\t\t\t\t}\n\n\t\t\t\tif (weekDay >= firstDateOfWeek) {\n\t\t\t\t\twday = wday - weekDay + firstDateOfWeek;\n\t\t\t\t} else {\n\t\t\t\t\twday = wday - (7 + weekDay) + firstDateOfWeek;\n\t\t\t\t}\n\n\t\t\t\tdate.setUTCDate(wday);\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\n\t\t\t\tbreak;\n\t\t}\n\t\tif (!utc && unit != \"millisecond\") {\n\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\n\n\t\t\tif (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\n\t\t\t\tlet newTimeZoneOffset = date.getTimezoneOffset();\n\t\t\t\tif (newTimeZoneOffset != timeZoneOffset) {\n\t\t\t\t\tlet diff = newTimeZoneOffset - timeZoneOffset;\n\n\t\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + diff);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn date;\n\t}\n\telse {\n\t\tif (isNaN(date.getTime())) {\n\t\t\treturn date;\n\t\t}\n\t\tlet initialTime = date.getTime();\n\t\tlet tzoffset = timezone.offsetUTC(date);\n\t\tlet timeZoneOffset = date.getTimezoneOffset();\n\t\tlet parsedDate = timezone.parseDate(date);\n\t\tlet year = parsedDate.year;\n\t\tlet month = parsedDate.month;\n\t\tlet day = parsedDate.day;\n\t\tlet hour = parsedDate.hour;\n\t\tlet minute = parsedDate.minute;\n\t\tlet second = parsedDate.second;\n\t\tlet millisecond = parsedDate.millisecond;\n\t\tlet weekday = parsedDate.weekday;\n\n\t\tlet offsetDif = tzoffset - timeZoneOffset;\n\n\t\tswitch (unit) {\n\n\t\t\tcase \"day\":\n\t\t\t\tif (count > 1 && firstDate) {\n\t\t\t\t\tfirstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\n\t\t\t\t\tlet difference = date.getTime() - firstDate.getTime();\n\t\t\t\t\tlet unitCount = Math.floor(difference / getDuration(\"day\") / count);\n\t\t\t\t\tlet duration = getDuration(\"day\", unitCount * count);\n\t\t\t\t\tdate.setTime(firstDate.getTime() + duration);\n\n\t\t\t\t\tparsedDate = timezone.parseDate(date);\n\n\t\t\t\t\tyear = parsedDate.year;\n\t\t\t\t\tmonth = parsedDate.month;\n\t\t\t\t\tday = parsedDate.day;\n\t\t\t\t}\n\n\t\t\t\thour = 0;\n\t\t\t\tminute = offsetDif;\n\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"second\":\n\t\t\t\tminute += offsetDif;\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tsecond = Math.floor(second / count) * count;\n\t\t\t\t}\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"millisecond\":\n\t\t\t\tminute += offsetDif;\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tmillisecond = Math.floor(millisecond / count) * count;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"hour\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\thour = Math.floor(hour / count) * count;\n\t\t\t\t}\n\n\t\t\t\tminute = offsetDif;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"minute\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tminute = Math.floor(minute / count) * count;\n\t\t\t\t}\n\t\t\t\tminute += offsetDif;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"month\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tmonth = Math.floor(month / count) * count;\n\t\t\t\t}\n\t\t\t\tday = 1;\n\t\t\t\thour = 0;\n\t\t\t\tminute = offsetDif;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"year\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tyear = Math.floor(year / count) * count;\n\t\t\t\t}\n\t\t\t\tmonth = 0;\n\t\t\t\tday = 1;\n\t\t\t\thour = 0;\n\t\t\t\tminute = offsetDif;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"week\":\n\t\t\t\tif (!$type.isNumber(firstDateOfWeek)) {\n\t\t\t\t\tfirstDateOfWeek = 1;\n\t\t\t\t}\n\n\t\t\t\tif (weekday >= firstDateOfWeek) {\n\t\t\t\t\tday = day - weekday + firstDateOfWeek;\n\t\t\t\t} else {\n\t\t\t\t\tday = day - (7 + weekday) + firstDateOfWeek;\n\t\t\t\t}\n\n\t\t\t\thour = 0;\n\t\t\t\tminute = offsetDif;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\t\t}\n\n\n\n\t\tdate = new Date(year, month, day, hour, minute, second, millisecond);\n\n\t\t// fix to solve #101989\n\t\tconst newTime = date.getTime();\n\t\tlet hDuration = 3600000;\n\t\tif (unit == \"hour\") {\n\t\t\thDuration = 3600000 * count;\n\t\t}\n\n\t\tif (newTime + hDuration <= initialTime) {\n\t\t\tif (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\n\t\t\t\tdate = new Date(newTime + hDuration);\n\t\t\t}\n\t\t}\n\t\t// end of fix\n\n\t\tlet newTimeZoneOffset = date.getTimezoneOffset();\n\t\tlet newTzoffset = timezone.offsetUTC(date);\n\t\tlet newDiff = newTzoffset - newTimeZoneOffset;\n\n\t\tif (newDiff != offsetDif) {\n\t\t\tdate.setTime(date.getTime() + (newDiff - offsetDif) * 60000);\n\t\t}\n\n\t\treturn date;\n\t}\n}\n\n\n\n/**\n * @ignore\n */\nexport function chooseInterval(index: number, duration: number, gridCount: number, intervals: Array<ITimeInterval>): ITimeInterval {\n\tlet gridInterval: ITimeInterval = intervals[index];\n\tlet intervalDuration = getIntervalDuration(gridInterval);\n\n\tlet lastIndex = intervals.length - 1;\n\tif (index >= lastIndex) {\n\t\treturn { ...intervals[lastIndex] };\n\t}\n\n\tlet count = Math.ceil(duration / intervalDuration);\n\n\tif (duration < intervalDuration && index > 0) {\n\t\treturn { ...intervals[index - 1] };\n\t}\n\tif (count <= gridCount) {\n\t\treturn { ...intervals[index] };\n\t} else {\n\t\tif (index + 1 < intervals.length) {\n\t\t\treturn chooseInterval(index + 1, duration, gridCount, intervals);\n\t\t} else {\n\t\t\treturn { ...intervals[index] };\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nexport function getUnitValue(date: Date, unit: TimeUnit) {\n\tswitch (unit) {\n\t\tcase \"day\":\n\t\t\treturn date.getDate();\n\t\tcase \"second\":\n\t\t\treturn date.getSeconds();\n\t\tcase \"millisecond\":\n\t\t\treturn date.getMilliseconds();\n\t\tcase \"hour\":\n\t\t\treturn date.getHours();\n\t\tcase \"minute\":\n\t\t\treturn date.getMinutes();\n\t\tcase \"month\":\n\t\t\treturn date.getMonth();\n\t\tcase \"year\":\n\t\t\treturn date.getFullYear();\n\t\tcase \"week\":\n\t\t\treturn $utils.getWeek(date);\n\t}\n}\n", "import type { Root } from \"../../core/Root\";\nimport type { Chart } from \"./Chart\";\nimport type { Bullet } from \"./Bullet\";\nimport type { Graphics } from \"../../core/render/Graphics\";\nimport type { ILegendDataItem } from \"./Legend\";\nimport type { Template } from \"../../core/util/Template\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport type { Pattern } from \"./patterns/Pattern\";\n\nimport { Component, IComponentSettings, IComponentPrivate, DataItem, IComponentEvents, IComponentDataItem } from \"../../core/render/Component\";\nimport { List } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { percentInterpolate } from \"../../core/util/Animation\";\nimport { Percent } from \"../../core/util/Percent\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\n//import { Animations } from \"../../core/util/Animation\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $time from \"../../core/util/Time\";\n\n/**\n * Defines interface for a heat rule.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n */\nexport interface IHeatRule {\n\n\t/**\n\t * Target template.\n\t */\n\ttarget: Template<any>;\n\n\t/**\n\t * The setting value to use for items if the lowest value.\n\t */\n\tmin?: any;\n\n\t/**\n\t * The setting value to use for items if the highest value.\n\t */\n\tmax?: any;\n\n\t/**\n\t * The setting value to use for items which do not have value at all.\n\t */\n\tneutral?: any;\n\n\t/**\n\t * Which data field to use when determining item's value.\n\t */\n\tdataField: string;\n\n\t/**\n\t * A setting key to set.\n\t */\n\tkey?: string;\n\n\t/**\n\t * Custom lowest value.\n\t */\n\tminValue?: number;\n\n\t/**\n\t * Custom highest value.\n\t */\n\tmaxValue?: number;\n\n\t/**\n\t * Use logarithmic scale when calculating intermediate setting values.\n\t *\n\t * @default false\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * A custom function that will set target element's settings.\n\t *\n\t * Can be used to do custom manipulation on complex objects requiring more\n\t * than modifying a setting.\n\t */\n\tcustomFunction?: (target: Sprite, minValue: number, maxValue: number, value?: any) => void;\n\n}\n\n\nexport interface ISeriesDataItem extends IComponentDataItem {\n\tid?: string;\n\tvalue?: number;\n\tvalueWorking?:number;\n\tvalueChange?: number;\n\tvalueChangePercent?: number;\n\tvalueChangeSelection?: number;\n\tvalueChangeSelectionPercent?: number;\n\tvalueChangePrevious?: number;\n\tvalueChangePreviousPercent?: number;\n\tvalueWorkingOpen?: number;\n\tvalueWorkingClose?: number;\n\n\tcustomValue?: number;\n\tcustomValueWorking?:number;\n\tcustomValueChange?: number;\n\tcustomValueChangePercent?: number;\n\tcustomValueChangeSelection?: number;\n\tcustomValueChangeSelectionPercent?: number;\n\tcustomValueChangePrevious?: number;\n\tcustomValueChangePreviousPercent?: number;\n}\n\nexport interface ISeriesSettings extends IComponentSettings {\n\n\t/**\n\t * Name of the series.\n\t */\n\tname?: string;\n\n\t/**\n\t * A key to look up in data for an id of the data item.\n\t */\n\tidField?: string;\n\n\t/**\n\t * A key to look up in data for a numeric value of the data item.\n\t *\n\t * Some series use it to display its elements. It can also be used in heat\n\t * rules.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A key to look up in data for a numeric customValue of the data item.\n\t *\n\t * Usually used for storing additional numeric information and heat rules.\n\t */\n\tcustomValueField?: string;\t\n\n\t/**\n\t * A text template to be used for label in legend.\n\t */\n\tlegendLabelText?: string;\n\n\t/**\n\t * A text template to be used for value label in legend.\n\t */\n\tlegendValueText?: string;\n\n\t/**\n\t * If set to `true` the series initial animation will be played item by item\n\t * rather than all at once.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedInterpolation?:boolean;\n\n\t/**\n\t * A delay in milliseconds to wait before starting animation of next data\n\t * item.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedDelay?:number;\n\n\t/**\n\t * A list of heat rules to apply on series elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n\t */\n\theatRules?:IHeatRule[];\n\n\t/**\n\t * If set to `true`, series will calculate aggregate values, e.g. change\n\t * percent, high, low, etc.\n\t *\n\t * Do not enable unless you are using such aggregate values in tooltips,\n\t * display data fields, heat rules, or similar.\n\t */\n\tcalculateAggregates?: boolean;\n\n\t/**\n\t * Series stroke color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Series fill color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Series fill pattern.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n\t * @since 5.10.0\n\t */\n\tfillPattern?: Pattern;\n\n\t/**\n\t * A data item representing series in a [[Legend]].\n\t *\n\t * @readonly\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface ISeriesPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: Chart;\n\tstartIndex?: number;\n\tendIndex?: number;\n\tadjustedStartIndex?:number;\n\n\tvalueAverage?: number;\n\tvalueCount?: number;\n\tvalueSum?: number;\n\tvalueAbsoluteSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n\tvalueOpen?: number;\n\tvalueClose?: number;\n\n\tcustomValueAverage?: number;\n\tcustomValueCount?: number;\n\tcustomValueSum?: number;\n\tcustomValueAbsoluteSum?: number;\n\tcustomValueLow?: number;\n\tcustomValueHigh?: number;\n\tcustomValueOpen?: number;\n\tcustomValueClose?: number;\t\n\n\tbaseValueSeries?: Series;\n}\n\nexport interface ISeriesEvents extends IComponentEvents {\n\n}\n\n/**\n * A base class for all series.\n */\nexport abstract class Series extends Component {\n\tpublic static className: string = \"Series\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Series.className]);\n\n\tdeclare public _settings: ISeriesSettings;\n\tdeclare public _privateSettings: ISeriesPrivate;\n\tdeclare public _dataItemSettings: ISeriesDataItem;\n\tdeclare public _events: ISeriesEvents;\n\n\tprotected _aggregatesCalculated: boolean = false;\n\tprotected _selectionAggregatesCalculated: boolean = false;\n\tprotected _dataProcessed: boolean = false;\n\n\tprotected _psi: number | undefined;\n\tprotected _pei: number | undefined;\n\n\t/**\n\t * A chart series belongs to.\n\t */\n\tpublic chart:Chart | undefined;\n\n\t/**\n\t * List of bullets to use for the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n\t */\n\tpublic bullets: List<<D extends DataItem<this[\"_dataItemSettings\"]>>(root: Root, series:Series, dataItem: D) => Bullet | undefined> = new List();\n\n\t/**\n\t * A [[Container]] series' bullets are stored in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, {width:p100, height:p100, position:\"absolute\"});\n\n\tprotected _afterNew() {\n\t\tthis.valueFields.push(\"value\", \"customValue\");\n\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"customData\", {});\n\n\t\tthis._disposers.push(this.bullets.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected _dispose(){\n\t\tthis.bulletsContainer.dispose(); // can be in a different parent\n\t\tsuper._dispose();\n\t}\n\n\tpublic startIndex():number {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(this.getPrivate(\"startIndex\", 0), len);\n\t}\n\n\tpublic endIndex():number {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(this.getPrivate(\"endIndex\", len), len)\n\t}\n\n\tprotected _handleBullets(dataItems:Array<DataItem<this[\"_dataItemSettings\"]>>){\n\t\t$array.each(dataItems, (dataItem)=>{\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif(bullets){\n\t\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\t\t})\n\n\t\tthis.markDirtyValues();\n\t}\n\n\t/**\n\t * Looks up and returns a data item by its ID.\n\t *\n\t * @param   id  ID\n\t * @return      Data item\n\t */\n\tpublic getDataItemById(id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\t\treturn $array.find(this.dataItems, (dataItem: any) => {\n\t\t\treturn dataItem.get(\"id\") == id;\n\t\t})\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif(this._shouldMakeBullet(dataItem)){\n\t\t\tdataItem.bullets = [];\n\n\t\t\tthis.bullets.each((bulletFunction) => {\n\t\t\t\tthis._makeBullet(dataItem, bulletFunction);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _shouldMakeBullet(_dataItem: DataItem<this[\"_dataItemSettings\"]>):boolean{\n\t\treturn true;\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction:(root: Root, series:Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?:number):Bullet | undefined{\n\t\tconst bullet = bulletFunction(this._root, this, dataItem);\n\t\tif(bullet){\n\t\t\tbullet._index = index;\n\t\t\tthis._makeBulletReal(dataItem, bullet);\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tprotected _makeBulletReal(dataItem: DataItem<this[\"_dataItemSettings\"]>, bullet:Bullet){\n\t\tlet sprite = bullet.get(\"sprite\");\n\n\t\tif (sprite) {\n\t\t\tsprite._setDataItem(dataItem);\n\t\t\tsprite.setRaw(\"position\", \"absolute\");\n\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t}\n\t\tbullet.series = this;\n\t\tdataItem.bullets!.push(bullet);\n\t}\n\n\t/**\n\t * Adds bullet directly to a data item.\n\t *\n\t * Please note: method accepts [[Bullet]] instance as a paramter, not a\n\t * reference to a function.\n\t *\n\t * You should add Bullet instance, not a method like you do it on series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/#Adding_directly_to_data_item} for more info\n\t * @since 5.6.0\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  bullet    Bullet instance\n\t */\n\tpublic addBullet(dataItem:DataItem<this[\"_dataItemSettings\"]>, bullet:Bullet){\n\t\tif(!dataItem.bullets){\n\t\t\tdataItem.bullets = [];\n\t\t}\n\t\tif(bullet){\n\t\t\tthis._makeBulletReal(dataItem, bullet);\n\t\t}\n\t}\t\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._aggregatesCalculated = false;\n\t\tthis._selectionAggregatesCalculated = false;\n\t}\n\n\tpublic _prepareChildren(){\n\t\tsuper._prepareChildren();\n\n\t\tlet startIndex = this.startIndex();\n\t\tlet endIndex = this.endIndex();\n\n\t\tif(this.isDirty(\"name\")){\n\t\t\tthis.updateLegendValue();\n\t\t}\n\n\t\tif(this.isDirty(\"heatRules\")){\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif(this.isPrivateDirty(\"baseValueSeries\")){\n\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\t\t\tif(baseValueSeries){\n\t\t\t\tthis._disposers.push(baseValueSeries.onPrivate(\"startIndex\", ()=>{\n\t\t\t\t\tthis.markDirtyValues();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\n\t\tconst calculateAggregates = this.get(\"calculateAggregates\");\n\t\tif(calculateAggregates){\n\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\t\tif (!this._aggregatesCalculated) {\n\t\t\t\t\tthis._calculateAggregates(0, this.dataItems.length);\n\t\t\t\t\tthis._aggregatesCalculated = true;\n\t\t\t\t\tif(startIndex != 0){\n\t\t\t\t\t\tthis._psi = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isPrivateDirty(\"adjustedStartIndex\")) && !this._selectionAggregatesCalculated) {\n\t\t\t\tif (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\n\t\t\t\t\t// void\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._calculateAggregates(startIndex, endIndex);\n\t\t\t\t}\n\n\t\t\t\tthis._selectionAggregatesCalculated = true;\n\t\t\t}\n\t\t}\n\n\t\tif(this.isDirty(\"tooltip\")){\n\t\t\tlet tooltip = this.get(\"tooltip\");\n\t\t\tif(tooltip){\n\t\t\t\ttooltip.hide(0);\n\t\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n\n\t\t\tlet markerRectangle: Graphics | undefined;\n\t\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tmarkerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tif(this.isVisible()){\n\t\t\t\t\t\tif (this.isDirty(\"stroke\")) {\n\t\t\t\t\t\t\tlet stroke = this.get(\"stroke\");\n\t\t\t\t\t\t\tmarkerRectangle.set(\"stroke\", stroke);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.isDirty(\"fill\")) {\n\t\t\t\t\t\t\tlet fill = this.get(\"fill\");\n\t\t\t\t\t\t\tmarkerRectangle.set(\"fill\", fill);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateLegendMarker(undefined);\n\t\t}\n\n\n\t\tif (this.bullets.length > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tif(endIndex < this.dataItems.length){\n\t\t\t\tendIndex++;\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (!dataItem.bullets) {\n\t\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tpublic _handleRemoved(){\n\t\t\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _adjustStartIndex(index:number):number{\n\t\treturn index;\n\t}\n\n\tprotected _calculateAggregates(startIndex: number, endIndex: number) {\n\t\tlet fields = this._valueFields;\n\n\t\tif (!fields) {\n\t\t\tthrow new Error(\"No value fields are set for the series.\");\n\t\t}\n\n\t\tconst sum: { [index: string]: number } = {};\n\t\tconst absSum: { [index: string]: number } = {};\n\t\tconst count: { [index: string]: number } = {};\n\t\tconst low: { [index: string]: number } = {};\n\t\tconst high: { [index: string]: number } = {};\n\t\tconst open: { [index: string]: number } = {};\n\t\tconst close: { [index: string]: number } = {};\n\t\tconst average: { [index: string]: number } = {};\n\t\tconst previous: { [index: string]: number } = {};\n\n\t\t$array.each(fields, (key) => {\n\t\t\tsum[key] = 0;\n\t\t\tabsSum[key] = 0;\n\t\t\tcount[key] = 0;\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tlet change = key + \"Change\";\n\t\t\tlet changePercent = key + \"ChangePercent\";\n\t\t\tlet changePrevious = key + \"ChangePrevious\";\n\t\t\tlet changePreviousPercent = key + \"ChangePreviousPercent\";\n\t\t\tlet changeSelection = key + \"ChangeSelection\";\n\t\t\tlet changeSelectionPercent = key + \"ChangeSelectionPercent\";\n\n\t\t\tlet openKey = \"valueY\";\n\n\t\t\tif(key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\"){\n\t\t\t\topenKey = \"valueX\";\n\t\t\t}\n\n\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\t\t\tconst adjustedStartIndex = this.getPrivate(\"adjustedStartIndex\", startIndex);\n\n\t\t\tfor (let i = adjustedStartIndex; i < endIndex; i++) {\n\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\tif(dataItem){\n\t\t\t\t\tlet value = dataItem.get(<any>key)\n\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tcount[key]++;\n\t\t\t\t\t\tsum[key] += value;\n\n\t\t\t\t\t\tabsSum[key] += Math.abs(value);\n\n\t\t\t\t\t\taverage[key] = sum[key] / count[key];\n\n\t\t\t\t\t\tif (low[key] > value || low[key] == null) {\n\t\t\t\t\t\t\tlow[key] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (high[key] < value || high[key] == null) {\n\t\t\t\t\t\t\thigh[key] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tclose[key] = value;\n\n\t\t\t\t\t\tif (open[key] == null) {\n\t\t\t\t\t\t\topen[key] = value;\n\t\t\t\t\t\t\tprevious[key] = value;\n\n\t\t\t\t\t\t\tif(baseValueSeries){\n\t\t\t\t\t\t\t\topen[openKey] = baseValueSeries._getBase(openKey);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startIndex === 0) {\n\t\t\t\t\t\t\tdataItem.setRaw(<any>(change), value - open[openKey]);\n\t\t\t\t\t\t\tdataItem.setRaw(<any>(changePercent), (value - open[openKey]) / open[openKey] * 100);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePrevious), value - previous[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changeSelection), value - open[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\n\n\t\t\t\t\t\tprevious[key] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(endIndex < this.dataItems.length - 1){\n\t\t\t\tconst dataItem = this.dataItems[endIndex];\n\t\t\t\tif(dataItem){\n\t\t\t\t\tlet value = dataItem.get(<any>key)\n\t\t\t\t\tdataItem.setRaw(<any>(changePrevious), value - previous[openKey]);\n\t\t\t\t\tdataItem.setRaw(<any>(changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelection), value - open[openKey]);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(startIndex > 0){\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tdelete previous[key];\n\n\t\t\tfor (let i = startIndex; i < adjustedStartIndex; i++) {\n\t\t\t\tconst dataItem = this.dataItems[i];\n\t\t\t\tif(dataItem){\n\t\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\n\t\t\t\t\tif (previous[key] == null) {\n\t\t\t\t\t\tprevious[key] = value;\n\t\t\t\t\t}\t\t\t\t\n\t\t\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePrevious), value - previous[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changeSelection), value - open[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\n\t\t\n\t\t\t\t\t\tprevious[key] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tthis.setPrivate(<any>(key + \"AverageSelection\"), average[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CountSelection\"), count[key]);\n\t\t\tthis.setPrivate(<any>(key + \"SumSelection\"), sum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSumSelection\"), absSum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"LowSelection\"), low[key]);\n\t\t\tthis.setPrivate(<any>(key + \"HighSelection\"), high[key]);\n\t\t\tthis.setPrivate(<any>(key + \"OpenSelection\"), open[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CloseSelection\"), close[key]);\n\t\t})\n\n\t\tif (startIndex === 0 && endIndex === this.dataItems.length) {\n\t\t\t$array.each(fields, (key) => {\n\t\t\t\tthis.setPrivate(<any>(key + \"Average\"), average[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Count\"), count[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Sum\"), sum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSum\"), absSum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Low\"), low[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"High\"), high[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Open\"), open[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Close\"), close[key]);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tthis._psi = this.startIndex();\n\t\tthis._pei = this.endIndex();\n\n\t\tif(this.isDirty(\"visible\")){\n\t\t\tthis.bulletsContainer.set(\"visible\", this.get(\"visible\"));\n\t\t}\n\n\n\t\t// Apply heat rules\n\t\tconst rules = this.get(\"heatRules\");\n\n\t\tif (this._valuesDirty && rules && rules.length > 0) {\n\t\t\t$array.each(rules, (rule) => {\n\t\t\t\tconst minValue = rule.minValue || this.getPrivate(<any>(rule.dataField + \"Low\")) || 0;\n\t\t\t\tconst maxValue = rule.maxValue || this.getPrivate(<any>(rule.dataField + \"High\")) || 0;\n\n\t\t\t\t$array.each(rule.target._entities, (target) => {\n\n\t\t\t\t\tconst value = target.dataItem.get(rule.dataField);\n\n\t\t\t\t\tif (!$type.isNumber(value)) {\n\t\t\t\t\t\tif(rule.neutral){\n\t\t\t\t\t\t\ttarget.set(rule.key, rule.neutral);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst states = target.states;\n\t\t\t\t\t\tif(states){\n\t\t\t\t\t\t\tconst defaultState = states.lookup(\"default\");\n\t\t\t\t\t\t\tif(defaultState && rule.neutral){\n\t\t\t\t\t\t\t\tdefaultState.set(rule.key, rule.neutral);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!rule.customFunction){\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (rule.customFunction) {\n\t\t\t\t\t\trule.customFunction.call(this, target, minValue, maxValue, value);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet percent: number;\n\t\t\t\t\t\tif (rule.logarithmic) {\n\t\t\t\t\t\t\tpercent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tpercent = (value - minValue) / (maxValue - minValue);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\n\t\t\t\t\t\t\tpercent = 0.5;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// fixes problems if all values are the same\n\t\t\t\t\t\tlet propertyValue;\n\t\t\t\t\t\tif ($type.isNumber(rule.min)) {\n\t\t\t\t\t\t\tpropertyValue = rule.min + (rule.max - rule.min) * percent;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (rule.min instanceof Color) {\n\t\t\t\t\t\t\tpropertyValue = Color.interpolate(percent, rule.min, rule.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (rule.min instanceof Percent) {\n\t\t\t\t\t\t\tpropertyValue = percentInterpolate(percent, rule.min, rule.max);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget.set(rule.key, propertyValue);\n\t\t\t\t\t\tconst states = target.states;\n\t\t\t\t\t\tif(states){\n\t\t\t\t\t\t\tconst defaultState = states.lookup(\"default\");\n\t\t\t\t\t\t\tif(defaultState){\n\t\t\t\t\t\t\t\tdefaultState.set(rule.key, propertyValue);\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif(this.get(\"visible\")){\n\t\t\tlet count = this.dataItems.length;\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tif(endIndex < count){\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t\tif(startIndex > 0){\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis._positionBullets(this.dataItems[i]);\n\t\t\t}\n\n\t\t\tfor (let i = endIndex; i < count; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tif(dataItem.bullets){\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\tif(bullet.get(\"dynamic\")){\n\n\t\t\t\t\tif(sprite){\n\t\t\t\t\t\tsprite._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\tsprite.markDirtySize();\n\t\t\t\t\t}\n\t\t\t\t\tif(sprite instanceof Container){\n\t\t\t\t\t\tsprite.walkChildren((child)=>{\n\t\t\t\t\t\t\tchild._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\t\tchild.markDirtySize();\n\n\t\t\t\t\t\t\tif(child instanceof Label){\n\t\t\t\t\t\t\t\tchild.text.markDirtyText();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(sprite instanceof Label && sprite.get(\"populateText\" as any)){\n\t\t\t\t\tsprite.text.markDirtyText();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _hideBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif (dataItem.bullets) {\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _positionBullet(_bullet: Bullet) {\n\t}\n\n\tpublic _placeBulletsContainer(chart:Chart){\n\t\tchart.bulletsContainer.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer(){\n\t\tconst bulletsContainer = this.bulletsContainer;\n\t\tif(bulletsContainer.parent){\n\t\t\tbulletsContainer.parent.children.removeValue(bulletsContainer)\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\t//super.disposeDataItem(dataItem); // does nothing\n\n\t\tconst bullets = dataItem.bullets;\n\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tbullet.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif(sprite){\n\t\t\t\t\tpromises.push(sprite.show(duration));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif(sprite){\t\t\t\t\t\n\t\t\t\t\tpromises.push(sprite.hide(duration));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\n\tprotected async _sequencedShowHide(show: boolean, duration?: number): Promise<void> {\n\t\tif (this.get(\"sequencedInterpolation\")) {\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tconst startIndex = this.startIndex();\n\t\t\t\tconst endIndex = this.endIndex();\n\n\t\t\t\tawait Promise.all($array.map(this.dataItems, async (dataItem, i) => {\n\t\t\t\t\tlet realDuration = duration || 0;\n\n\t\t\t\t\tif (i < startIndex - 10 || i > endIndex + 10) {\n\t\t\t\t\t\trealDuration = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t//let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\n\t\t\t\t\tlet delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\n\n\t\t\t\t\tawait $time.sleep(delay * (i - startIndex));\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tawait this.showDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tawait this.hideDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tawait Promise.all($array.map(this.dataItems, (dataItem) => {\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\treturn this.showDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn this.hideDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif(dataItem){\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\" as any) as DataItem<ILegendDataItem>;\n\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\t\tif (valueLabel) {\n\t\t\t\t\tconst text = valueLabel.text;\n\t\t\t\t\tlet txt = \"\";\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n\n\t\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t\t\ttext.markDirtyText();\n\t\t\t\t}\n\n\t\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tconst text = label.text;\n\t\t\t\t\tlet txt = \"\";\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n\n\t\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t\t\ttext.markDirtyText();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _onHide(){\n\t\tsuper._onHide();\n\n\t\tconst tooltip = this.getTooltip();\n\t\tif(tooltip){\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic unhoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _getBase(key: any): number {\n\t\tconst dataItem = this.dataItems[this.startIndex()];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(key);\n\t\t}\n\t\treturn 0;\n\t}\n}\n", "import { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\n\nexport interface IChartSettings extends IContainerSettings {\n}\n\nexport interface IChartPrivate extends IContainerPrivate {\n}\n\nexport interface IChartEvents extends IContainerEvents {\n}\n\n/**\n * A base class for all charts.\n */\nexport abstract class Chart extends Container {\n\tpublic static className: string = \"Chart\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Chart.className]);\n\n\tdeclare public _settings: IChartSettings;\n\tdeclare public _privateSettings: IChartPrivate;\n\tdeclare public _events: IChartEvents;\n\n\t/**\n\t * A [[Container]] chart places its elements in.\n\t * \n\t * @default Container.new()\n\t */\n\tpublic readonly chartContainer: Container = this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }));\n\n\t/**\n\t * A [[Container]] chart places its bullets in.\n\t * \n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 });\n\n}", "import { Chart, IChartSettings, IChartPrivate, IChartEvents } from \"./Chart\";\nimport { Container } from \"../../core/render/Container\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\n\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { PatternSet } from \"../../core/util/PatternSet\";\nimport type { Series } from \"./Series\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface ISerialChartSettings extends IChartSettings {\n\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * A [[PatternSet]] to use when asigning patterns for series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Pattern_sets} for more info\n\t * @since 5.10.0\n\t */\n\tpatterns?: PatternSet;\n\n}\n\nexport interface ISerialChartPrivate extends IChartPrivate {\n}\n\nexport interface ISerialChartEvents extends IChartEvents {\n}\n\n/**\n * A base class for all series-based charts.\n */\nexport abstract class SerialChart extends Chart {\n\tpublic static className: string = \"SerialChart\";\n\tpublic static classNames: Array<string> = Chart.classNames.concat([SerialChart.className]);\n\n\tdeclare public _settings: ISerialChartSettings;\n\tdeclare public _privateSettings: ISerialChartPrivate;\n\tdeclare public _seriesType: Series;\n\tdeclare public _events: ISerialChartEvents;\n\n\t/**\n\t * A [[Container]] where chart will store all series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly seriesContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A list of chart's series.\n\t */\n\tpublic readonly series: ListAutoDispose<this[\"_seriesType\"]> = new ListAutoDispose();\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.series);\n\n\t\tconst children = this.seriesContainer.children;\n\n\t\tthis._disposers.push(this.series.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (series) => {\n\t\t\t\t\tthis._removeSeries(series);\n\t\t\t\t})\n\t\t\t\tconst colors = this.get(\"colors\");\n\t\t\t\tif (colors) {\n\t\t\t\t\tcolors.reset();\n\t\t\t\t}\n\n\t\t\t\tconst patterns = this.get(\"patterns\");\n\t\t\t\tif (patterns) {\n\t\t\t\t\tpatterns.reset();\n\t\t\t\t}\n\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tchildren.moveValue(change.newValue);\n\t\t\t\tthis._processSeries(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tchildren.setIndex(change.index, change.newValue);\n\t\t\t\tthis._processSeries(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tchildren.insertIndex(change.index, change.newValue);\n\t\t\t\tthis._processSeries(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeSeries(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tchildren.moveValue(change.value, change.newIndex);\n\t\t\t\tthis._processSeries(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tseries.chart = this;\n\t\tseries._placeBulletsContainer(this);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._handleRemoved();\n\t\tif (!series.isDisposed()) {\n\t\t\tthis.seriesContainer.children.removeValue(series);\n\t\t\tseries._removeBulletsContainer();\n\t\t}\n\t}\n}\n", "import { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\r\nimport { Button } from \"../../core/render/Button\";\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { MultiDisposer, IDisposer } from \"../../core/util/Disposer\";\r\nimport { ZoomableContainer } from \"./ZoomableContainer\";\r\n\r\nexport interface IZoomable {\r\n\tzoomIn(): void;\r\n\tzoomOut(): void;\r\n\tgoHome(): void;\r\n}\r\n\r\nexport interface IZoomToolsSettings extends IContainerSettings {\r\n\r\n\t/**\r\n\t * A target element that zoom tools will control, e.g. [[ZoomableContainer]].\r\n\t */\r\n\ttarget?: IZoomable;\r\n\r\n}\r\n\r\nexport interface IZoomToolsPrivate extends IContainerPrivate {\r\n}\r\n\r\nexport interface IZoomToolsEvents extends IContainerEvents {\r\n}\r\n\r\n/**\r\n * A tool that displays button for zoomable targets.\r\n *\r\n * @since 5.8.0\r\n * @important\r\n */\r\nexport class ZoomTools extends Container {\r\n\r\n\tpublic static className: string = \"ZoomTools\";\r\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomTools.className]);\r\n\tdeclare public _events: IContainerEvents;\r\n\r\n\t/**\r\n\t * A [[Button]] for home.\r\n\t */\r\n\tpublic readonly homeButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"home\"] }));\r\n\r\n\t/**\r\n\t * A [[Button]] for zoom in.\r\n\t */\r\n\tpublic readonly plusButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"plus\"] }));\r\n\r\n\t/**\r\n\t * A [[Button]] for zoom out.\r\n\t */\r\n\tpublic readonly minusButton: Button = this.children.push(Button.new(this._root, { width: 35, height: 35, themeTags: [\"minus\"] }));\r\n\r\n\tdeclare public _settings: IZoomToolsSettings;\r\n\tdeclare public _privateSettings: IZoomToolsPrivate;\r\n\r\n\tprotected _disposer: MultiDisposer | undefined;\r\n\tprotected _targetDisposer: IDisposer | undefined;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.set(\"position\", \"absolute\");\r\n\r\n\t\tthis.set(\"layout\", this._root.verticalLayout);\r\n\t\tthis.addTag(\"zoomtools\");\r\n\r\n\t\tthis.plusButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\r\n\t\tthis.minusButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\r\n\t\tthis.homeButton.setAll({\r\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\r\n\t\t\tlayout: undefined\r\n\t\t});\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tif (this.isDirty(\"target\")) {\r\n\t\t\tconst target = this.get(\"target\");\r\n\r\n\t\t\tconst previous = this._prevSettings.target;\r\n\t\t\tif (target) {\r\n\t\t\t\tif (target instanceof ZoomableContainer) {\r\n\t\t\t\t\tthis._targetDisposer = this.addDisposer(target.contents.on(\"scale\", (scale) => {\r\n\t\t\t\t\t\tif (scale == target.get(\"minZoomLevel\")) {\r\n\t\t\t\t\t\t\tthis.minusButton.set(\"disabled\", true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.minusButton.set(\"disabled\", false)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (scale == target.get(\"maxZoomLevel\")) {\r\n\t\t\t\t\t\t\tthis.plusButton.set(\"disabled\", true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.plusButton.set(\"disabled\", false)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}))\r\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\r\n\t\t\t\t\t\tif (target.get(\"scale\") == target.get(\"minZoomLevel\")) {\r\n\t\t\t\t\t\t\tthis.minusButton.set(\"disabled\", true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._disposer = new MultiDisposer([\r\n\t\t\t\t\tthis.plusButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.zoomIn()\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis.minusButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.zoomOut()\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis.homeButton.events.on(\"click\", () => {\r\n\t\t\t\t\t\ttarget.goHome()\r\n\t\t\t\t\t})])\r\n\t\t\t}\r\n\r\n\t\t\tif (previous) {\r\n\t\t\t\tif (this._disposer) {\r\n\t\t\t\t\tthis._disposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t\tif (this._targetDisposer) {\r\n\t\t\t\t\tthis._targetDisposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n", "import type { InterfaceColors, IInterfaceColorsSettings } from \"../core/util/InterfaceColors\";\n\nimport { Theme } from \"../core/Theme\";\nimport { p100, p50 } from \"../core/util/Percent\";\nimport { Color } from \"../core/util/Color\";\nimport { GridLayout } from \"../core/render/GridLayout\";\n\nimport * as $ease from \"../core/util/Ease\";\n\n\ninterface Settable<A> {\n\t_settings: A;\n\tset<K extends keyof A>(key: K, value: A[K]): void;\n}\n\n/**\n * @ignore\n */\nexport function setColor<A, K extends keyof A>(rule: Settable<A>, key: K, ic: InterfaceColors, name: keyof IInterfaceColorsSettings) {\n\t// TODO this shouldn't use get, figure out a better way\n\trule.set(key, ic.get(name) as any);\n\n\tic.on(name, (value) => {\n\t\trule.set(key, value as any);\n\t});\n}\n\n/**\n * @ignore\n */\nexport class DefaultTheme extends Theme {\n\tprotected setupDefaultRules() {\n\t\tsuper.setupDefaultRules();\n\n\t\tconst language = this._root.language;\n\n\t\tconst ic = this._root.interfaceColors;\n\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\tconst verticalLayout = this._root.verticalLayout;\n\n\t\tconst r = this.rule.bind(this);\n\n\n\t\t/**\n\t\t * ========================================================================\n\t\t * core\n\t\t * ========================================================================\n\t\t */\n\n\t\tr(\"InterfaceColors\").setAll({\n\t\t\tstroke: Color.fromHex(0xe5e5e5),\n\t\t\tfill: Color.fromHex(0xf3f3f3),\n\t\t\tprimaryButton: Color.fromHex(0x6794dc),\n\t\t\tprimaryButtonHover: Color.fromHex(0x6771dc),\n\t\t\tprimaryButtonDown: Color.fromHex(0x68dc76),\n\t\t\tprimaryButtonActive: Color.fromHex(0x68dc76),\n\t\t\tprimaryButtonDisabled: Color.fromHex(0xdadada),\n\t\t\tprimaryButtonTextDisabled: Color.fromHex(0xffffff),\n\t\t\tprimaryButtonText: Color.fromHex(0xffffff),\n\t\t\tprimaryButtonStroke: Color.fromHex(0xffffff),\n\t\t\tsecondaryButton: Color.fromHex(0xd9d9d9),\n\t\t\tsecondaryButtonHover: Color.fromHex(0xa3a3a3),\n\t\t\tsecondaryButtonDown: Color.fromHex(0x8d8d8d),\n\t\t\tsecondaryButtonActive: Color.fromHex(0xe6e6e6),\n\t\t\tsecondaryButtonText: Color.fromHex(0x000000),\n\t\t\tsecondaryButtonStroke: Color.fromHex(0xffffff),\n\t\t\tgrid: Color.fromHex(0x000000),\n\t\t\tbackground: Color.fromHex(0xffffff),\n\t\t\talternativeBackground: Color.fromHex(0x000000),\n\t\t\ttext: Color.fromHex(0x000000),\n\t\t\talternativeText: Color.fromHex(0xffffff),\n\t\t\tdisabled: Color.fromHex(0xadadad),\n\t\t\tpositive: Color.fromHex(0x50b300),\n\t\t\tnegative: Color.fromHex(0xb30000)\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"ColorSet\");\n\n\t\t\trule.setAll({\n\t\t\t\tpassOptions: {\n\t\t\t\t\thue: 0.05,\n\t\t\t\t\tsaturation: 0,\n\t\t\t\t\tlightness: 0\n\t\t\t\t},\n\t\t\t\tcolors: [\n\t\t\t\t\tColor.fromHex(0x67b7dc)\n\t\t\t\t],\n\t\t\t\tstep: 1,\n\t\t\t\t//baseColor: Color.fromRGB(103, 183, 220),\n\t\t\t\t//count: 20,\n\t\t\t\treuse: false,\n\t\t\t\tstartIndex: 0\n\t\t\t});\n\n\t\t\trule.setPrivate(\"currentStep\", 0);\n\t\t\trule.setPrivate(\"currentPass\", 0);\n\t\t}\n\n\t\tr(\"Entity\").setAll({\n\t\t\tstateAnimationDuration: 0,\n\t\t\tstateAnimationEasing: $ease.out($ease.cubic)\n\t\t});\n\n\t\tr(\"Component\").setAll({\n\t\t\tinterpolationDuration: 0,\n\t\t\tinterpolationEasing: $ease.out($ease.cubic)\n\t\t});\n\n\t\tr(\"Sprite\").setAll({\n\t\t\tvisible: true,\n\t\t\tscale: 1,\n\t\t\topacity: 1,\n\t\t\trotation: 0,\n\t\t\tposition: \"relative\",\n\t\t\ttooltipX: p50,\n\t\t\ttooltipY: p50,\n\t\t\ttooltipPosition: \"fixed\",\n\t\t\tisMeasured: true\n\t\t});\n\n\t\tr(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\n\n\t\tr(\"Container\").setAll({\n\t\t\tinteractiveChildren: true,\n\t\t\tsetStateOnChildren: false\n\t\t});\n\n\t\tr(\"Graphics\").setAll({\n\t\t\tstrokeWidth: 1\n\t\t});\n\n\n\t\tr(\"Chart\").setAll({\n\t\t\twidth: p100,\n\t\t\theight: p100,\n\t\t\tinteractiveChildren: false\n\t\t});\n\n\t\tr(\"ZoomableContainer\").setAll({\n\t\t\twidth: p100,\n\t\t\theight: p100,\n\t\t\twheelable: true,\n\t\t\tpinchZoom: true,\n\t\t\tmaxZoomLevel: 32,\n\t\t\tminZoomLevel: 1,\n\t\t\tzoomStep: 2,\n\t\t\tanimationEasing: $ease.out($ease.cubic),\n\t\t\tanimationDuration: 600,\n\t\t\tmaxPanOut: 0.4\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: alignment\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\n\t\t\tcenterX: p50,\n\t\t\tx: p50\n\t\t});\n\n\t\tr(\"Sprite\", [\"vertical\", \"center\"]).setAll({\n\t\t\tcenterY: p50,\n\t\t\ty: p50\n\t\t});\n\n\t\tr(\"Container\", [\"horizontal\", \"layout\"]).setAll({\n\t\t\tlayout: horizontalLayout\n\t\t});\n\n\t\tr(\"Container\", [\"vertical\", \"layout\"]).setAll({\n\t\t\tlayout: verticalLayout\n\t\t});\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: patterns\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Pattern\").setAll({\n\t\t\trepetition: \"repeat\",\n\t\t\twidth: 50,\n\t\t\theight: 50,\n\t\t\trotation: 0,\n\t\t\tfillOpacity: 1\n\t\t});\n\n\t\tr(\"LinePattern\").setAll({\n\t\t\tgap: 6,\n\t\t\tcolorOpacity: 1,\n\t\t\twidth: 49,\n\t\t\theight: 49\n\t\t});\n\n\t\tr(\"RectanglePattern\").setAll({\n\t\t\tgap: 6,\n\t\t\tcheckered: false,\n\t\t\tcentered: true,\n\t\t\tmaxWidth: 5,\n\t\t\tmaxHeight: 5,\n\t\t\twidth: 48,\n\t\t\theight: 48,\n\t\t\tstrokeWidth: 0\n\t\t});\n\n\t\tr(\"CirclePattern\").setAll({\n\t\t\tgap: 5,\n\t\t\tcheckered: false,\n\t\t\tcentered: false,\n\t\t\tradius: 3,\n\t\t\tstrokeWidth: 0,\n\t\t\twidth: 45,\n\t\t\theight: 45\n\t\t});\n\n\t\tr(\"GrainPattern\").setAll({\n\t\t\twidth: 200,\n\t\t\theight: 200,\n\t\t\tcolors: [Color.fromHex(0x000000)],\n\t\t\tsize: 1,\n\t\t\thorizontalGap: 0,\n\t\t\tverticalGap: 0,\n\t\t\tdensity: 1,\n\t\t\tminOpacity: 0,\n\t\t\tmaxOpacity: 0.2\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"PatternSet\");\n\n\t\t\trule.setAll({\n\t\t\t\tstep: 1\n\t\t\t});\n\n\t\t\tsetColor(rule, \"color\", ic, \"stroke\");\n\t\t}\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: gradients\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"LinearGradient\").setAll({\n\t\t\trotation: 90\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Legend\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Legend\").setAll({\n\t\t\tfillField: \"fill\",\n\t\t\tstrokeField: \"stroke\",\n\t\t\tnameField: \"name\",\n\t\t\tlayout: GridLayout.new(this._root, {}),\n\t\t\tlayer: 30,\n\t\t\tclickTarget: \"itemContainer\"\n\t\t});\n\n\t\t// Class: Container\n\t\tr(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\n\t\t\tpaddingLeft: 5,\n\t\t\tpaddingRight: 5,\n\t\t\tpaddingBottom: 5,\n\t\t\tpaddingTop: 5,\n\t\t\tlayout: horizontalLayout,\n\t\t\tsetStateOnChildren: true,\n\t\t\tinteractiveChildren: false,\n\t\t\tariaChecked: true,\n\t\t\tfocusable: true,\n\t\t\tariaLabel: language.translate(\"Press ENTER to toggle\"),\n\t\t\trole: \"checkbox\"\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tfillOpacity: 0,\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\n\t\t}\n\n\t\tr(\"Container\", [\"legend\", \"marker\"]).setAll({\n\t\t\tsetStateOnChildren: true,\n\t\t\tcenterY: p50,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingRight: 0,\n\t\t\tpaddingBottom: 0,\n\t\t\tpaddingTop: 0,\n\t\t\twidth: 18,\n\t\t\theight: 18\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\n\t\t\twidth: p100,\n\t\t\theight: p100,\n\t\t\tcornerRadiusBL: 3,\n\t\t\tcornerRadiusTL: 3,\n\t\t\tcornerRadiusBR: 3,\n\t\t\tcornerRadiusTR: 3\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"disabled\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\n\t\t}\n\n\t\tr(\"Label\", [\"legend\", \"label\"]).setAll({\n\t\t\tcenterY: p50,\n\t\t\tmarginLeft: 5,\n\t\t\tpaddingRight: 0,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingTop: 0,\n\t\t\tpaddingBottom: 0,\n\t\t\tpopulateText: true\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"disabled\");\n\t\t}\n\n\t\tr(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\n\t\t\tcenterY: p50,\n\t\t\tmarginLeft: 5,\n\t\t\tpaddingRight: 0,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingTop: 0,\n\t\t\tpaddingBottom: 0,\n\t\t\twidth: 50,\n\t\t\tcenterX: p100,\n\t\t\tpopulateText: true\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"disabled\");\n\t\t}\n\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: HeatLegend\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"HeatLegend\").setAll({\n\t\t\tstepCount: 1\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\n\t\t\tcornerRadiusTR: 0,\n\t\t\tcornerRadiusBR: 0,\n\t\t\tcornerRadiusTL: 0,\n\t\t\tcornerRadiusBL: 0\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\n\t\t\theight: p100,\n\t\t\twidth: 15\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\n\t\t\twidth: p100,\n\t\t\theight: 15\n\t\t});\n\n\t\tr(\"HeatLegend\", [\"vertical\"]).setAll({\n\t\t\theight: p100\n\t\t});\n\n\t\tr(\"HeatLegend\", [\"horizontal\"]).setAll({\n\t\t\twidth: p100\n\t\t});\n\n\t\tr(\"Label\", [\"heatlegend\", \"start\"]).setAll({\n\t\t\tpaddingLeft: 5,\n\t\t\tpaddingRight: 5,\n\t\t\tpaddingTop: 5,\n\t\t\tpaddingBottom: 5\n\t\t});\n\n\t\tr(\"Label\", [\"heatlegend\", \"end\"]).setAll({\n\t\t\tpaddingLeft: 5,\n\t\t\tpaddingRight: 5,\n\t\t\tpaddingTop: 5,\n\t\t\tpaddingBottom: 5\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Labels\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\t{\n\t\t\tconst rule = r(\"Label\");\n\n\t\t\trule.setAll({\n\t\t\t\tpaddingTop: 8,\n\t\t\t\tpaddingBottom: 8,\n\t\t\t\tpaddingLeft: 10,\n\t\t\t\tpaddingRight: 10,\n\t\t\t\tfontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\n\t\t\t\tfontSize: \"1em\",\n\t\t\t\tpopulateText: false\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"text\");\n\t\t}\n\n\t\tr(\"RadialLabel\").setAll({\n\t\t\ttextType: \"regular\",\n\t\t\tcenterY: p50,\n\t\t\tcenterX: p50,\n\t\t\tinside: false,\n\t\t\tradius: 0,\n\t\t\tbaseRadius: p100,\n\t\t\torientation: \"auto\",\n\t\t\ttextAlign: \"center\"\n\t\t});\n\n\t\tr(\"EditableLabel\").setAll({\n\t\t\teditOn: \"click\",\n\t\t\t//setStateOnChildren: true,\n\t\t\tthemeTags: [\"editablelabel\"],\n\t\t\tmultiLine: true\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).setAll({\n\t\t\tfillOpacity: 0,\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tcornerRadiusBL: 3,\n\t\t\tcornerRadiusBR: 3,\n\t\t\tcornerRadiusTL: 3,\n\t\t\tcornerRadiusTR: 3,\n\t\t\tstrokeOpacity: 0,\n\t\t\tstroke: Color.fromHex(0x000000)\n\t\t});\n\n\t\t{\n\t\t\tr(\"RoundedRectangle\", [\"editablelabel\", \"background\"]).states.create(\"active\", {\n\t\t\t\tstrokeOpacity: 0.2,\n\t\t\t});\n\t\t}\n\n\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Elements and shapes\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"RoundedRectangle\").setAll({\n\t\t\tcornerRadiusTL: 8,\n\t\t\tcornerRadiusBL: 8,\n\t\t\tcornerRadiusTR: 8,\n\t\t\tcornerRadiusBR: 8\n\t\t});\n\n\t\tr(\"PointedRectangle\").setAll({\n\t\t\tpointerBaseWidth: 15,\n\t\t\tpointerLength: 10,\n\t\t\tcornerRadius: 8\n\t\t});\n\n\t\tr(\"Slice\").setAll({\n\t\t\tshiftRadius: 0,\n\t\t\tdRadius: 0,\n\t\t\tdInnerRadius: 0\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Tick\");\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: .15,\n\t\t\t\tisMeasured: false,\n\t\t\t\tlength: 4.5,\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tcrisp: true\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\n\t\t}\n\n\t\tr(\"Bullet\").setAll({\n\t\t\tlocationX: 0.5,\n\t\t\tlocationY: 0.5\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Tooltip\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Tooltip\").setAll({\n\t\t\tposition: \"absolute\",\n\t\t\tgetFillFromSprite: true,\n\t\t\tgetStrokeFromSprite: false,\n\t\t\tautoTextColor: true,\n\t\t\tpaddingTop: 9,\n\t\t\tpaddingBottom: 8,\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tmarginBottom: 5,\n\t\t\tpointerOrientation: \"vertical\",\n\t\t\tcenterX: p50,\n\t\t\tcenterY: p50,\n\t\t\tanimationEasing: $ease.out($ease.cubic),\n\t\t\texportable: false\n\t\t\t//layer: 100\n\t\t});\n\n\t\tr(\"Polygon\").setAll({\n\t\t\tanimationEasing: $ease.out($ease.cubic),\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.9,\n\t\t\t\tcornerRadius: 4,\n\t\t\t\tpointerLength: 4,\n\t\t\t\tpointerBaseWidth: 8,\n\t\t\t\tfillOpacity: 0.9,\n\t\t\t\tstroke: Color.fromHex(0xffffff)\n\t\t\t});\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"tooltip\"]);\n\n\t\t\trule.setAll({\n\t\t\t\trole: \"tooltip\",\n\t\t\t\tpopulateText: true,\n\t\t\t\tpaddingRight: 0,\n\t\t\t\tpaddingTop: 0,\n\t\t\t\tpaddingLeft: 0,\n\t\t\t\tpaddingBottom: 0\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\n\t\t}\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Button\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\").setAll({\n\t\t\tpaddingTop: 8,\n\t\t\tpaddingBottom: 8,\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tinteractive: true,\n\t\t\tlayout: horizontalLayout,\n\t\t\tinteractiveChildren: false,\n\t\t\tsetStateOnChildren: true,\n\t\t\tfocusable: true\n\t\t});\n\n\t\tr(\"Button\").states.create(\"hover\", {});\n\t\tr(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\n\t\tr(\"Button\").states.create(\"active\", {});\n\t\tr(\"Button\").states.create(\"disabled\", {\n\t\t\tforceInactive: true\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonActive\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDisabled\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"button\", \"icon\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"button\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonTextDisabled\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"button\", \"icon\"]);\n\t\t\trule.setAll({\n\t\t\t\tforceInactive: true\n\t\t\t})\n\t\t\tsetColor(rule, \"stroke\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"button\"]);\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * charts/xy: ZoomOutButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"zoom\"]).setAll({\n\t\t\tpaddingTop: 18,\n\t\t\tpaddingBottom: 18,\n\t\t\tpaddingLeft: 12,\n\t\t\tpaddingRight: 12,\n\t\t\tcenterX: 46,\n\t\t\tcenterY: -10,\n\t\t\ty: 0,\n\t\t\tx: p100,\n\t\t\trole: \"button\",\n\t\t\tariaLabel: language.translate(\"Zoom Out\"),\n\t\t\tlayer: 30\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadiusBL: 40,\n\t\t\t\tcornerRadiusBR: 40,\n\t\t\t\tcornerRadiusTL: 40,\n\t\t\t\tcornerRadiusTR: 40\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcrisp: true,\n\t\t\t\tstrokeOpacity: 0.7,\n\t\t\t\tdraw: (display: any) => {\n\t\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\t\tdisplay.lineTo(12, 0);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"primaryButtonText\");\n\t\t}\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: ResizeButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"resize\"]).setAll({\n\t\t\tpaddingTop: 9,\n\t\t\tpaddingBottom: 9,\n\t\t\tpaddingLeft: 13,\n\t\t\tpaddingRight: 13,\n\t\t\tdraggable: true,\n\t\t\tcenterX: p50,\n\t\t\tcenterY: p50,\n\t\t\tposition: \"absolute\",\n\t\t\trole: \"slider\",\n\t\t\tariaValueMin: \"0\",\n\t\t\tariaValueMax: \"100\",\n\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadiusBL: 40,\n\t\t\t\tcornerRadiusBR: 40,\n\t\t\t\tcornerRadiusTL: 40,\n\t\t\t\tcornerRadiusTR: 40\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButton\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonDown\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tinteractive: false,\n\t\t\t\tcrisp: true,\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tdraw: (display: any) => {\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\n\t\t}\n\n\t\tr(\"Button\", [\"resize\", \"vertical\"]).setAll({\n\t\t\trotation: 90,\n\t\t\tcursorOverStyle: \"ns-resize\"\n\t\t});\n\n\t\tr(\"Button\", [\"resize\", \"horizontal\"]).setAll({\n\t\t\tcursorOverStyle: \"ew-resize\"\n\t\t});\n\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: PlayButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"play\"]).setAll({\n\t\t\tpaddingTop: 13,\n\t\t\tpaddingBottom: 13,\n\t\t\tpaddingLeft: 14,\n\t\t\tpaddingRight: 14,\n\t\t\tariaLabel: language.translate(\"Play\"),\n\t\t\ttoggleKey: \"active\"\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tcornerRadiusBL: 100,\n\t\t\t\tcornerRadiusBR: 100,\n\t\t\t\tcornerRadiusTL: 100,\n\t\t\t\tcornerRadiusTR: 100\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"play\", \"icon\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstateAnimationDuration: 0,\n\t\t\t\tdx: 1,\n\t\t\t\tdraw: (display: any) => {\n\t\t\t\t\tdisplay.moveTo(0, -5);\n\t\t\t\t\tdisplay.lineTo(8, 0);\n\t\t\t\t\tdisplay.lineTo(0, 5);\n\t\t\t\t\tdisplay.lineTo(0, -5);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\tr(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\n\t\t\tstateAnimationDuration: 0\n\t\t})\n\n\t\tr(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\n\t\t\tstateAnimationDuration: 0,\n\t\t\tdraw: (display: any) => {\n\t\t\t\tdisplay.moveTo(-4, -5);\n\t\t\t\tdisplay.lineTo(-1, -5);\n\t\t\t\tdisplay.lineTo(-1, 5);\n\t\t\t\tdisplay.lineTo(-4, 5);\n\t\t\t\tdisplay.lineTo(-4, -5);\n\n\t\t\t\tdisplay.moveTo(4, -5);\n\t\t\t\tdisplay.lineTo(1, -5);\n\t\t\t\tdisplay.lineTo(1, 5);\n\t\t\t\tdisplay.lineTo(4, 5);\n\t\t\t\tdisplay.lineTo(4, -5);\n\t\t\t}\n\t\t})\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: SwitchButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"switch\"]).setAll({\n\t\t\tpaddingTop: 4,\n\t\t\tpaddingBottom: 4,\n\t\t\tpaddingLeft: 4,\n\t\t\tpaddingRight: 4,\n\t\t\tariaLabel: language.translate(\"Press ENTER to toggle\"),\n\t\t\ttoggleKey: \"active\",\n\t\t\twidth: 40,\n\t\t\theight: 24,\n\t\t\tlayout: null\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tcornerRadiusBL: 100,\n\t\t\t\tcornerRadiusBR: 100,\n\t\t\t\tcornerRadiusTL: 100,\n\t\t\t\tcornerRadiusTR: 100\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Circle\", [\"switch\", \"icon\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tradius: 8,\n\t\t\t\tcenterY: 0,\n\t\t\t\tcenterX: 0,\n\t\t\t\tdx: 0\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\tr(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\n\t\t\tdx: 16\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Scrollbar\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Scrollbar\").setAll({\n\t\t\tstart: 0,\n\t\t\tend: 1,\n\t\t\tlayer: 30,\n\t\t\tanimationEasing: $ease.out($ease.cubic)\n\t\t});\n\n\t\tr(\"Scrollbar\", [\"vertical\"]).setAll({\n\t\t\tmarginRight: 13,\n\t\t\tmarginLeft: 13,\n\t\t\tminWidth: 12,\n\t\t\theight: p100\n\t\t});\n\n\t\tr(\"Scrollbar\", [\"horizontal\"]).setAll({\n\t\t\tmarginTop: 13,\n\t\t\tmarginBottom: 13,\n\t\t\tminHeight: 12,\n\t\t\twidth: p100\n\t\t});\n\n\t\tthis.rule(\"Button\", [\"scrollbar\"]).setAll({\n\t\t\texportable: false\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadiusTL: 8,\n\t\t\t\tcornerRadiusBL: 8,\n\t\t\t\tcornerRadiusTR: 8,\n\t\t\t\tcornerRadiusBR: 8,\n\t\t\t\tfillOpacity: 0.8,\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"fill\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\n\n\t\t\trule.setAll({\n\t\t\t\trole: \"slider\",\n\t\t\t\tariaLive: \"polite\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tdraggable: true\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonDown\");\n\t\t}\n\n\t\tr(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\n\t\t\tx: p50,\n\t\t\twidth: p100,\n\t\t\tcenterX: p50,\n\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\n\t\t\ty: p50,\n\t\t\tcenterY: p50,\n\t\t\theight: p100,\n\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\n\t\t});\n\n\t\t// @todo: is this needed? used to be \"ContentScrollbar\"\n\t\t// r(\"Scrollbar\", [\"content?\"]).setAll({\n\t\t// \tmarginRight: 0,\n\t\t// \tmarginLeft: 5,\n\t\t// \tlayer: 5\n\t\t// });\n\n\t\t/**\n\t\t * ========================================================================\n\t\t * charts/xy\n\t\t * ========================================================================\n\t\t *\n\t\t * This needs to be in DefaultTheme because it's the only theme that is\n\t\t * automatically applied to Root, and tooltips different ancestors\n\t\t * than actual charts using them.\n\t\t */\n\n\t\t{\n\t\t\tconst rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadius: 0\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\"]).setAll({\n\t\t\trole: undefined\n\t\t});\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\n\t\t\ttextAlign: \"right\"\n\t\t});\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\n\t\t\ttextAlign: \"left\"\n\t\t});\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\n\t\t\ttextAlign: \"center\"\n\t\t});\n\n\t\tr(\"Tooltip\", [\"categoryaxis\"]).setAll({\n\t\t\tlabelText: \"{category}\"\n\t\t})\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * Shapes\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\t// Class: Graphics\n\t\tr(\"Star\").setAll({\n\t\t\tspikes: 5,\n\t\t\tinnerRadius: 5,\n\t\t\tradius: 10\n\t\t})\n\n\t\t// STOCK\n\t\tr(\"Tooltip\", [\"stock\"]).setAll({\n\t\t\tpaddingTop: 6,\n\t\t\tpaddingBottom: 5,\n\t\t\tpaddingLeft: 7,\n\t\t\tpaddingRight: 7\n\t\t});\n\n\t\tr(\"Tooltip\", ['indicator']).setAll({\n\t\t\tforceHidden: true\n\t\t});\n\n\t\tr(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\n\t\t\tpointerLength: 0,\n\t\t\tpointerBaseWidth: 0,\n\t\t\tcornerRadius: 3\n\t\t});\n\n\t\tr(\"Label\", [\"tooltip\", \"stock\"]).setAll({\n\t\t\tfontSize: \"0.8em\"\n\t\t});\n\n\t\t// resizer\n\n\t\tr(\"SpriteResizer\").setAll({\n\t\t\trotationStep: 10,\n\t\t\tisMeasured: false\n\t\t})\n\n\t\t{\n\t\t\tconst rule = r(\"Container\", [\"resizer\", \"grip\"]);\n\t\t\trule.states.create(\"hover\", {});\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.7,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfillOpacity: 1,\n\t\t\t\twidth: 12,\n\t\t\t\theight: 12\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\tfillOpacity: 0,\n\t\t\t\twidth: 20,\n\t\t\t\theight: 20\n\t\t\t});\n\n\t\t\trule.states.create(\"hover\", {\n\t\t\t\tfillOpacity: 0.3\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\tr(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\n\t\t\tcornerRadiusBL: 0,\n\t\t\tcornerRadiusBR: 0,\n\t\t\tcornerRadiusTL: 0,\n\t\t\tcornerRadiusTR: 0\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\n\t\t\tcornerRadiusBL: 0,\n\t\t\tcornerRadiusBR: 0,\n\t\t\tcornerRadiusTL: 0,\n\t\t\tcornerRadiusTR: 0\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\n\t\t\trule.setAll({\n\t\t\t\tstrokeDasharray: [2, 2],\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tstrokeWidth: 1\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\tr(\"Graphics\", [\"button\", \"plus\", \"icon\"]).setAll({\n\t\t\tx: p50,\n\t\t\ty: p50,\n\t\t\tdraw: (display) => {\n\t\t\t\tdisplay.moveTo(-4, 0);\n\t\t\t\tdisplay.lineTo(4, 0);\n\t\t\t\tdisplay.moveTo(0, -4);\n\t\t\t\tdisplay.lineTo(0, 4);\n\t\t\t}\n\t\t});\n\n\t\tr(\"Graphics\", [\"button\", \"minus\", \"icon\"]).setAll({\n\t\t\tx: p50,\n\t\t\ty: p50,\n\t\t\tdraw: (display) => {\n\t\t\t\tdisplay.moveTo(-4, 0);\n\t\t\t\tdisplay.lineTo(4, 0);\n\t\t\t}\n\t\t});\n\n\t\tr(\"Graphics\", [\"button\", \"home\", \"icon\"]).setAll({\n\t\t\tx: p50,\n\t\t\ty: p50,\n\t\t\tsvgPath: \"M 8 -1 L 6 -1 L 6 7 L 2 7 L 2 1 L -2 1 L -2 7 L -6 7 L -6 -1 L -8 -1 L 0 -9 L 8 -1 Z M 8 -1\"\n\t\t});\n\n\t\tr(\"Button\", [\"zoomtools\"]).setAll({\n\t\t\tmarginTop: 1,\n\t\t\tmarginBottom: 2\n\t\t})\n\n\t\tr(\"ZoomTools\").setAll({\n\t\t\tx: p100,\n\t\t\tcenterX: p100,\n\t\t\ty: p100,\n\t\t\tcenterY: p100,\n\t\t\tpaddingRight: 10,\n\t\t\tpaddingBottom: 10\n\t\t})\n\t}\n}\n"],
  "mappings": "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",
  "names": ["percent", "each", "percent", "color", "s", "hue2rgb", "p", "q", "percent", "percent", "color", "each", "AnimationState", "color", "s", "percent", "toIndex", "p0", "each", "state", "each", "animation", "template", "value", "remove", "tags", "themes", "tooltipMoveDp", "blur", "saturate", "events", "p0", "BlendMode", "isNaN", "each", "round", "round", "startIndex", "endIndex", "percent"]
}
